
------------------Synthesys of equation 1 has started!---------------

[('1', 'F00*int0'), ('2', 'F01*int0'), ('3', 'F02*int0'), ('4', 'F10*int0'), ('5', 'F11*X00'), ('6', 'F12*X01'), ('7', 'F20*int0'), ('8', 'F21*X10'), ('9', 'F22*X11'), ('10', '1+2'), ('11', '3+4'), ('12', '5+6'), ('13', '7+8'), ('14', '10+11'), ('15', '12+13'), ('16', '14+15'), ('17', '16+9')]

Graph nodes:
Name   Value   Op_Type   Conn
y00      None      Write      []
1      None      *      ['10']
2      None      *      ['10']
3      None      *      ['11']
4      None      *      ['11']
5      None      *      ['12']
6      None      *      ['12']
7      None      *      ['13']
8      None      *      ['13']
9      None      *      ['17']
10      None      +      ['14']
11      None      +      ['14']
12      None      +      ['15']
13      None      +      ['15']
14      None      +      ['16']
15      None      +      ['16']
16      None      +      ['17']
17      None      +      ['y00']
F00      None      Read      ['1']
int0      None      Read      ['1', '2', '3', '4', '7']
F01      None      Read      ['2']
F02      None      Read      ['3']
F10      None      Read      ['4']
F11      None      Read      ['5']
X00      None      Read      ['5']
F12      None      Read      ['6']
X01      None      Read      ['6']
F20      None      Read      ['7']
F21      None      Read      ['8']
X10      None      Read      ['8']
F22      None      Read      ['9']
X11      None      Read      ['9']
Labels for mode ASAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Labels for mode ALAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 5, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4]

1. DUMPED cp:  ['1', '10', '14', '16', '17', 'y00']
   Inputs & Coords:
     1 F00 (0, 0)
     1 int0 (0, 0)
     10 1 None
     10 2 None
     14 10 None
     14 11 None
     16 14 None
     16 15 None
     17 16 None
     17 9 None
     y00 17 None
   Pre inputs: [(0, 0), (0, 0)]
   
   Inputs  [[(0, 0), 2]]
   All psbl destinations:  [(0, 0)]
   Closest pe coord:  (0, 0)
   All schedules generated:  [[1, 2, 3, 4, 5, 6]]
   Final closest pe coord and schedule  (0, 0) [1, 2, 3, 4, 5, 6]
Searching for other cps with nodes  ['2', '9', '11', '15']

2. DUMPED cp:  ['5', '12', '15']
   Inputs & Coords:
     5 F11 (0, 2)
     5 X00 (0, 3)
     12 5 None
     12 6 None
     15 12 None
     15 13 None
   Pre inputs: [(0, 2), (0, 3)]
   
   Inputs  [[(0, 2), 1], [(0, 3), 1]]
   All psbl destinations:  [(0, 2), (0, 3)]
   Closest pe coord:  (0, 2)
   All schedules generated:  [[2, 3, 4], [2, 3, 4]]
   Final closest pe coord and schedule  (0, 2) [2, 3, 4]
Searching for other cps with nodes  ['2', '6', '9', '11', '13']

3. DUMPED cp:  ['3', '11']
   Inputs & Coords:
     3 F02 (0, 1)
     3 int0 (0, 0)
     11 3 None
     11 4 None
   Pre inputs: [(0, 1), (0, 0)]
   
   Inputs  [[(0, 1), 1], [(0, 0), 1]]
   All psbl destinations:  [(0, 1)]
   Closest pe coord:  (0, 1)
   All schedules generated:  [[2, 3]]
   Final closest pe coord and schedule  (0, 1) [2, 3]
Searching for other cps with nodes  ['2', '4', '6', '9', '13']

4. DUMPED cp:  ['7', '13']
   Inputs & Coords:
     7 F20 (0, 4)
     7 int0 (0, 0)
     13 7 None
     13 8 None
   Pre inputs: [(0, 4), (0, 0)]
   
   Inputs  [[(0, 4), 1], [(0, 0), 1]]
   All psbl destinations:  [(0, 3), (0, 4)]
   Closest pe coord:  (0, 3)
   All schedules generated:  [[4, 5], [5, 6]]
   Final closest pe coord and schedule  (0, 3) [4, 5]
Searching for other cps with nodes  ['2', '4', '6', '8', '9']

5. DUMPED cp:  ['2']
   Inputs & Coords:
     2 F01 (0, 1)
     2 int0 (0, 0)
   Pre inputs: [(0, 1), (0, 0)]
   
   Inputs  [[(0, 1), 1], [(0, 0), 1]]
   All psbl destinations:  [(1, 0), (1, 1), (1, 0)]
   Closest pe coord:  (1, 0)
   All schedules generated:  [[3], [3], [3]]
   Final closest pe coord and schedule  (1, 0) [3]
Searching for other cps with nodes  ['4', '6', '8', '9']

6. DUMPED cp:  ['4']
   Inputs & Coords:
     4 F10 (0, 2)
     4 int0 (0, 0)
   Pre inputs: [(0, 2), (0, 0)]
   
   Inputs  [[(0, 2), 1], [(0, 0), 1]]
   All psbl destinations:  [(1, 1), (1, 2)]
   Closest pe coord:  (1, 1)
   All schedules generated:  [[4], [4]]
   Final closest pe coord and schedule  (1, 1) [4]
Searching for other cps with nodes  ['6', '8', '9']

7. DUMPED cp:  ['6']
   Inputs & Coords:
     6 F12 (0, 3)
     6 X01 (0, 4)
   Pre inputs: [(0, 3), (0, 4)]
   
   Inputs  [[(0, 3), 1], [(0, 4), 1]]
   All psbl destinations:  [(0, 4)]
   Closest pe coord:  (0, 4)
   All schedules generated:  [[2]]
   Final closest pe coord and schedule  (0, 4) [2]
Searching for other cps with nodes  ['8', '9']

8. DUMPED cp:  ['8']
   Inputs & Coords:
     8 F21 (1, 0)
     8 X10 (1, 0)
   Pre inputs: [(1, 0), (1, 0)]
   
   Inputs  [[(1, 0), 2]]
   All psbl destinations:  [(2, 0)]
   Closest pe coord:  (2, 0)
   All schedules generated:  [[2]]
   Final closest pe coord and schedule  (2, 0) [2]
Searching for other cps with nodes  ['9']

9. DUMPED cp:  ['9']
   Inputs & Coords:
     9 F22 (1, 1)
     9 X11 (1, 1)
   Pre inputs: [(1, 1), (1, 1)]
   
   Inputs  [[(1, 1), 2]]
   All psbl destinations:  [(1, 2)]
   Closest pe coord:  (1, 2)
   All schedules generated:  [[2]]
   Final closest pe coord and schedule  (1, 2) [2]
Searching for other cps with nodes  []

Input allocation by PEs:
(0, 0)  --->  ['F00', 'int0']
(0, 1)  --->  ['F01', 'F02']
(0, 2)  --->  ['F10', 'F11']
(0, 3)  --->  ['X00', 'F12']
(0, 4)  --->  ['X01', 'F20']
(1, 0)  --->  ['F21', 'X10']
(1, 1)  --->  ['F22', 'X11']

Final results before rescheduling (node.name, node.sched) by PEs: 
(0, 0)  --->  [('1', 1), ('10', 2), ('14', 3), ('16', 4), ('17', 5), ('y00', 6)]
(0, 2)  --->  [('5', 2), ('12', 3), ('15', 4)]
(0, 1)  --->  [('3', 2), ('11', 3)]
(0, 3)  --->  [('7', 4), ('13', 5)]
(1, 0)  --->  [('2', 3)]
(1, 1)  --->  [('4', 4)]
(0, 4)  --->  [('6', 2)]
(2, 0)  --->  [('8', 2)]
(1, 2)  --->  [('9', 2)]


RESCHEDULING
###### 8
     Pred 1 entered:  F21
     Check for pred "F21" =====> in (1, 0) ['F21', 'X10']
     Walked coords  [(1, 0), (2, 0)]
     1.0 Inputs are send from pred at step  3
     1.3 Putting inputs to DPR-X directly at node at step  6
     Pred 2 entered:  X10
     Check for pred "X10" =====> in (1, 0) ['F21', 'X10']
     Walked coords  [(1, 0), (2, 0)]
     1.0 Inputs are send from pred at step  5
     1.3 Putting inputs to DPR-X directly at node at step  8
     3.0 Arithmetic op is done at step  9
     4.2 Saving results to own MCLM at step  12
     (2, 0) ---> [[], [11], [9], [6, 8, 10], [5, 7]]
###### 7
     Pred 1 entered:  F20
     Check for pred "F20" =====> in (0, 4) ['X01', 'F20']
     Walked coords  [(0, 4), (0, 3)]
     1.0 Inputs are send from pred at step  3
     1.3 Putting inputs to DPR-X directly at node at step  6
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0']
     Walked coords  [(0, 0), (0, 1), (0, 2), (0, 3)]
     1.0 Inputs are send from pred at step  3
     1.3 Putting inputs to DPR-X directly at node at step  8
     3.0 Arithmetic op is done at step  9
     4.0 ---Notification is changed for 13 1
     4.0 Saving results to DPR2 directly at step  10
     (0, 3) ---> [[], [], [9], [6, 8, 10], [5, 7]]
###### 6
     Pred 1 entered:  F12
     Check for pred "F12" =====> in (0, 3) ['X00', 'F12']
     Walked coords  [(0, 3), (0, 4)]
     1.0 Inputs are send from pred at step  3
     1.2 Putting inputs to DPR2 directly at node at step  6
     Pred 2 entered:  X01
     2.0 Inputs loaded from MCLM to regs at node  DPR1  at step  5
     3.0 Arithmetic op is done at step  7
     4.2 Saving results to own MCLM at step  10
     (0, 4) ---> [[1, 4], [9], [7], [2, 3, 6, 5, 8], [4, 5]]
###### 5
     Pred 1 entered:  F11
     Pred 2 entered:  X00
     Check for pred "X00" =====> in (0, 3) ['X00', 'F12']
     Walked coords  [(0, 3), (0, 2)]
     1.0 Inputs are send from pred at step  5
     1.2 Putting inputs to DPR2 directly at node at step  8
     2.0 Inputs loaded from MCLM to regs at node  DPR1  at step  2
     3.0 Arithmetic op is done at step  9
     4.0 ---Notification is changed for 12 1
     4.0 Saving results to DPR2 directly at step  10
     (0, 2) ---> [[1], [], [9], [8, 2, 10], [6, 7]]
###### 4
     Pred 1 entered:  F10
     Check for pred "F10" =====> in (0, 2) ['F10', 'F11']
     Walked coords  [(0, 2), (1, 2), (1, 1)]
     1.0 Inputs are send from pred at step  4
     1.3 Putting inputs to DPR-X directly at node at step  8
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (1, 1)]
     1.0 Inputs are send from pred at step  5
     1.3 Putting inputs to DPR-X directly at node at step  9
     3.0 Arithmetic op is done at step  10
     4.2 Saving results to own MCLM at step  13
     (1, 1) ---> [[], [12], [10], [8, 9, 11], [7, 8]]
###### 3
     Pred 1 entered:  F02
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0']
     Walked coords  [(0, 0), (0, 1)]
     1.0 Inputs are send from pred at step  7
     1.2 Putting inputs to DPR2 directly at node at step  10
     2.0 Inputs loaded from MCLM to regs at node  DPR1  at step  2
     3.0 Arithmetic op is done at step  11
     4.0 ---Notification is changed for 11 1
     4.0 Saving results to DPR2 directly at step  12
     (0, 1) ---> [[1], [], [11], [10, 2, 12], [5, 9]]
###### 2
     Pred 1 entered:  F01
     Check for pred "F01" =====> in (0, 1) ['F01', 'F02']
     Walked coords  [(0, 1), (1, 1), (1, 0)]
     1.0 Inputs are send from pred at step  7
     1.3 Putting inputs to DPR-X directly at node at step  11
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0']
     Walked coords  [(0, 0), (1, 0)]
     1.0 Inputs are send from pred at step  9
     1.3 Putting inputs to DPR-X directly at node at step  12
     3.0 Arithmetic op is done at step  13
     4.2 Saving results to own MCLM at step  16
     (1, 0) ---> [[1, 3], [15], [13], [2, 3, 4, 5, 11, 12, 14], [4, 6, 7, 10, 11]]
###### 1
     Pred 1 entered:  F00
     Pred 2 entered:  int0
     2.0 Inputs loaded from MCLM to regs at node  DPR1  at step  10
     2.0 Inputs loaded from MCLM to regs at node  DPR2  at step  11
     3.0 Arithmetic op is done at step  12
     4.0 ---Notification is changed for 10 1
     4.0 Saving results to DPR2 directly at step  13
     (0, 0) ---> [[1, 3, 5, 7, 9, 10], [], [12], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13], [4, 6, 8, 10]]
###### 13
     Pred 1 entered:  7
     Pred 2 entered:  8
     Check for pred "8" =====> in (2, 0) ['8']
     Walked coords  [(2, 0), (2, 1), (2, 2), (2, 3), (1, 3), (0, 3)]
     1.0 Inputs are send from pred at step  15
     1.2 Putting inputs to DPR1 directly at node at step  22
     3.0 Arithmetic op is done at step  23
     4.2 Saving results to own MCLM at step  26
     (0, 3) ---> [[1, 3], [25], [9, 23], [6, 8, 10, 2, 3, 4, 5, 22, 24], [5, 7, 4, 6, 21]]
###### 12
     Pred 1 entered:  5
     Pred 2 entered:  6
     Check for pred "6" =====> in (0, 4) ['X01', 'F20', '6']
     Walked coords  [(0, 4), (0, 3), (0, 2)]
     1.0 Inputs are send from pred at step  13
     1.2 Putting inputs to DPR1 directly at node at step  17
     3.0 Arithmetic op is done at step  18
     4.0 ---Notification is changed for 15 1
     4.0 Saving results to DPR2 directly at step  19
     (0, 2) ---> [[1, 2], [], [9, 18], [8, 2, 10, 3, 4, 17, 19], [6, 7, 5, 16]]
###### 11
     Pred 1 entered:  3
     Pred 2 entered:  4
     Check for pred "4" =====> in (1, 1) ['F22', 'X11', '4']
     Walked coords  [(1, 1), (0, 1)]
     1.0 Inputs are send from pred at step  16
     1.2 Putting inputs to DPR1 directly at node at step  19
     3.0 Arithmetic op is done at step  20
     4.2 Saving results to own MCLM at step  23
     (0, 1) ---> [[1, 5], [22], [11, 20], [10, 2, 12, 6, 7, 19, 21], [5, 9, 8, 18]]
###### 10
     Pred 1 entered:  1
     Pred 2 entered:  2
     Check for pred "2" =====> in (1, 0) ['F21', 'X10', '2']
     Walked coords  [(1, 0), (0, 0)]
     1.0 Inputs are send from pred at step  19
     1.2 Putting inputs to DPR1 directly at node at step  22
     3.0 Arithmetic op is done at step  23
     4.0 ---Notification is changed for 14 1
     4.0 Saving results to DPR2 directly at step  24
     (0, 0) ---> [[1, 3, 5, 7, 9, 10], [], [12, 23], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 24], [4, 6, 8, 10, 21]]
###### 15
     Pred 1 entered:  12
     Pred 2 entered:  13
     Check for pred "13" =====> in (0, 3) ['X00', 'F12', '13']
     Walked coords  [(0, 3), (0, 2)]
     1.0 Inputs are send from pred at step  29
     1.2 Putting inputs to DPR1 directly at node at step  32
     3.0 Arithmetic op is done at step  33
     4.2 Saving results to own MCLM at step  36
     (0, 2) ---> [[1, 2], [35], [9, 18, 33], [8, 2, 10, 3, 4, 17, 19, 32, 34], [6, 7, 5, 16, 31]]
###### 14
     Pred 1 entered:  10
     Pred 2 entered:  11
     Check for pred "11" =====> in (0, 1) ['F01', 'F02', '11']
     Walked coords  [(0, 1), (0, 0)]
     1.0 Inputs are send from pred at step  26
     1.2 Putting inputs to DPR1 directly at node at step  29
     3.0 Arithmetic op is done at step  30
     4.0 ---Notification is changed for 16 1
     4.0 Saving results to DPR2 directly at step  31
     (0, 0) ---> [[1, 3, 5, 7, 9, 10], [], [12, 23, 30], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 24, 29, 31], [4, 6, 8, 10, 21, 28]]
###### 9
     Pred 1 entered:  F22
     Check for pred "F22" =====> in (1, 1) ['F22', 'X11', '4']
     Walked coords  [(1, 1), (1, 2)]
     1.0 Inputs are send from pred at step  3
     1.3 Putting inputs to DPR-X directly at node at step  6
     Pred 2 entered:  X11
     Check for pred "X11" =====> in (1, 1) ['F22', 'X11', '4']
     Walked coords  [(1, 1), (1, 2)]
     1.0 Inputs are send from pred at step  5
     1.3 Putting inputs to DPR-X directly at node at step  8
     3.0 Arithmetic op is done at step  9
     4.2 Saving results to own MCLM at step  12
     (1, 2) ---> [[], [11], [9], [6, 8, 10], [6, 5, 7]]
###### 16
     Pred 1 entered:  14
     Pred 2 entered:  15
     Check for pred "15" =====> in (0, 2) ['F10', 'F11', '15']
     Walked coords  [(0, 2), (0, 1), (0, 0)]
     1.0 Inputs are send from pred at step  39
     1.2 Putting inputs to DPR1 directly at node at step  43
     3.0 Arithmetic op is done at step  44
     4.0 ---Notification is changed for 17 1
     4.0 Saving results to DPR2 directly at step  45
     (0, 0) ---> [[1, 3, 5, 7, 9, 10], [], [12, 23, 30, 44], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 24, 29, 31, 43, 45], [4, 6, 8, 10, 21, 28, 42]]
###### 17
     Pred 1 entered:  16
     Pred 2 entered:  9
     Check for pred "9" =====> in (1, 2) ['9']
     Walked coords  [(1, 2), (1, 1), (1, 0), (0, 0)]
     1.0 Inputs are send from pred at step  16
     1.2 Putting inputs to DPR1 directly at node at step  21
     3.0 Arithmetic op is done at step  46
     4.2 Saving results to own MCLM at step  49
     (0, 0) ---> [[1, 3, 5, 7, 9, 10], [48], [12, 23, 30, 44, 46], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 24, 29, 31, 43, 45, 21, 47], [4, 6, 8, 10, 21, 28, 42, 20]]
###### y00
     Pred 1 entered:  17
     1.4 This is actually last node at step  49

Final results after rescheduling (node.name, node.sched): by PEs
(0, 0)  --->  [('1', 13), ('10', 24), ('14', 31), ('16', 45), ('17', 49), ('y00', 49)]
(0, 2)  --->  [('5', 10), ('12', 19), ('15', 36)]
(0, 1)  --->  [('3', 12), ('11', 23)]
(0, 3)  --->  [('7', 10), ('13', 26)]
(1, 0)  --->  [('2', 16)]
(1, 1)  --->  [('4', 13)]
(0, 4)  --->  [('6', 10)]
(2, 0)  --->  [('8', 12)]
(1, 2)  --->  [('9', 12)]

PE map 
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Node scheds and CCM commands:
1  --->  [(1, 0), ['CCM1', 1, 0, 'PE1'], [(0, 4), ['CCM1', 1, 1, 'PE1']], [(0, 0), ['CCM1', 1, 1, 'PE1']], [(0, 3), ['CCM1', 1, 1, 'PE1']], [(0, 2), ['CCM1', 1, 1, 'PE1']], [(0, 1), ['CCM1', 1, 1, 'PE1']], [(1, 1), ['CCM1', 1, 0, 'PE1']]]
2  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'DPR1']], [(0, 2), ['CCM1', 2, 0, 'PE1']], [(0, 1), ['CCM3', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']]]
3  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(1, 0), ['CCM1', 3, 1, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 3, 0, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 3, 1, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 3, 1, 'PE1']]]
6  --->  [(2, 0), ['CCM6', 'DPR1'], [(0, 3), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR1']]]
4  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM1', 4, 0, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']]]
5  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(0, 4), ['CCM3', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 5, 1, 'PE1']], [(0, 1), ['CCM1', 5, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']]]
8  --->  [(2, 0), ['CCM6', 'DPR2'], [(0, 3), ['CCM6', 'DPR2']], [(0, 4), ['CCM5', 'DPR3']], [(0, 2), ['CCM6', 'DPR2']], [(1, 1), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR2']]]
9  --->  [(2, 0), ['CCM4', '*'], [(0, 3), ['CCM4', '*']], [(0, 4), ['CCM2', 'MCLM1']], [(0, 2), ['CCM4', '*']], [(1, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 9, 0, 'PE1']], [(1, 2), ['CCM4', '*']]]
10  --->  [(2, 0), ['CCM5', 'DPR3'], [(0, 3), ['CCM5', 'DPR2']], [(0, 2), ['CCM5', 'DPR2']], [(1, 1), ['CCM4', '*']], [(0, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'DPR1']], [(0, 0), ['CCM1', 10, 1, 'PE1']], [(1, 2), ['CCM5', 'DPR3']]]
11  --->  [(2, 0), ['CCM2', 'MCLM1'], [(1, 1), ['CCM5', 'DPR3']], [(0, 1), ['CCM4', '*']], [(1, 0), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'DPR2']], [(0, 4), ['CCM1', 11, 2, 'PE1']], [(1, 2), ['CCM2', 'MCLM1']]]
7  --->  [(0, 4), ['CCM4', '*'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 7, 1, 'PE1']]]
12  --->  [(1, 1), ['CCM2', 'MCLM1'], [(0, 1), ['CCM5', 'DPR2']], [(1, 0), ['CCM6', 'DPR2']], [(0, 0), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']]]
13  --->  [(1, 0), ['CCM4', '*'], [(0, 0), ['CCM5', 'DPR2']], [(2, 0), ['CCM1', 13, 0, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']]]
14  --->  [(1, 0), ['CCM5', 'DPR3'], [(2, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 14, 2, 'PE1']], [(1, 2), ['CCM1', 14, 0, 'PE1']]]
15  --->  [(1, 0), ['CCM2', 'MCLM1'], [(2, 0), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']]]
22  --->  [(0, 3), ['CCM6', 'DPR1'], [(0, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'DPR1']]]
23  --->  [(0, 3), ['CCM4', '+'], [(0, 0), ['CCM4', '+']]]
24  --->  [(0, 3), ['CCM5', 'DPR3'], [(0, 0), ['CCM5', 'DPR2']], [(0, 1), ['CCM1', 24, 2, 'PE1']]]
25  --->  [(0, 3), ['CCM2', 'MCLM1'], [(0, 1), ['CCM3', 'PERouter']]]
17  --->  [(0, 2), ['CCM6', 'DPR1'], [(1, 0), ['CCM1', 17, 2, 'PE1']]]
18  --->  [(0, 2), ['CCM4', '+'], [(1, 0), ['CCM3', 'PERouter']]]
19  --->  [(0, 2), ['CCM5', 'DPR2'], [(0, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']]]
16  --->  [(1, 1), ['CCM6', 'NodeRouter'], [(1, 2), ['CCM6', 'NodeRouter']]]
20  --->  [(0, 1), ['CCM4', '+']]
21  --->  [(0, 1), ['CCM5', 'DPR3'], [(0, 0), ['CCM6', 'DPR1']]]
27  --->  [(0, 3), ['CCM1', 27, 2, 'PE1']]
28  --->  [(0, 3), ['CCM3', 'PERouter']]
29  --->  [(0, 3), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'DPR1']]]
32  --->  [(0, 2), ['CCM6', 'DPR1']]
33  --->  [(0, 2), ['CCM4', '+']]
34  --->  [(0, 2), ['CCM5', 'DPR3']]
35  --->  [(0, 2), ['CCM2', 'MCLM1']]
26  --->  [(0, 1), ['CCM6', 'NodeRouter']]
30  --->  [(0, 0), ['CCM4', '+']]
31  --->  [(0, 0), ['CCM5', 'DPR2']]
37  --->  [(0, 2), ['CCM1', 37, 2, 'PE1']]
38  --->  [(0, 2), ['CCM3', 'PERouter']]
39  --->  [(0, 2), ['CCM6', 'NodeRouter']]
43  --->  [(0, 0), ['CCM6', 'DPR1']]
44  --->  [(0, 0), ['CCM4', '+']]
45  --->  [(0, 0), ['CCM5', 'DPR2']]
46  --->  [(0, 0), ['CCM4', '+']]
47  --->  [(0, 0), ['CCM5', 'DPR3']]
48  --->  [(0, 0), ['CCM2', 'MCLM1']]

Router scheds and CCM commands:
4  --->  [(0, 1), (0, 2)]
5  --->  [(0, 1), (0, 3), [(1, 2), (1, 1)]]
6  --->  [(1, 0), (1, 1)]
8  --->  [(1, 1), (1, 0)]
16  --->  [(2, 1), (2, 2)]
17  --->  [(2, 1), (2, 3), [(1, 1), (1, 0)]]
18  --->  [(2, 1), (1, 3), [(1, 1), (0, 0)]]
19  --->  [(2, 1), (0, 3)]
14  --->  [(0, 3), (0, 2)]
40  --->  [(0, 1), (0, 0)]

Rescheduler marker:
(0, 0)  --->  [[1, 3, 5, 7, 9, 10], [48], [12, 23, 30, 44, 46], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 24, 29, 31, 43, 45, 21, 47], [4, 6, 8, 10, 21, 28, 42, 20]]
(0, 1)  --->  [[1, 5, 24], [22], [11, 20], [10, 2, 12, 6, 7, 19, 21, 25, 26], [5, 9, 8, 18, 27, 41]]
(0, 2)  --->  [[1, 2, 37], [35], [9, 18, 33], [8, 2, 10, 3, 4, 17, 19, 32, 34, 38, 39], [6, 7, 5, 16, 31, 40]]
(0, 3)  --->  [[1, 3, 27], [25], [9, 23], [6, 8, 10, 2, 3, 4, 5, 22, 24, 28, 29], [5, 7, 4, 6, 21, 15, 30]]
(0, 4)  --->  [[1, 4, 11], [9], [7], [2, 3, 6, 5, 8, 12, 13], [4, 5, 14]]
(0, 5)  --->  [[], [], [], [], []]
(0, 6)  --->  [[], [], [], [], []]
(0, 7)  --->  [[], [], [], [], []]
(0, 8)  --->  [[], [], [], [], []]
(0, 9)  --->  [[], [], [], [], []]
(1, 0)  --->  [[1, 3, 17], [15], [13], [2, 3, 4, 5, 11, 12, 14, 18, 19], [4, 6, 7, 10, 11, 20, 19]]
(1, 1)  --->  [[14, 1, 3], [12], [10], [8, 9, 11, 15, 16, 2, 3, 4, 5], [7, 8, 9, 17, 4, 6, 18]]
(1, 2)  --->  [[14], [11], [9], [6, 8, 10, 15, 16], [6, 5, 7, 17]]
(1, 3)  --->  [[], [], [], [], [20]]
(1, 4)  --->  [[], [], [], [], []]
(1, 5)  --->  [[], [], [], [], []]
(1, 6)  --->  [[], [], [], [], []]
(1, 7)  --->  [[], [], [], [], []]
(1, 8)  --->  [[], [], [], [], []]
(1, 9)  --->  [[], [], [], [], []]
(2, 0)  --->  [[13], [11], [9], [6, 8, 10, 14, 15], [5, 7, 16]]
(2, 1)  --->  [[], [], [], [], [17]]
(2, 2)  --->  [[], [], [], [], [18]]
(2, 3)  --->  [[], [], [], [], [19]]
(2, 4)  --->  [[], [], [], [], []]
(2, 5)  --->  [[], [], [], [], []]
(2, 6)  --->  [[], [], [], [], []]
(2, 7)  --->  [[], [], [], [], []]
(2, 8)  --->  [[], [], [], [], []]
(2, 9)  --->  [[], [], [], [], []]
(3, 0)  --->  [[], [], [], [], []]
(3, 1)  --->  [[], [], [], [], []]
(3, 2)  --->  [[], [], [], [], []]
(3, 3)  --->  [[], [], [], [], []]
(3, 4)  --->  [[], [], [], [], []]
(3, 5)  --->  [[], [], [], [], []]
(3, 6)  --->  [[], [], [], [], []]
(3, 7)  --->  [[], [], [], [], []]
(3, 8)  --->  [[], [], [], [], []]
(3, 9)  --->  [[], [], [], [], []]
(4, 0)  --->  [[], [], [], [], []]
(4, 1)  --->  [[], [], [], [], []]
(4, 2)  --->  [[], [], [], [], []]
(4, 3)  --->  [[], [], [], [], []]
(4, 4)  --->  [[], [], [], [], []]
(4, 5)  --->  [[], [], [], [], []]
(4, 6)  --->  [[], [], [], [], []]
(4, 7)  --->  [[], [], [], [], []]
(4, 8)  --->  [[], [], [], [], []]
(4, 9)  --->  [[], [], [], [], []]
(5, 0)  --->  [[], [], [], [], []]
(5, 1)  --->  [[], [], [], [], []]
(5, 2)  --->  [[], [], [], [], []]
(5, 3)  --->  [[], [], [], [], []]
(5, 4)  --->  [[], [], [], [], []]
(5, 5)  --->  [[], [], [], [], []]
(5, 6)  --->  [[], [], [], [], []]
(5, 7)  --->  [[], [], [], [], []]
(5, 8)  --->  [[], [], [], [], []]
(5, 9)  --->  [[], [], [], [], []]
(6, 0)  --->  [[], [], [], [], []]
(6, 1)  --->  [[], [], [], [], []]
(6, 2)  --->  [[], [], [], [], []]
(6, 3)  --->  [[], [], [], [], []]
(6, 4)  --->  [[], [], [], [], []]
(6, 5)  --->  [[], [], [], [], []]
(6, 6)  --->  [[], [], [], [], []]
(6, 7)  --->  [[], [], [], [], []]
(6, 8)  --->  [[], [], [], [], []]
(6, 9)  --->  [[], [], [], [], []]
(7, 0)  --->  [[], [], [], [], []]
(7, 1)  --->  [[], [], [], [], []]
(7, 2)  --->  [[], [], [], [], []]
(7, 3)  --->  [[], [], [], [], []]
(7, 4)  --->  [[], [], [], [], []]
(7, 5)  --->  [[], [], [], [], []]
(7, 6)  --->  [[], [], [], [], []]
(7, 7)  --->  [[], [], [], [], []]
(7, 8)  --->  [[], [], [], [], []]
(7, 9)  --->  [[], [], [], [], []]
(8, 0)  --->  [[], [], [], [], []]
(8, 1)  --->  [[], [], [], [], []]
(8, 2)  --->  [[], [], [], [], []]
(8, 3)  --->  [[], [], [], [], []]
(8, 4)  --->  [[], [], [], [], []]
(8, 5)  --->  [[], [], [], [], []]
(8, 6)  --->  [[], [], [], [], []]
(8, 7)  --->  [[], [], [], [], []]
(8, 8)  --->  [[], [], [], [], []]
(8, 9)  --->  [[], [], [], [], []]
(9, 0)  --->  [[], [], [], [], []]
(9, 1)  --->  [[], [], [], [], []]
(9, 2)  --->  [[], [], [], [], []]
(9, 3)  --->  [[], [], [], [], []]
(9, 4)  --->  [[], [], [], [], []]
(9, 5)  --->  [[], [], [], [], []]
(9, 6)  --->  [[], [], [], [], []]
(9, 7)  --->  [[], [], [], [], []]
(9, 8)  --->  [[], [], [], [], []]
(9, 9)  --->  [[], [], [], [], []]

Scheduling duration in clocks:  49

CCM Size in bits:  772

CCM Size in bytes:  97

------------------Synthesys of equation 2 has started!---------------

[('1', 'F00*int0'), ('2', 'F01*int0'), ('3', 'F02*int0'), ('4', 'F10*X00'), ('5', 'F11*X01'), ('6', 'F12*X02'), ('7', 'F20*X10'), ('8', 'F21*X11'), ('9', 'F22*X12'), ('10', '1+2'), ('11', '3+4'), ('12', '5+6'), ('13', '7+8'), ('14', '10+11'), ('15', '12+13'), ('16', '14+15'), ('17', '16+9')]

Graph nodes:
Name   Value   Op_Type   Conn
y01      None      Write      []
1      None      *      ['10']
2      None      *      ['10']
3      None      *      ['11']
4      None      *      ['11']
5      None      *      ['12']
6      None      *      ['12']
7      None      *      ['13']
8      None      *      ['13']
9      None      *      ['17']
10      None      +      ['14']
11      None      +      ['14']
12      None      +      ['15']
13      None      +      ['15']
14      None      +      ['16']
15      None      +      ['16']
16      None      +      ['17']
17      None      +      ['y01']
F00      None      Read      ['1']
int0      None      Read      ['1', '2', '3']
F01      None      Read      ['2']
F02      None      Read      ['3']
F10      None      Read      ['4']
X00      None      Read      ['4']
F11      None      Read      ['5']
X01      None      Read      ['5']
F12      None      Read      ['6']
X02      None      Read      ['6']
F20      None      Read      ['7']
X10      None      Read      ['7']
F21      None      Read      ['8']
X11      None      Read      ['8']
F22      None      Read      ['9']
X12      None      Read      ['9']
Labels for mode ASAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Labels for mode ALAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 5, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4]

1. DUMPED cp:  ['1', '10', '14', '16', '17', 'y01']
   Inputs & Coords:
     1 F00 (0, 0)
     1 int0 (0, 0)
     10 1 None
     10 2 None
     14 10 None
     14 11 None
     16 14 None
     16 15 None
     17 16 None
     17 9 None
     y01 17 None
   Pre inputs: [(0, 0), (0, 0)]
   
   Inputs  [[(0, 0), 2]]
   All psbl destinations:  [(2, 1)]
   Closest pe coord:  (2, 1)
   All schedules generated:  [[6, 7, 8, 9, 10, 11]]
   Final closest pe coord and schedule  (2, 1) [6, 7, 8, 9, 10, 11]
Searching for other cps with nodes  ['2', '9', '11', '15']

2. DUMPED cp:  ['5', '12', '15']
   Inputs & Coords:
     5 F11 (0, 3)
     5 X01 (0, 3)
     12 5 None
     12 6 None
     15 12 None
     15 13 None
   Pre inputs: [(0, 3), (0, 3)]
   
   Inputs  [[(0, 3), 2]]
   All psbl destinations:  [(1, 3)]
   Closest pe coord:  (1, 3)
   All schedules generated:  [[2, 3, 4]]
   Final closest pe coord and schedule  (1, 3) [2, 3, 4]
Searching for other cps with nodes  ['2', '6', '9', '11', '13']

3. DUMPED cp:  ['3', '11']
   Inputs & Coords:
     3 F02 (0, 1)
     3 int0 (0, 0)
     11 3 None
     11 4 None
   Pre inputs: [(0, 1), (0, 0)]
   
   Inputs  [[(0, 1), 1], [(0, 0), 1]]
   All psbl destinations:  [(2, 2)]
   Closest pe coord:  (2, 2)
   All schedules generated:  [[7, 8]]
   Final closest pe coord and schedule  (2, 2) [7, 8]
Searching for other cps with nodes  ['2', '4', '6', '9', '13']

4. DUMPED cp:  ['7', '13']
   Inputs & Coords:
     7 F20 (1, 0)
     7 X10 (1, 0)
     13 7 None
     13 8 None
   Pre inputs: [(1, 0), (1, 0)]
   
   Inputs  [[(1, 0), 2]]
   All psbl destinations:  [(3, 0)]
   Closest pe coord:  (3, 0)
   All schedules generated:  [[4, 5]]
   Final closest pe coord and schedule  (3, 0) [4, 5]
Searching for other cps with nodes  ['2', '4', '6', '8', '9']

5. DUMPED cp:  ['2']
   Inputs & Coords:
     2 F01 (0, 1)
     2 int0 (0, 0)
   Pre inputs: [(0, 1), (0, 0)]
   
   Inputs  [[(0, 1), 1], [(0, 0), 1]]
   All psbl destinations:  [(2, 3), (2, 3)]
   Closest pe coord:  (2, 3)
   All schedules generated:  [[9], [9]]
   Final closest pe coord and schedule  (2, 3) [9]
Searching for other cps with nodes  ['4', '6', '8', '9']

6. DUMPED cp:  ['4']
   Inputs & Coords:
     4 F10 (0, 2)
     4 X00 (0, 2)
   Pre inputs: [(0, 2), (0, 2)]
   
   Inputs  [[(0, 2), 2]]
   All psbl destinations:  [(1, 4)]
   Closest pe coord:  (1, 4)
   All schedules generated:  [[6]]
   Final closest pe coord and schedule  (1, 4) [6]
Searching for other cps with nodes  ['6', '8', '9']

7. DUMPED cp:  ['6']
   Inputs & Coords:
     6 F12 (0, 4)
     6 X02 (0, 4)
   Pre inputs: [(0, 4), (0, 4)]
   
   Inputs  [[(0, 4), 2]]
   All psbl destinations:  [(2, 4)]
   Closest pe coord:  (2, 4)
   All schedules generated:  [[4]]
   Final closest pe coord and schedule  (2, 4) [4]
Searching for other cps with nodes  ['8', '9']

8. DUMPED cp:  ['8']
   Inputs & Coords:
     8 F21 (1, 1)
     8 X11 (1, 1)
   Pre inputs: [(1, 1), (1, 1)]
   
   Inputs  [[(1, 1), 2]]
   All psbl destinations:  [(3, 1)]
   Closest pe coord:  (3, 1)
   All schedules generated:  [[4]]
   Final closest pe coord and schedule  (3, 1) [4]
Searching for other cps with nodes  ['9']

9. DUMPED cp:  ['9']
   Inputs & Coords:
     9 F22 (1, 2)
     9 X12 (1, 2)
   Pre inputs: [(1, 2), (1, 2)]
   
   Inputs  [[(1, 2), 2]]
   All psbl destinations:  [(3, 2)]
   Closest pe coord:  (3, 2)
   All schedules generated:  [[4]]
   Final closest pe coord and schedule  (3, 2) [4]
Searching for other cps with nodes  []

Input allocation by PEs:
(0, 0)  --->  ['F00', 'int0']
(0, 1)  --->  ['F01', 'F02']
(0, 2)  --->  ['F10', 'X00']
(0, 3)  --->  ['F11', 'X01']
(0, 4)  --->  ['F12', 'X02']
(1, 0)  --->  ['F20', 'X10']
(1, 1)  --->  ['F21', 'X11']
(1, 2)  --->  ['F22', 'X12']

Final results before rescheduling (node.name, node.sched) by PEs: 
(2, 1)  --->  [('1', 6), ('10', 7), ('14', 8), ('16', 9), ('17', 10), ('y01', 11)]
(1, 3)  --->  [('5', 2), ('12', 3), ('15', 4)]
(2, 2)  --->  [('3', 7), ('11', 8)]
(3, 0)  --->  [('7', 4), ('13', 5)]
(2, 3)  --->  [('2', 9)]
(1, 4)  --->  [('4', 6)]
(2, 4)  --->  [('6', 4)]
(3, 1)  --->  [('8', 4)]
(3, 2)  --->  [('9', 4)]


RESCHEDULING
###### 8
     Pred 1 entered:  F21
     Check for pred "F21" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11']
     Walked coords  [(1, 1), (2, 1), (3, 1)]
     1.0 Inputs are send from pred at step  13
     1.3 Putting inputs to DPR-X directly at node at step  17
     Pred 2 entered:  X11
     Check for pred "X11" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11']
     Walked coords  [(1, 1), (2, 1), (3, 1)]
     1.0 Inputs are send from pred at step  18
     1.3 Putting inputs to DPR-X directly at node at step  22
     3.0 Arithmetic op is done at step  23
     4.2 Saving results to own MCLM at step  26
     (3, 1) ---> [[], [25], [23], [17, 22, 24], [16, 21]]
###### 7
     Pred 1 entered:  F20
     Check for pred "F20" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10']
     Walked coords  [(1, 0), (2, 0), (3, 0)]
     1.0 Inputs are send from pred at step  7
     1.3 Putting inputs to DPR-X directly at node at step  11
     Pred 2 entered:  X10
     Check for pred "X10" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10']
     Walked coords  [(1, 0), (2, 0), (3, 0)]
     1.0 Inputs are send from pred at step  16
     1.3 Putting inputs to DPR-X directly at node at step  20
     3.0 Arithmetic op is done at step  21
     4.0 ---Notification is changed for 13 1
     4.0 Saving results to DPR2 directly at step  22
     (3, 0) ---> [[], [], [21], [11, 20, 22], [10, 19]]
###### 6
     Pred 1 entered:  F12
     Check for pred "F12" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02']
     Walked coords  [(0, 4), (1, 4), (2, 4)]
     1.0 Inputs are send from pred at step  10
     1.3 Putting inputs to DPR-X directly at node at step  14
     Pred 2 entered:  X02
     Check for pred "X02" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02']
     Walked coords  [(0, 4), (1, 4), (2, 4)]
     1.0 Inputs are send from pred at step  15
     1.3 Putting inputs to DPR-X directly at node at step  19
     3.0 Arithmetic op is done at step  20
     4.2 Saving results to own MCLM at step  23
     (2, 4) ---> [[], [22], [20], [14, 19, 21], [13, 18]]
###### 5
     Pred 1 entered:  F11
     Check for pred "F11" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01']
     Walked coords  [(0, 3), (1, 3)]
     1.0 Inputs are send from pred at step  12
     1.3 Putting inputs to DPR-X directly at node at step  15
     Pred 2 entered:  X01
     Check for pred "X01" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01']
     Walked coords  [(0, 3), (1, 3)]
     1.0 Inputs are send from pred at step  15
     1.3 Putting inputs to DPR-X directly at node at step  18
     3.0 Arithmetic op is done at step  19
     4.0 ---Notification is changed for 12 1
     4.0 Saving results to DPR2 directly at step  20
     (1, 3) ---> [[], [], [19], [15, 18, 20], [20, 14, 17]]
###### 4
     Pred 1 entered:  F10
     Check for pred "F10" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00']
     Walked coords  [(0, 2), (1, 2), (1, 3), (1, 4)]
     1.0 Inputs are send from pred at step  7
     1.3 Putting inputs to DPR-X directly at node at step  12
     Pred 2 entered:  X00
     Check for pred "X00" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00']
     Walked coords  [(0, 2), (1, 2), (1, 3), (1, 4)]
     1.0 Inputs are send from pred at step  12
     1.3 Putting inputs to DPR-X directly at node at step  17
     3.0 Arithmetic op is done at step  18
     4.2 Saving results to own MCLM at step  21
     (1, 4) ---> [[], [20], [18], [12, 17, 19], [12, 17, 11, 16]]
###### 3
     Pred 1 entered:  F02
     Check for pred "F02" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02']
     Walked coords  [(0, 1), (1, 1), (2, 1), (2, 2)]
     1.0 Inputs are send from pred at step  9
     1.3 Putting inputs to DPR-X directly at node at step  14
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (2, 1), (2, 2)]
     1.0 Inputs are send from pred at step  26
     1.3 Putting inputs to DPR-X directly at node at step  32
     3.0 Arithmetic op is done at step  33
     4.0 ---Notification is changed for 11 1
     4.0 Saving results to DPR2 directly at step  34
     (2, 2) ---> [[], [], [33], [14, 32, 34], [18, 13, 31]]
###### 2
     Pred 1 entered:  F01
     Check for pred "F01" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02']
     Walked coords  [(0, 1), (1, 1), (2, 1), (2, 2), (2, 3)]
     1.0 Inputs are send from pred at step  18
     1.3 Putting inputs to DPR-X directly at node at step  24
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (2, 1), (2, 2), (2, 3)]
     1.0 Inputs are send from pred at step  28
     1.3 Putting inputs to DPR-X directly at node at step  35
     3.0 Arithmetic op is done at step  36
     4.2 Saving results to own MCLM at step  39
     (2, 3) ---> [[], [38], [36], [24, 35, 37], [19, 23, 34]]
###### 1
     Pred 1 entered:  F00
     Check for pred "F00" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (2, 1)]
     1.0 Inputs are send from pred at step  33
     1.3 Putting inputs to DPR-X directly at node at step  38
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (2, 1)]
     1.0 Inputs are send from pred at step  35
     1.3 Putting inputs to DPR-X directly at node at step  40
     3.0 Arithmetic op is done at step  41
     4.0 ---Notification is changed for 10 1
     4.0 Saving results to DPR2 directly at step  42
     (2, 1) ---> [[], [], [41], [38, 40, 42], [17, 15, 20, 12, 30, 21, 32, 37, 39]]
###### 13
     Pred 1 entered:  7
     Pred 2 entered:  8
     Check for pred "8" =====> in (3, 1) ['8']
     Walked coords  [(3, 1), (3, 0)]
     1.0 Inputs are send from pred at step  29
     1.2 Putting inputs to DPR1 directly at node at step  32
     3.0 Arithmetic op is done at step  33
     4.2 Saving results to own MCLM at step  36
     (3, 0) ---> [[], [35], [21, 33], [11, 20, 22, 32, 34], [10, 19, 31]]
###### 12
     Pred 1 entered:  5
     Pred 2 entered:  6
     Check for pred "6" =====> in (2, 4) ['6']
     Walked coords  [(2, 4), (2, 3), (1, 3)]
     1.0 Inputs are send from pred at step  26
     1.2 Putting inputs to DPR1 directly at node at step  30
     3.0 Arithmetic op is done at step  31
     4.0 ---Notification is changed for 15 1
     4.0 Saving results to DPR2 directly at step  32
     (1, 3) ---> [[], [], [19, 31], [15, 18, 20, 30, 32], [20, 14, 17, 10, 15, 29]]
###### 11
     Pred 1 entered:  3
     Pred 2 entered:  4
     Check for pred "4" =====> in (1, 4) ['4']
     Walked coords  [(1, 4), (2, 4), (2, 3), (2, 2)]
     1.0 Inputs are send from pred at step  24
     1.2 Putting inputs to DPR1 directly at node at step  29
     3.0 Arithmetic op is done at step  35
     4.2 Saving results to own MCLM at step  38
     (2, 2) ---> [[], [37], [33, 35], [14, 32, 34, 29, 36], [18, 13, 31, 22, 33, 28]]
###### 10
     Pred 1 entered:  1
     Pred 2 entered:  2
     Check for pred "2" =====> in (2, 3) ['2']
     Walked coords  [(2, 3), (2, 2), (2, 1)]
     1.0 Inputs are send from pred at step  42
     1.2 Putting inputs to DPR1 directly at node at step  46
     3.0 Arithmetic op is done at step  47
     4.0 ---Notification is changed for 14 1
     4.0 Saving results to DPR2 directly at step  48
     (2, 1) ---> [[], [], [41, 47], [38, 40, 42, 46, 48], [17, 15, 20, 12, 30, 21, 32, 37, 39, 45]]
###### 15
     Pred 1 entered:  12
     Pred 2 entered:  13
     Check for pred "13" =====> in (3, 0) ['13']
     Walked coords  [(3, 0), (3, 1), (3, 2), (3, 3), (2, 3), (1, 3)]
     1.0 Inputs are send from pred at step  39
     1.2 Putting inputs to DPR1 directly at node at step  46
     3.0 Arithmetic op is done at step  47
     4.2 Saving results to own MCLM at step  50
     (1, 3) ---> [[], [49], [19, 31, 47], [15, 18, 20, 30, 32, 46, 48], [20, 14, 17, 10, 15, 29, 45]]
###### 14
     Pred 1 entered:  10
     Pred 2 entered:  11
     Check for pred "11" =====> in (2, 2) ['11']
     Walked coords  [(2, 2), (2, 1)]
     1.0 Inputs are send from pred at step  41
     1.2 Putting inputs to DPR1 directly at node at step  44
     3.0 Arithmetic op is done at step  49
     4.0 ---Notification is changed for 16 1
     4.0 Saving results to DPR2 directly at step  50
     (2, 1) ---> [[], [], [41, 47, 49], [38, 40, 42, 46, 48, 44, 50], [17, 15, 20, 12, 30, 21, 32, 37, 39, 45, 43]]
###### 9
     Pred 1 entered:  F22
     Check for pred "F22" =====> in (1, 2) ['9', 'F22', 'X12']
     Walked coords  [(1, 2), (2, 2), (3, 2)]
     1.0 Inputs are send from pred at step  3
     1.3 Putting inputs to DPR-X directly at node at step  7
     Pred 2 entered:  X12
     Check for pred "X12" =====> in (1, 2) ['9', 'F22', 'X12']
     Walked coords  [(1, 2), (2, 2), (3, 2)]
     1.0 Inputs are send from pred at step  12
     1.3 Putting inputs to DPR-X directly at node at step  16
     3.0 Arithmetic op is done at step  17
     4.2 Saving results to own MCLM at step  20
     (3, 2) ---> [[], [19], [17], [7, 16, 18], [42, 6, 15]]
###### 16
     Pred 1 entered:  14
     Pred 2 entered:  15
     Check for pred "15" =====> in (1, 3) ['15']
     Walked coords  [(1, 3), (2, 3), (2, 2), (2, 1)]
     1.0 Inputs are send from pred at step  53
     1.2 Putting inputs to DPR1 directly at node at step  58
     3.0 Arithmetic op is done at step  59
     4.0 ---Notification is changed for 17 1
     4.0 Saving results to DPR2 directly at step  60
     (2, 1) ---> [[], [], [41, 47, 49, 59], [38, 40, 42, 46, 48, 44, 50, 58, 60], [17, 15, 20, 12, 30, 21, 32, 37, 39, 45, 43, 57]]
###### 17
     Pred 1 entered:  16
     Pred 2 entered:  9
     Check for pred "9" =====> in (3, 2) ['9']
     Walked coords  [(3, 2), (3, 1), (2, 1)]
     1.0 Inputs are send from pred at step  23
     1.2 Putting inputs to DPR1 directly at node at step  27
     3.0 Arithmetic op is done at step  61
     4.2 Saving results to own MCLM at step  64
     (2, 1) ---> [[], [63], [41, 47, 49, 59, 61], [38, 40, 42, 46, 48, 44, 50, 58, 60, 27, 62], [17, 15, 20, 12, 30, 21, 32, 37, 39, 45, 43, 57, 26]]
###### y01
     Pred 1 entered:  17
     1.4 This is actually last node at step  64

Final results after rescheduling (node.name, node.sched): by PEs
(2, 1)  --->  [('1', 42), ('10', 48), ('14', 50), ('16', 60), ('17', 64), ('y01', 64)]
(1, 3)  --->  [('5', 20), ('12', 32), ('15', 50)]
(2, 2)  --->  [('3', 34), ('11', 38)]
(3, 0)  --->  [('7', 22), ('13', 36)]
(2, 3)  --->  [('2', 39)]
(1, 4)  --->  [('4', 21)]
(2, 4)  --->  [('6', 23)]
(3, 1)  --->  [('8', 26)]
(3, 2)  --->  [('9', 20)]

PE map 
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Node scheds and CCM commands:
1  --->  [(1, 0), ['CCM1', 1, 0, 'PE1'], [(0, 4), ['CCM1', 1, 1, 'PE1']], [(0, 0), ['CCM1', 1, 1, 'PE1']], [(0, 3), ['CCM1', 1, 1, 'PE1']], [(0, 2), ['CCM1', 1, 1, 'PE1']], [(0, 1), ['CCM1', 1, 1, 'PE1']], [(1, 1), ['CCM1', 1, 0, 'PE1']], [(1, 2), ['CCM1', 1, 1, 'PE1']]]
2  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'DPR1']], [(0, 2), ['CCM1', 2, 0, 'PE1']], [(0, 1), ['CCM3', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']]]
3  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(1, 0), ['CCM1', 3, 1, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 3, 0, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 3, 1, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 3, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']]]
6  --->  [(2, 0), ['CCM6', 'DPR1'], [(0, 3), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']]]
4  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM1', 4, 0, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']]]
5  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(0, 4), ['CCM3', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 5, 1, 'PE1']], [(0, 1), ['CCM1', 5, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 5, 3, 'PE1']], [(0, 2), ['CCM1', 5, 0, 'PE1']]]
8  --->  [(2, 0), ['CCM6', 'DPR2'], [(0, 3), ['CCM6', 'DPR2']], [(0, 4), ['CCM5', 'DPR3']], [(0, 2), ['CCM6', 'DPR2']], [(1, 1), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM1', 8, 3, 'PE1']], [(0, 1), ['CCM3', 'PERouter']]]
9  --->  [(2, 0), ['CCM4', '*'], [(0, 3), ['CCM4', '*']], [(0, 4), ['CCM2', 'MCLM1']], [(0, 2), ['CCM4', '*']], [(1, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 9, 0, 'PE1']], [(1, 2), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(0, 1), ['CCM6', 'NodeRouter']]]
10  --->  [(2, 0), ['CCM5', 'DPR3'], [(0, 3), ['CCM5', 'DPR2']], [(0, 2), ['CCM5', 'DPR2']], [(1, 1), ['CCM4', '*']], [(0, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'DPR1']], [(0, 0), ['CCM1', 10, 1, 'PE1']], [(1, 2), ['CCM5', 'DPR3']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 10, 3, 'PE1']], [(0, 2), ['CCM1', 10, 4, 'PE1']], [(1, 2), ['CCM1', 10, 2, 'PE1']]]
11  --->  [(2, 0), ['CCM2', 'MCLM1'], [(1, 1), ['CCM5', 'DPR3']], [(0, 1), ['CCM4', '*']], [(1, 0), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'DPR2']], [(0, 4), ['CCM1', 11, 2, 'PE1']], [(1, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM1', 11, 3, 'PE1']], [(3, 0), ['CCM6', 'DPR1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']]]
7  --->  [(0, 4), ['CCM4', '*'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 7, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 7, 1, 'PE1']], [(3, 2), ['CCM6', 'DPR1']]]
12  --->  [(1, 1), ['CCM2', 'MCLM1'], [(0, 1), ['CCM5', 'DPR2']], [(1, 0), ['CCM6', 'DPR2']], [(0, 0), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 4), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']]]
13  --->  [(1, 0), ['CCM4', '*'], [(0, 0), ['CCM5', 'DPR2']], [(2, 0), ['CCM1', 13, 0, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 13, 4, 'PE1']], [(0, 3), ['CCM1', 13, 4, 'PE1']]]
14  --->  [(1, 0), ['CCM5', 'DPR3'], [(2, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 14, 2, 'PE1']], [(1, 2), ['CCM1', 14, 0, 'PE1']], [(1, 0), ['CCM1', 14, 1, 'PE1']], [(2, 4), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'DPR1']]]
15  --->  [(1, 0), ['CCM2', 'MCLM1'], [(2, 0), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']]]
22  --->  [(0, 3), ['CCM6', 'DPR1'], [(0, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'DPR2']], [(3, 0), ['CCM5', 'DPR2']], [(2, 4), ['CCM2', 'MCLM1']], [(1, 4), ['CCM1', 22, 0, 'PE1']], [(3, 2), ['CCM3', 'PERouter']]]
23  --->  [(0, 3), ['CCM4', '+'], [(0, 0), ['CCM4', '+']], [(3, 1), ['CCM4', '*']], [(1, 4), ['CCM3', 'PERouter']], [(3, 2), ['CCM6', 'NodeRouter']]]
24  --->  [(0, 3), ['CCM5', 'DPR3'], [(0, 0), ['CCM5', 'DPR2']], [(0, 1), ['CCM1', 24, 2, 'PE1']], [(3, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 24, 1, 'PE1']], [(2, 3), ['CCM6', 'DPR1']], [(2, 4), ['CCM1', 24, 0, 'PE1']], [(1, 4), ['CCM6', 'NodeRouter']]]
25  --->  [(0, 3), ['CCM2', 'MCLM1'], [(0, 1), ['CCM3', 'PERouter']], [(3, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 4), ['CCM3', 'PERouter']]]
17  --->  [(0, 2), ['CCM6', 'DPR1'], [(1, 0), ['CCM1', 17, 2, 'PE1']], [(3, 1), ['CCM6', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 4), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(3, 2), ['CCM4', '*']]]
18  --->  [(0, 2), ['CCM4', '+'], [(1, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR2']], [(1, 4), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(3, 2), ['CCM5', 'DPR3']]]
19  --->  [(0, 2), ['CCM5', 'DPR2'], [(0, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(2, 4), ['CCM6', 'DPR2']], [(1, 3), ['CCM4', '*']], [(1, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM2', 'MCLM1']]]
16  --->  [(1, 1), ['CCM6', 'NodeRouter'], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 16, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 16, 0, 'PE1']], [(3, 2), ['CCM6', 'DPR2']]]
20  --->  [(0, 1), ['CCM4', '+'], [(3, 0), ['CCM6', 'DPR2']], [(2, 4), ['CCM4', '*']], [(1, 3), ['CCM5', 'DPR2']], [(1, 4), ['CCM2', 'MCLM1']]]
21  --->  [(0, 1), ['CCM5', 'DPR3'], [(0, 0), ['CCM6', 'DPR1']], [(3, 0), ['CCM4', '*']], [(2, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM1', 21, 0, 'PE1']]]
27  --->  [(0, 3), ['CCM1', 27, 2, 'PE1'], [(0, 0), ['CCM3', 'PERouter']], [(3, 1), ['CCM1', 27, 0, 'PE1']], [(2, 1), ['CCM6', 'DPR1']]]
28  --->  [(0, 3), ['CCM3', 'PERouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 1), ['CCM3', 'PERouter']]]
29  --->  [(0, 3), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM6', 'DPR1']]]
32  --->  [(0, 2), ['CCM6', 'DPR1'], [(2, 2), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM6', 'DPR1']], [(1, 3), ['CCM5', 'DPR2']]]
33  --->  [(0, 2), ['CCM4', '+'], [(2, 2), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 33, 1, 'PE1']], [(3, 0), ['CCM4', '+']]]
34  --->  [(0, 2), ['CCM5', 'DPR3'], [(2, 2), ['CCM5', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM5', 'DPR3']]]
35  --->  [(0, 2), ['CCM2', 'MCLM1'], [(2, 3), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 0), ['CCM2', 'MCLM1']], [(2, 2), ['CCM4', '+']]]
26  --->  [(0, 1), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 26, 1, 'PE1']], [(2, 4), ['CCM6', 'NodeRouter']]]
30  --->  [(0, 0), ['CCM4', '+'], [(1, 3), ['CCM6', 'DPR1']]]
31  --->  [(0, 0), ['CCM5', 'DPR2'], [(0, 0), ['CCM1', 31, 0, 'PE1']], [(1, 3), ['CCM4', '+']]]
37  --->  [(0, 2), ['CCM1', 37, 2, 'PE1'], [(2, 3), ['CCM5', 'DPR3']], [(2, 2), ['CCM2', 'MCLM1']], [(3, 0), ['CCM1', 37, 0, 'PE1']]]
38  --->  [(0, 2), ['CCM3', 'PERouter'], [(2, 3), ['CCM2', 'MCLM1']], [(2, 1), ['CCM6', 'DPR1']], [(3, 0), ['CCM3', 'PERouter']]]
39  --->  [(0, 2), ['CCM6', 'NodeRouter'], [(3, 0), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM1', 39, 0, 'PE1']]]
43  --->  [(0, 0), ['CCM6', 'DPR1']]
44  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']]]
45  --->  [(0, 0), ['CCM5', 'DPR2']]
46  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'DPR1']]]
47  --->  [(0, 0), ['CCM5', 'DPR3'], [(2, 1), ['CCM4', '+']], [(1, 3), ['CCM4', '+']]]
48  --->  [(0, 0), ['CCM2', 'MCLM1'], [(2, 1), ['CCM5', 'DPR2']], [(1, 3), ['CCM5', 'DPR3']]]
36  --->  [(2, 3), ['CCM4', '*'], [(2, 2), ['CCM5', 'DPR3']]]
40  --->  [(2, 1), ['CCM6', 'DPR2'], [(2, 3), ['CCM1', 40, 0, 'PE1']], [(2, 2), ['CCM3', 'PERouter']]]
41  --->  [(2, 1), ['CCM4', '*'], [(2, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'NodeRouter']]]
42  --->  [(2, 1), ['CCM5', 'DPR2'], [(2, 3), ['CCM6', 'NodeRouter']]]
49  --->  [(1, 3), ['CCM2', 'MCLM1'], [(2, 1), ['CCM4', '+']]]
50  --->  [(2, 1), ['CCM5', 'DPR2']]
51  --->  [(1, 3), ['CCM1', 51, 0, 'PE1']]
52  --->  [(1, 3), ['CCM3', 'PERouter']]
53  --->  [(1, 3), ['CCM6', 'NodeRouter']]
58  --->  [(2, 1), ['CCM6', 'DPR1']]
59  --->  [(2, 1), ['CCM4', '+']]
60  --->  [(2, 1), ['CCM5', 'DPR2']]
61  --->  [(2, 1), ['CCM4', '+']]
62  --->  [(2, 1), ['CCM5', 'DPR3']]
63  --->  [(2, 1), ['CCM2', 'MCLM1']]

Router scheds and CCM commands:
4  --->  [(0, 1), (0, 2), [(2, 2), (3, 2)]]
5  --->  [(0, 1), (0, 3), [(1, 2), (1, 1)]]
6  --->  [(1, 0), (1, 1)]
8  --->  [(1, 1), (1, 0), [(2, 0), (3, 0)], [(1, 2), (1, 3)]]
16  --->  [(2, 1), (2, 2), [(1, 4), (2, 4)]]
17  --->  [(2, 1), (2, 3), [(1, 1), (1, 0)], [(2, 0), (3, 0)]]
18  --->  [(2, 1), (1, 3), [(1, 1), (0, 0)]]
19  --->  [(2, 1), (0, 3), [(2, 1), (3, 1)], [(1, 1), (2, 1)]]
14  --->  [(0, 3), (0, 2), [(2, 1), (3, 1)], [(1, 2), (1, 4)]]
40  --->  [(0, 1), (0, 0), [(3, 1), (3, 2)]]
11  --->  [(1, 4), (2, 4), [(1, 1), (2, 2)]]
9  --->  [(1, 2), (1, 4)]
13  --->  [(1, 2), (1, 3), [(2, 2), (3, 2)]]
10  --->  [(1, 1), (2, 1)]
27  --->  [(1, 0), (2, 0), [(2, 3), (1, 3)]]
28  --->  [(1, 0), (2, 1)]
29  --->  [(1, 0), (2, 2), [(1, 0), (2, 0)]]
20  --->  [(1, 1), (2, 2)]
21  --->  [(1, 1), (2, 3)]
30  --->  [(1, 0), (2, 1)]
31  --->  [(1, 0), (2, 2)]
32  --->  [(1, 0), (2, 3)]
34  --->  [(1, 0), (2, 0)]
35  --->  [(1, 0), (2, 1)]
36  --->  [(1, 0), (2, 0)]
37  --->  [(1, 0), (2, 1)]
25  --->  [(2, 4), (2, 3)]
26  --->  [(2, 4), (2, 2)]
43  --->  [(2, 2), (2, 1), [(3, 1), (1, 3)]]
41  --->  [(3, 1), (3, 3)]
42  --->  [(3, 1), (2, 3)]
54  --->  [(2, 3), (2, 2)]
55  --->  [(2, 3), (2, 1)]
24  --->  [(3, 1), (2, 1)]

Rescheduler marker:
(0, 0)  --->  [[1, 3, 5, 7, 9, 10, 24, 26, 31, 33], [48], [12, 23, 30, 44, 46], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 24, 29, 31, 43, 45, 21, 47, 25, 26, 27, 28, 32, 33, 34, 35], [4, 6, 8, 10, 21, 28, 42, 20, 27, 29, 34, 36]]
(0, 1)  --->  [[1, 5, 24, 7, 16], [22], [11, 20], [10, 2, 12, 6, 7, 19, 21, 25, 26, 8, 9, 17, 18], [5, 9, 8, 18, 27, 41, 10, 19]]
(0, 2)  --->  [[1, 2, 37, 5, 10], [35], [9, 18, 33], [8, 2, 10, 3, 4, 17, 19, 32, 34, 38, 39, 6, 7, 11, 12], [6, 7, 5, 16, 31, 40, 8, 13]]
(0, 3)  --->  [[1, 3, 27, 10, 13], [25], [9, 23], [6, 8, 10, 2, 3, 4, 5, 22, 24, 28, 29, 11, 12, 14, 15], [5, 7, 4, 6, 21, 15, 30, 13, 16]]
(0, 4)  --->  [[1, 4, 11, 8, 13], [9], [7], [2, 3, 6, 5, 8, 12, 13, 9, 10, 14, 15], [4, 5, 14, 11, 16]]
(0, 5)  --->  [[], [], [], [], []]
(0, 6)  --->  [[], [], [], [], []]
(0, 7)  --->  [[], [], [], [], []]
(0, 8)  --->  [[], [], [], [], []]
(0, 9)  --->  [[], [], [], [], []]
(1, 0)  --->  [[1, 3, 17, 5, 14], [15], [13], [2, 3, 4, 5, 11, 12, 14, 18, 19, 6, 7, 15, 16], [4, 6, 7, 10, 11, 20, 19, 8, 17, 28, 30, 35, 37]]
(1, 1)  --->  [[14, 1, 3, 11, 16], [12], [10], [8, 9, 11, 15, 16, 2, 3, 4, 5, 12, 13, 17, 18], [7, 8, 9, 17, 4, 6, 18, 14, 19, 11, 20]]
(1, 2)  --->  [[14, 1, 10], [11], [9], [6, 8, 10, 15, 16, 2, 3, 11, 12], [6, 5, 7, 17, 9, 14, 4, 13]]
(1, 3)  --->  [[51], [49], [19, 31, 47], [15, 18, 20, 30, 32, 46, 48, 52, 53], [20, 14, 17, 10, 15, 29, 45, 54]]
(1, 4)  --->  [[22], [20], [18], [12, 17, 19, 23, 24], [12, 17, 11, 16, 25]]
(1, 5)  --->  [[], [], [], [], []]
(1, 6)  --->  [[], [], [], [], []]
(1, 7)  --->  [[], [], [], [], []]
(1, 8)  --->  [[], [], [], [], []]
(1, 9)  --->  [[], [], [], [], []]
(2, 0)  --->  [[13], [11], [9], [6, 8, 10, 14, 15], [5, 7, 16, 9, 18, 29, 31, 36, 38]]
(2, 1)  --->  [[], [63], [41, 47, 49, 59, 61], [38, 40, 42, 46, 48, 44, 50, 58, 60, 27, 62], [17, 15, 20, 12, 30, 21, 32, 37, 39, 45, 43, 57, 26]]
(2, 2)  --->  [[39], [37], [33, 35], [14, 32, 34, 29, 36, 40, 41], [18, 13, 31, 22, 33, 28, 44, 42, 5, 14, 56]]
(2, 3)  --->  [[40], [38], [36], [24, 35, 37, 41, 42], [19, 23, 34, 28, 27, 43, 44, 55]]
(2, 4)  --->  [[24], [22], [20], [14, 19, 21, 25, 26], [13, 18, 27, 26]]
(2, 5)  --->  [[], [], [], [], []]
(2, 6)  --->  [[], [], [], [], []]
(2, 7)  --->  [[], [], [], [], []]
(2, 8)  --->  [[], [], [], [], []]
(2, 9)  --->  [[], [], [], [], []]
(3, 0)  --->  [[37], [35], [21, 33], [11, 20, 22, 32, 34, 38, 39], [10, 19, 31, 40]]
(3, 1)  --->  [[27], [25], [23], [17, 22, 24, 28, 29], [16, 21, 30, 41, 25]]
(3, 2)  --->  [[21], [19], [17], [7, 16, 18, 22, 23], [42, 6, 15, 24]]
(3, 3)  --->  [[], [], [], [], [43]]
(3, 4)  --->  [[], [], [], [], []]
(3, 5)  --->  [[], [], [], [], []]
(3, 6)  --->  [[], [], [], [], []]
(3, 7)  --->  [[], [], [], [], []]
(3, 8)  --->  [[], [], [], [], []]
(3, 9)  --->  [[], [], [], [], []]
(4, 0)  --->  [[], [], [], [], []]
(4, 1)  --->  [[], [], [], [], []]
(4, 2)  --->  [[], [], [], [], []]
(4, 3)  --->  [[], [], [], [], []]
(4, 4)  --->  [[], [], [], [], []]
(4, 5)  --->  [[], [], [], [], []]
(4, 6)  --->  [[], [], [], [], []]
(4, 7)  --->  [[], [], [], [], []]
(4, 8)  --->  [[], [], [], [], []]
(4, 9)  --->  [[], [], [], [], []]
(5, 0)  --->  [[], [], [], [], []]
(5, 1)  --->  [[], [], [], [], []]
(5, 2)  --->  [[], [], [], [], []]
(5, 3)  --->  [[], [], [], [], []]
(5, 4)  --->  [[], [], [], [], []]
(5, 5)  --->  [[], [], [], [], []]
(5, 6)  --->  [[], [], [], [], []]
(5, 7)  --->  [[], [], [], [], []]
(5, 8)  --->  [[], [], [], [], []]
(5, 9)  --->  [[], [], [], [], []]
(6, 0)  --->  [[], [], [], [], []]
(6, 1)  --->  [[], [], [], [], []]
(6, 2)  --->  [[], [], [], [], []]
(6, 3)  --->  [[], [], [], [], []]
(6, 4)  --->  [[], [], [], [], []]
(6, 5)  --->  [[], [], [], [], []]
(6, 6)  --->  [[], [], [], [], []]
(6, 7)  --->  [[], [], [], [], []]
(6, 8)  --->  [[], [], [], [], []]
(6, 9)  --->  [[], [], [], [], []]
(7, 0)  --->  [[], [], [], [], []]
(7, 1)  --->  [[], [], [], [], []]
(7, 2)  --->  [[], [], [], [], []]
(7, 3)  --->  [[], [], [], [], []]
(7, 4)  --->  [[], [], [], [], []]
(7, 5)  --->  [[], [], [], [], []]
(7, 6)  --->  [[], [], [], [], []]
(7, 7)  --->  [[], [], [], [], []]
(7, 8)  --->  [[], [], [], [], []]
(7, 9)  --->  [[], [], [], [], []]
(8, 0)  --->  [[], [], [], [], []]
(8, 1)  --->  [[], [], [], [], []]
(8, 2)  --->  [[], [], [], [], []]
(8, 3)  --->  [[], [], [], [], []]
(8, 4)  --->  [[], [], [], [], []]
(8, 5)  --->  [[], [], [], [], []]
(8, 6)  --->  [[], [], [], [], []]
(8, 7)  --->  [[], [], [], [], []]
(8, 8)  --->  [[], [], [], [], []]
(8, 9)  --->  [[], [], [], [], []]
(9, 0)  --->  [[], [], [], [], []]
(9, 1)  --->  [[], [], [], [], []]
(9, 2)  --->  [[], [], [], [], []]
(9, 3)  --->  [[], [], [], [], []]
(9, 4)  --->  [[], [], [], [], []]
(9, 5)  --->  [[], [], [], [], []]
(9, 6)  --->  [[], [], [], [], []]
(9, 7)  --->  [[], [], [], [], []]
(9, 8)  --->  [[], [], [], [], []]
(9, 9)  --->  [[], [], [], [], []]

Scheduling duration in clocks:  64

CCM Size in bits:  1629

CCM Size in bytes:  204

------------------Synthesys of equation 3 has started!---------------

[('1', 'F00*int0'), ('2', 'F01*int0'), ('3', 'F02*int0'), ('4', 'F10*X01'), ('5', 'F11*X02'), ('6', 'F12*X03'), ('7', 'F20*X11'), ('8', 'F21*X12'), ('9', 'F22*X13'), ('10', '1+2'), ('11', '3+4'), ('12', '5+6'), ('13', '7+8'), ('14', '10+11'), ('15', '12+13'), ('16', '14+15'), ('17', '16+9')]

Graph nodes:
Name   Value   Op_Type   Conn
y02      None      Write      []
1      None      *      ['10']
2      None      *      ['10']
3      None      *      ['11']
4      None      *      ['11']
5      None      *      ['12']
6      None      *      ['12']
7      None      *      ['13']
8      None      *      ['13']
9      None      *      ['17']
10      None      +      ['14']
11      None      +      ['14']
12      None      +      ['15']
13      None      +      ['15']
14      None      +      ['16']
15      None      +      ['16']
16      None      +      ['17']
17      None      +      ['y02']
F00      None      Read      ['1']
int0      None      Read      ['1', '2', '3']
F01      None      Read      ['2']
F02      None      Read      ['3']
F10      None      Read      ['4']
X01      None      Read      ['4']
F11      None      Read      ['5']
X02      None      Read      ['5']
F12      None      Read      ['6']
X03      None      Read      ['6']
F20      None      Read      ['7']
X11      None      Read      ['7']
F21      None      Read      ['8']
X12      None      Read      ['8']
F22      None      Read      ['9']
X13      None      Read      ['9']
Labels for mode ASAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Labels for mode ALAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 5, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4]

1. DUMPED cp:  ['1', '10', '14', '16', '17', 'y02']
   Inputs & Coords:
     1 F00 (0, 0)
     1 int0 (0, 0)
     10 1 None
     10 2 None
     14 10 None
     14 11 None
     16 14 None
     16 15 None
     17 16 None
     17 9 None
     y02 17 None
   Pre inputs: [(0, 0), (0, 0)]
   
   Inputs  [[(0, 0), 2]]
   All psbl destinations:  [(3, 3)]
   Closest pe coord:  (3, 3)
   All schedules generated:  [[12, 13, 14, 15, 16, 17]]
   Final closest pe coord and schedule  (3, 3) [12, 13, 14, 15, 16, 17]
Searching for other cps with nodes  ['2', '9', '11', '15']

2. DUMPED cp:  ['5', '12', '15']
   Inputs & Coords:
     5 F11 (0, 3)
     5 X02 (0, 3)
     12 5 None
     12 6 None
     15 12 None
     15 13 None
   Pre inputs: [(0, 3), (0, 3)]
   
   Inputs  [[(0, 3), 2]]
   All psbl destinations:  [(3, 4)]
   Closest pe coord:  (3, 4)
   All schedules generated:  [[8, 9, 10]]
   Final closest pe coord and schedule  (3, 4) [8, 9, 10]
Searching for other cps with nodes  ['2', '6', '9', '11', '13']

3. DUMPED cp:  ['3', '11']
   Inputs & Coords:
     3 F02 (0, 1)
     3 int0 (0, 0)
     11 3 None
     11 4 None
   Pre inputs: [(0, 1), (0, 0)]
   
   Inputs  [[(0, 1), 1], [(0, 0), 1]]
   All psbl destinations:  [(0, 5), (4, 0), (4, 1), (0, 5), (4, 0)]
   Closest pe coord:  (0, 5)
   All schedules generated:  [[9, 10], [9, 10], [9, 10], [9, 10], [9, 10]]
   Final closest pe coord and schedule  (0, 5) [9, 10]
Searching for other cps with nodes  ['2', '4', '6', '9', '13']

4. DUMPED cp:  ['7', '13']
   Inputs & Coords:
     7 F20 (1, 0)
     7 X11 (1, 0)
     13 7 None
     13 8 None
   Pre inputs: [(1, 0), (1, 0)]
   
   Inputs  [[(1, 0), 2]]
   All psbl destinations:  [(4, 0)]
   Closest pe coord:  (4, 0)
   All schedules generated:  [[6, 7]]
   Final closest pe coord and schedule  (4, 0) [6, 7]
Searching for other cps with nodes  ['2', '4', '6', '8', '9']

5. DUMPED cp:  ['2']
   Inputs & Coords:
     2 F01 (0, 1)
     2 int0 (0, 0)
   Pre inputs: [(0, 1), (0, 0)]
   
   Inputs  [[(0, 1), 1], [(0, 0), 1]]
   All psbl destinations:  [(4, 1)]
   Closest pe coord:  (4, 1)
   All schedules generated:  [[9]]
   Final closest pe coord and schedule  (4, 1) [9]
Searching for other cps with nodes  ['4', '6', '8', '9']

6. DUMPED cp:  ['4']
   Inputs & Coords:
     4 F10 (0, 2)
     4 X01 (0, 2)
   Pre inputs: [(0, 2), (0, 2)]
   
   Inputs  [[(0, 2), 2]]
   All psbl destinations:  [(4, 2)]
   Closest pe coord:  (4, 2)
   All schedules generated:  [[8]]
   Final closest pe coord and schedule  (4, 2) [8]
Searching for other cps with nodes  ['6', '8', '9']

7. DUMPED cp:  ['6']
   Inputs & Coords:
     6 F12 (0, 4)
     6 X03 (0, 4)
   Pre inputs: [(0, 4), (0, 4)]
   
   Inputs  [[(0, 4), 2]]
   All psbl destinations:  [(4, 4)]
   Closest pe coord:  (4, 4)
   All schedules generated:  [[8]]
   Final closest pe coord and schedule  (4, 4) [8]
Searching for other cps with nodes  ['8', '9']

8. DUMPED cp:  ['8']
   Inputs & Coords:
     8 F21 (1, 1)
     8 X12 (1, 1)
   Pre inputs: [(1, 1), (1, 1)]
   
   Inputs  [[(1, 1), 2]]
   All psbl destinations:  [(4, 3)]
   Closest pe coord:  (4, 3)
   All schedules generated:  [[10]]
   Final closest pe coord and schedule  (4, 3) [10]
Searching for other cps with nodes  ['9']

9. DUMPED cp:  ['9']
   Inputs & Coords:
     9 F22 (1, 2)
     9 X13 (1, 2)
   Pre inputs: [(1, 2), (1, 2)]
   
   Inputs  [[(1, 2), 2]]
   All psbl destinations:  [(1, 5)]
   Closest pe coord:  (1, 5)
   All schedules generated:  [[6]]
   Final closest pe coord and schedule  (1, 5) [6]
Searching for other cps with nodes  []

Input allocation by PEs:
(0, 0)  --->  ['F00', 'int0']
(0, 1)  --->  ['F01', 'F02']
(0, 2)  --->  ['F10', 'X01']
(0, 3)  --->  ['F11', 'X02']
(0, 4)  --->  ['F12', 'X03']
(1, 0)  --->  ['F20', 'X11']
(1, 1)  --->  ['F21', 'X12']
(1, 2)  --->  ['F22', 'X13']

Final results before rescheduling (node.name, node.sched) by PEs: 
(3, 3)  --->  [('1', 12), ('10', 13), ('14', 14), ('16', 15), ('17', 16), ('y02', 17)]
(3, 4)  --->  [('5', 8), ('12', 9), ('15', 10)]
(0, 5)  --->  [('3', 9), ('11', 10)]
(4, 0)  --->  [('7', 6), ('13', 7)]
(4, 1)  --->  [('2', 9)]
(4, 2)  --->  [('4', 8)]
(4, 4)  --->  [('6', 8)]
(4, 3)  --->  [('8', 10)]
(1, 5)  --->  [('9', 6)]


RESCHEDULING
###### 8
     Pred 1 entered:  F21
     Check for pred "F21" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (4, 2), (4, 3)]
     1.0 Inputs are send from pred at step  20
     1.3 Putting inputs to DPR-X directly at node at step  27
     Pred 2 entered:  X12
     Check for pred "X12" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (4, 2), (4, 3)]
     1.0 Inputs are send from pred at step  23
     1.3 Putting inputs to DPR-X directly at node at step  30
     3.0 Arithmetic op is done at step  31
     4.2 Saving results to own MCLM at step  34
     (4, 3) ---> [[], [33], [31], [27, 30, 32], [26, 29]]
###### 7
     Pred 1 entered:  F20
     Check for pred "F20" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11']
     Walked coords  [(1, 0), (2, 0), (3, 0), (4, 0)]
     1.0 Inputs are send from pred at step  21
     1.3 Putting inputs to DPR-X directly at node at step  26
     Pred 2 entered:  X11
     Check for pred "X11" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11']
     Walked coords  [(1, 0), (2, 0), (3, 0), (4, 0)]
     1.0 Inputs are send from pred at step  23
     1.3 Putting inputs to DPR-X directly at node at step  28
     3.0 Arithmetic op is done at step  29
     4.0 ---Notification is changed for 13 1
     4.0 Saving results to DPR2 directly at step  30
     (4, 0) ---> [[], [], [29], [26, 28, 30], [25, 27]]
###### 6
     Pred 1 entered:  F12
     Check for pred "F12" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03']
     Walked coords  [(0, 4), (1, 4), (2, 4), (3, 4), (4, 4)]
     1.0 Inputs are send from pred at step  17
     1.3 Putting inputs to DPR-X directly at node at step  23
     Pred 2 entered:  X03
     Check for pred "X03" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03']
     Walked coords  [(0, 4), (1, 4), (2, 4), (3, 4), (4, 4)]
     1.0 Inputs are send from pred at step  19
     1.3 Putting inputs to DPR-X directly at node at step  25
     3.0 Arithmetic op is done at step  26
     4.2 Saving results to own MCLM at step  29
     (4, 4) ---> [[], [28], [26], [23, 25, 27], [22, 24]]
###### 5
     Pred 1 entered:  F11
     Check for pred "F11" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02']
     Walked coords  [(0, 3), (1, 3), (2, 3), (3, 3), (3, 4)]
     1.0 Inputs are send from pred at step  17
     1.3 Putting inputs to DPR-X directly at node at step  23
     Pred 2 entered:  X02
     Check for pred "X02" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02']
     Walked coords  [(0, 3), (1, 3), (2, 3), (3, 3), (3, 4)]
     1.0 Inputs are send from pred at step  19
     1.3 Putting inputs to DPR-X directly at node at step  25
     3.0 Arithmetic op is done at step  26
     4.0 ---Notification is changed for 12 1
     4.0 Saving results to DPR2 directly at step  27
     (3, 4) ---> [[], [], [26], [23, 25, 27], [21, 23, 22, 24]]
###### 4
     Pred 1 entered:  F10
     Check for pred "F10" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01']
     Walked coords  [(0, 2), (1, 2), (2, 2), (3, 2), (4, 2)]
     1.0 Inputs are send from pred at step  14
     1.3 Putting inputs to DPR-X directly at node at step  20
     Pred 2 entered:  X01
     Check for pred "X01" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01']
     Walked coords  [(0, 2), (1, 2), (2, 2), (3, 2), (4, 2)]
     1.0 Inputs are send from pred at step  16
     1.3 Putting inputs to DPR-X directly at node at step  22
     3.0 Arithmetic op is done at step  23
     4.2 Saving results to own MCLM at step  26
     (4, 2) ---> [[], [25], [23], [20, 22, 24], [25, 28, 19, 21]]
###### 3
     Pred 1 entered:  F02
     Check for pred "F02" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02']
     Walked coords  [(0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
     1.0 Inputs are send from pred at step  23
     1.3 Putting inputs to DPR-X directly at node at step  29
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0']
     Walked coords  [(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
     1.0 Inputs are send from pred at step  18
     1.3 Putting inputs to DPR-X directly at node at step  25
     3.0 Arithmetic op is done at step  30
     4.0 ---Notification is changed for 11 1
     4.0 Saving results to DPR2 directly at step  31
     (0, 5) ---> [[], [], [30], [29, 25, 31], [28, 24]]
###### 2
     Pred 1 entered:  F01
     Check for pred "F01" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02']
     Walked coords  [(0, 1), (1, 1), (2, 1), (3, 1), (4, 1)]
     1.0 Inputs are send from pred at step  28
     1.3 Putting inputs to DPR-X directly at node at step  34
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (4, 1)]
     1.0 Inputs are send from pred at step  16
     1.3 Putting inputs to DPR-X directly at node at step  23
     3.0 Arithmetic op is done at step  35
     4.2 Saving results to own MCLM at step  38
     (4, 1) ---> [[], [37], [35], [34, 23, 36], [24, 27, 33, 22]]
###### 1
     Pred 1 entered:  F00
     Check for pred "F00" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (3, 1), (3, 2), (3, 3)]
     1.0 Inputs are send from pred at step  37
     1.3 Putting inputs to DPR-X directly at node at step  45
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (3, 1), (3, 2), (3, 3)]
     1.0 Inputs are send from pred at step  39
     1.3 Putting inputs to DPR-X directly at node at step  47
     3.0 Arithmetic op is done at step  48
     4.0 ---Notification is changed for 10 1
     4.0 Saving results to DPR2 directly at step  49
     (3, 3) ---> [[], [], [48], [45, 47, 49], [43, 21, 23, 44, 46]]
###### 13
     Pred 1 entered:  7
     Pred 2 entered:  8
     Check for pred "8" =====> in (4, 3) ['8']
     Walked coords  [(4, 3), (4, 2), (4, 1), (4, 0)]
     1.0 Inputs are send from pred at step  37
     1.2 Putting inputs to DPR1 directly at node at step  42
     3.0 Arithmetic op is done at step  43
     4.2 Saving results to own MCLM at step  46
     (4, 0) ---> [[], [45], [29, 43], [26, 28, 30, 42, 44], [25, 27, 21, 41]]
###### 12
     Pred 1 entered:  5
     Pred 2 entered:  6
     Check for pred "6" =====> in (4, 4) ['6']
     Walked coords  [(4, 4), (3, 4)]
     1.0 Inputs are send from pred at step  32
     1.2 Putting inputs to DPR1 directly at node at step  35
     3.0 Arithmetic op is done at step  36
     4.0 ---Notification is changed for 15 1
     4.0 Saving results to DPR2 directly at step  37
     (3, 4) ---> [[], [], [26, 36], [23, 25, 27, 35, 37], [21, 23, 22, 24, 34]]
###### 11
     Pred 1 entered:  3
     Pred 2 entered:  4
     Check for pred "4" =====> in (4, 2) ['4']
     Walked coords  [(4, 2), (4, 3), (4, 4), (4, 5), (3, 5), (2, 5), (1, 5), (0, 5)]
     1.0 Inputs are send from pred at step  29
     1.2 Putting inputs to DPR1 directly at node at step  38
     3.0 Arithmetic op is done at step  39
     4.2 Saving results to own MCLM at step  42
     (0, 5) ---> [[], [41], [30, 39], [29, 25, 31, 38, 40], [28, 24, 37]]
###### 10
     Pred 1 entered:  1
     Pred 2 entered:  2
     Check for pred "2" =====> in (4, 1) ['2']
     Walked coords  [(4, 1), (4, 2), (4, 3), (3, 3)]
     1.0 Inputs are send from pred at step  41
     1.2 Putting inputs to DPR1 directly at node at step  46
     3.0 Arithmetic op is done at step  50
     4.0 ---Notification is changed for 14 1
     4.0 Saving results to DPR2 directly at step  51
     (3, 3) ---> [[], [], [48, 50], [45, 47, 49, 46, 51], [43, 21, 23, 44, 46, 45]]
###### 15
     Pred 1 entered:  12
     Pred 2 entered:  13
     Check for pred "13" =====> in (4, 0) ['13']
     Walked coords  [(4, 0), (4, 1), (4, 2), (4, 3), (4, 4), (3, 4)]
     1.0 Inputs are send from pred at step  49
     1.2 Putting inputs to DPR1 directly at node at step  56
     3.0 Arithmetic op is done at step  57
     4.2 Saving results to own MCLM at step  60
     (3, 4) ---> [[], [59], [26, 36, 57], [23, 25, 27, 35, 37, 56, 58], [21, 23, 22, 24, 34, 55]]
###### 14
     Pred 1 entered:  10
     Pred 2 entered:  11
     Check for pred "11" =====> in (0, 5) ['11']
     Walked coords  [(0, 5), (1, 5), (2, 5), (3, 5), (3, 4), (3, 3)]
     1.0 Inputs are send from pred at step  45
     1.2 Putting inputs to DPR1 directly at node at step  52
     3.0 Arithmetic op is done at step  53
     4.0 ---Notification is changed for 16 1
     4.0 Saving results to DPR2 directly at step  54
     (3, 3) ---> [[], [], [48, 50, 53], [45, 47, 49, 46, 51, 52, 54], [43, 21, 23, 44, 46, 45, 51]]
###### 9
     Pred 1 entered:  F22
     Check for pred "F22" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13']
     Walked coords  [(1, 2), (1, 3), (1, 4), (1, 5)]
     1.0 Inputs are send from pred at step  20
     1.3 Putting inputs to DPR-X directly at node at step  25
     Pred 2 entered:  X13
     Check for pred "X13" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13']
     Walked coords  [(1, 2), (1, 3), (1, 4), (1, 5)]
     1.0 Inputs are send from pred at step  23
     1.3 Putting inputs to DPR-X directly at node at step  28
     3.0 Arithmetic op is done at step  29
     4.2 Saving results to own MCLM at step  32
     (1, 5) ---> [[], [31], [29], [25, 28, 30], [36, 47, 24, 27]]
###### 16
     Pred 1 entered:  14
     Pred 2 entered:  15
     Check for pred "15" =====> in (3, 4) ['15']
     Walked coords  [(3, 4), (3, 3)]
     1.0 Inputs are send from pred at step  63
     1.2 Putting inputs to DPR1 directly at node at step  66
     3.0 Arithmetic op is done at step  67
     4.0 ---Notification is changed for 17 1
     4.0 Saving results to DPR2 directly at step  68
     (3, 3) ---> [[], [], [48, 50, 53, 67], [45, 47, 49, 46, 51, 52, 54, 66, 68], [43, 21, 23, 44, 46, 45, 51, 65]]
###### 17
     Pred 1 entered:  16
     Pred 2 entered:  9
     Check for pred "9" =====> in (1, 5) ['9']
     Walked coords  [(1, 5), (2, 5), (3, 5), (3, 4), (3, 3)]
     1.0 Inputs are send from pred at step  36
     1.2 Putting inputs to DPR1 directly at node at step  42
     3.0 Arithmetic op is done at step  69
     4.2 Saving results to own MCLM at step  72
     (3, 3) ---> [[], [71], [48, 50, 53, 67, 69], [45, 47, 49, 46, 51, 52, 54, 66, 68, 42, 70], [43, 21, 23, 44, 46, 45, 51, 65, 41]]
###### y02
     Pred 1 entered:  17
     1.4 This is actually last node at step  72

Final results after rescheduling (node.name, node.sched): by PEs
(3, 3)  --->  [('1', 49), ('10', 51), ('14', 54), ('16', 68), ('17', 72), ('y02', 72)]
(3, 4)  --->  [('5', 27), ('12', 37), ('15', 60)]
(0, 5)  --->  [('3', 31), ('11', 42)]
(4, 0)  --->  [('7', 30), ('13', 46)]
(4, 1)  --->  [('2', 38)]
(4, 2)  --->  [('4', 26)]
(4, 4)  --->  [('6', 29)]
(4, 3)  --->  [('8', 34)]
(1, 5)  --->  [('9', 32)]

PE map 
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Node scheds and CCM commands:
1  --->  [(1, 0), ['CCM1', 1, 0, 'PE1'], [(0, 4), ['CCM1', 1, 1, 'PE1']], [(0, 0), ['CCM1', 1, 1, 'PE1']], [(0, 3), ['CCM1', 1, 1, 'PE1']], [(0, 2), ['CCM1', 1, 1, 'PE1']], [(0, 1), ['CCM1', 1, 1, 'PE1']], [(1, 1), ['CCM1', 1, 0, 'PE1']], [(1, 2), ['CCM1', 1, 1, 'PE1']]]
2  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'DPR1']], [(0, 2), ['CCM1', 2, 0, 'PE1']], [(0, 1), ['CCM3', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']]]
3  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(1, 0), ['CCM1', 3, 1, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 3, 0, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 3, 1, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 3, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']]]
6  --->  [(2, 0), ['CCM6', 'DPR1'], [(0, 3), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']]]
4  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM1', 4, 0, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']]]
5  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(0, 4), ['CCM3', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 5, 1, 'PE1']], [(0, 1), ['CCM1', 5, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 5, 3, 'PE1']], [(0, 2), ['CCM1', 5, 0, 'PE1']]]
8  --->  [(2, 0), ['CCM6', 'DPR2'], [(0, 3), ['CCM6', 'DPR2']], [(0, 4), ['CCM5', 'DPR3']], [(0, 2), ['CCM6', 'DPR2']], [(1, 1), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM1', 8, 3, 'PE1']], [(0, 1), ['CCM3', 'PERouter']]]
9  --->  [(2, 0), ['CCM4', '*'], [(0, 3), ['CCM4', '*']], [(0, 4), ['CCM2', 'MCLM1']], [(0, 2), ['CCM4', '*']], [(1, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 9, 0, 'PE1']], [(1, 2), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(0, 1), ['CCM6', 'NodeRouter']]]
10  --->  [(2, 0), ['CCM5', 'DPR3'], [(0, 3), ['CCM5', 'DPR2']], [(0, 2), ['CCM5', 'DPR2']], [(1, 1), ['CCM4', '*']], [(0, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'DPR1']], [(0, 0), ['CCM1', 10, 1, 'PE1']], [(1, 2), ['CCM5', 'DPR3']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 10, 3, 'PE1']], [(0, 2), ['CCM1', 10, 4, 'PE1']], [(1, 2), ['CCM1', 10, 2, 'PE1']]]
11  --->  [(2, 0), ['CCM2', 'MCLM1'], [(1, 1), ['CCM5', 'DPR3']], [(0, 1), ['CCM4', '*']], [(1, 0), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'DPR2']], [(0, 4), ['CCM1', 11, 2, 'PE1']], [(1, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM1', 11, 3, 'PE1']], [(3, 0), ['CCM6', 'DPR1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']]]
7  --->  [(0, 4), ['CCM4', '*'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 7, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 7, 1, 'PE1']], [(3, 2), ['CCM6', 'DPR1']]]
12  --->  [(1, 1), ['CCM2', 'MCLM1'], [(0, 1), ['CCM5', 'DPR2']], [(1, 0), ['CCM6', 'DPR2']], [(0, 0), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 4), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 12, 0, 'PE1']]]
13  --->  [(1, 0), ['CCM4', '*'], [(0, 0), ['CCM5', 'DPR2']], [(2, 0), ['CCM1', 13, 0, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 13, 4, 'PE1']], [(0, 3), ['CCM1', 13, 4, 'PE1']], [(0, 2), ['CCM3', 'PERouter']]]
14  --->  [(1, 0), ['CCM5', 'DPR3'], [(2, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 14, 2, 'PE1']], [(1, 2), ['CCM1', 14, 0, 'PE1']], [(1, 0), ['CCM1', 14, 1, 'PE1']], [(2, 4), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 14, 6, 'PE1']], [(0, 0), ['CCM1', 14, 1, 'PE1']]]
15  --->  [(1, 0), ['CCM2', 'MCLM1'], [(2, 0), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 15, 3, 'PE1']], [(0, 3), ['CCM1', 15, 3, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']]]
22  --->  [(0, 3), ['CCM6', 'DPR1'], [(0, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'DPR2']], [(3, 0), ['CCM5', 'DPR2']], [(2, 4), ['CCM2', 'MCLM1']], [(1, 4), ['CCM1', 22, 0, 'PE1']], [(3, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']]]
23  --->  [(0, 3), ['CCM4', '+'], [(0, 0), ['CCM4', '+']], [(3, 1), ['CCM4', '*']], [(1, 4), ['CCM3', 'PERouter']], [(3, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(4, 4), ['CCM6', 'DPR1']], [(3, 4), ['CCM6', 'DPR1']], [(4, 2), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 1), ['CCM6', 'DPR2']], [(1, 2), ['CCM6', 'NodeRouter']]]
24  --->  [(0, 3), ['CCM5', 'DPR3'], [(0, 0), ['CCM5', 'DPR2']], [(0, 1), ['CCM1', 24, 2, 'PE1']], [(3, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 24, 1, 'PE1']], [(2, 3), ['CCM6', 'DPR1']], [(2, 4), ['CCM1', 24, 0, 'PE1']], [(1, 4), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM5', 'DPR3']]]
25  --->  [(0, 3), ['CCM2', 'MCLM1'], [(0, 1), ['CCM3', 'PERouter']], [(3, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 4), ['CCM3', 'PERouter']], [(4, 4), ['CCM6', 'DPR2']], [(3, 4), ['CCM6', 'DPR2']], [(4, 2), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'DPR2']], [(1, 5), ['CCM6', 'DPR1']]]
17  --->  [(0, 2), ['CCM6', 'DPR1'], [(1, 0), ['CCM1', 17, 2, 'PE1']], [(3, 1), ['CCM6', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 4), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(3, 2), ['CCM4', '*']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 17, 6, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 17, 6, 'PE1']], [(0, 0), ['CCM3', 'PERouter']]]
18  --->  [(0, 2), ['CCM4', '+'], [(1, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR2']], [(1, 4), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(3, 2), ['CCM5', 'DPR3']], [(1, 1), ['CCM1', 18, 3, 'PE1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 18, 1, 'PE1']]]
19  --->  [(0, 2), ['CCM5', 'DPR2'], [(0, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(2, 4), ['CCM6', 'DPR2']], [(1, 3), ['CCM4', '*']], [(1, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 19, 3, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM3', 'PERouter']]]
16  --->  [(1, 1), ['CCM6', 'NodeRouter'], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 16, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 16, 0, 'PE1']], [(3, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 16, 1, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']]]
20  --->  [(0, 1), ['CCM4', '+'], [(3, 0), ['CCM6', 'DPR2']], [(2, 4), ['CCM4', '*']], [(1, 3), ['CCM5', 'DPR2']], [(1, 4), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR1']], [(1, 2), ['CCM6', 'NodeRouter']]]
21  --->  [(0, 1), ['CCM5', 'DPR3'], [(0, 0), ['CCM6', 'DPR1']], [(3, 0), ['CCM4', '*']], [(2, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM1', 21, 0, 'PE1']], [(1, 1), ['CCM1', 21, 6, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 21, 6, 'PE1']], [(0, 1), ['CCM1', 21, 1, 'PE1']], [(1, 2), ['CCM1', 21, 4, 'PE1']]]
27  --->  [(0, 3), ['CCM1', 27, 2, 'PE1'], [(0, 0), ['CCM3', 'PERouter']], [(3, 1), ['CCM1', 27, 0, 'PE1']], [(2, 1), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR1']], [(4, 4), ['CCM5', 'DPR3']], [(3, 4), ['CCM5', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(4, 2), ['CCM1', 27, 0, 'PE1']]]
28  --->  [(0, 3), ['CCM3', 'PERouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 1), ['CCM3', 'PERouter']], [(4, 0), ['CCM6', 'DPR2']], [(4, 4), ['CCM2', 'MCLM1']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM3', 'PERouter']], [(1, 5), ['CCM6', 'DPR2']]]
29  --->  [(0, 3), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM6', 'DPR1']], [(4, 0), ['CCM4', '*']], [(0, 5), ['CCM6', 'DPR1']], [(4, 2), ['CCM6', 'NodeRouter']], [(1, 5), ['CCM4', '*']]]
32  --->  [(0, 2), ['CCM6', 'DPR1'], [(2, 2), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM6', 'DPR1']], [(1, 3), ['CCM5', 'DPR2']], [(4, 3), ['CCM5', 'DPR3']], [(4, 4), ['CCM6', 'NodeRouter']]]
33  --->  [(0, 2), ['CCM4', '+'], [(2, 2), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 33, 1, 'PE1']], [(3, 0), ['CCM4', '+']], [(4, 3), ['CCM2', 'MCLM1']]]
34  --->  [(0, 2), ['CCM5', 'DPR3'], [(2, 2), ['CCM5', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM5', 'DPR3']], [(4, 1), ['CCM6', 'DPR1']], [(1, 5), ['CCM1', 34, 0, 'PE1']]]
35  --->  [(0, 2), ['CCM2', 'MCLM1'], [(2, 3), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 0), ['CCM2', 'MCLM1']], [(2, 2), ['CCM4', '+']], [(4, 1), ['CCM4', '*']], [(0, 0), ['CCM1', 35, 0, 'PE1']], [(4, 3), ['CCM1', 35, 0, 'PE1']], [(3, 4), ['CCM6', 'DPR1']], [(1, 5), ['CCM3', 'PERouter']]]
26  --->  [(0, 1), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 26, 1, 'PE1']], [(2, 4), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(4, 4), ['CCM4', '*']], [(3, 4), ['CCM4', '*']], [(0, 1), ['CCM1', 26, 0, 'PE1']]]
30  --->  [(0, 0), ['CCM4', '+'], [(1, 3), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM5', 'DPR2']], [(0, 5), ['CCM4', '*']], [(4, 4), ['CCM1', 30, 0, 'PE1']], [(1, 5), ['CCM5', 'DPR3']]]
31  --->  [(0, 0), ['CCM5', 'DPR2'], [(0, 0), ['CCM1', 31, 0, 'PE1']], [(1, 3), ['CCM4', '+']], [(4, 3), ['CCM4', '*']], [(0, 5), ['CCM5', 'DPR2']], [(4, 4), ['CCM3', 'PERouter']], [(1, 5), ['CCM2', 'MCLM1']]]
37  --->  [(0, 2), ['CCM1', 37, 2, 'PE1'], [(2, 3), ['CCM5', 'DPR3']], [(2, 2), ['CCM2', 'MCLM1']], [(3, 0), ['CCM1', 37, 0, 'PE1']], [(4, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 37, 1, 'PE1']], [(4, 3), ['CCM6', 'NodeRouter']], [(3, 4), ['CCM5', 'DPR2']]]
38  --->  [(0, 2), ['CCM3', 'PERouter'], [(2, 3), ['CCM2', 'MCLM1']], [(2, 1), ['CCM6', 'DPR1']], [(3, 0), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 5), ['CCM6', 'DPR1']]]
39  --->  [(0, 2), ['CCM6', 'NodeRouter'], [(3, 0), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM1', 39, 0, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM4', '+']], [(4, 1), ['CCM1', 39, 0, 'PE1']]]
43  --->  [(0, 0), ['CCM6', 'DPR1'], [(4, 0), ['CCM4', '+']], [(0, 5), ['CCM1', 43, 0, 'PE1']]]
44  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(4, 0), ['CCM5', 'DPR3']], [(0, 5), ['CCM3', 'PERouter']]]
45  --->  [(0, 0), ['CCM5', 'DPR2'], [(3, 3), ['CCM6', 'DPR1']], [(4, 0), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'NodeRouter']]]
46  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']]]
47  --->  [(0, 0), ['CCM5', 'DPR3'], [(2, 1), ['CCM4', '+']], [(1, 3), ['CCM4', '+']], [(3, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM1', 47, 0, 'PE1']]]
48  --->  [(0, 0), ['CCM2', 'MCLM1'], [(2, 1), ['CCM5', 'DPR2']], [(1, 3), ['CCM5', 'DPR3']], [(3, 3), ['CCM4', '*']], [(4, 0), ['CCM3', 'PERouter']]]
36  --->  [(2, 3), ['CCM4', '*'], [(2, 2), ['CCM5', 'DPR3']], [(4, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM3', 'PERouter']], [(4, 3), ['CCM3', 'PERouter']], [(3, 4), ['CCM4', '+']], [(1, 5), ['CCM6', 'NodeRouter']]]
40  --->  [(2, 1), ['CCM6', 'DPR2'], [(2, 3), ['CCM1', 40, 0, 'PE1']], [(2, 2), ['CCM3', 'PERouter']], [(0, 5), ['CCM5', 'DPR3']], [(4, 1), ['CCM3', 'PERouter']]]
41  --->  [(2, 1), ['CCM4', '*'], [(2, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM2', 'MCLM1']], [(4, 1), ['CCM6', 'NodeRouter']]]
42  --->  [(2, 1), ['CCM5', 'DPR2'], [(2, 3), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']]]
49  --->  [(1, 3), ['CCM2', 'MCLM1'], [(2, 1), ['CCM4', '+']], [(3, 3), ['CCM5', 'DPR2']], [(4, 0), ['CCM6', 'NodeRouter']]]
50  --->  [(2, 1), ['CCM5', 'DPR2'], [(3, 3), ['CCM4', '+']]]
51  --->  [(1, 3), ['CCM1', 51, 0, 'PE1'], [(3, 3), ['CCM5', 'DPR2']]]
52  --->  [(1, 3), ['CCM3', 'PERouter'], [(3, 3), ['CCM6', 'DPR1']]]
53  --->  [(1, 3), ['CCM6', 'NodeRouter'], [(3, 3), ['CCM4', '+']]]
58  --->  [(2, 1), ['CCM6', 'DPR1'], [(3, 4), ['CCM5', 'DPR3']]]
59  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM2', 'MCLM1']]]
60  --->  [(2, 1), ['CCM5', 'DPR2']]
61  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM1', 61, 0, 'PE1']]]
62  --->  [(2, 1), ['CCM5', 'DPR3'], [(3, 4), ['CCM3', 'PERouter']]]
63  --->  [(2, 1), ['CCM2', 'MCLM1'], [(3, 4), ['CCM6', 'NodeRouter']]]
56  --->  [(3, 4), ['CCM6', 'DPR1']]
57  --->  [(3, 4), ['CCM4', '+']]
54  --->  [(3, 3), ['CCM5', 'DPR2']]
66  --->  [(3, 3), ['CCM6', 'DPR1']]
67  --->  [(3, 3), ['CCM4', '+']]
68  --->  [(3, 3), ['CCM5', 'DPR2']]
69  --->  [(3, 3), ['CCM4', '+']]
70  --->  [(3, 3), ['CCM5', 'DPR3']]
71  --->  [(3, 3), ['CCM2', 'MCLM1']]

Router scheds and CCM commands:
4  --->  [(0, 1), (0, 2), [(2, 2), (3, 2)]]
5  --->  [(0, 1), (0, 3), [(1, 2), (1, 1)]]
6  --->  [(1, 0), (1, 1)]
8  --->  [(1, 1), (1, 0), [(2, 0), (3, 0)], [(1, 2), (1, 3)]]
16  --->  [(2, 1), (2, 2), [(1, 4), (2, 4)], [(1, 2), (3, 2)]]
17  --->  [(2, 1), (2, 3), [(1, 1), (1, 0)], [(2, 0), (3, 0)], [(1, 2), (4, 2)], [(1, 2), (2, 2)], [(1, 0), (2, 0)]]
18  --->  [(2, 1), (1, 3), [(1, 1), (0, 0)], [(1, 4), (2, 4)], [(1, 3), (2, 3)], [(1, 2), (3, 2)], [(1, 0), (3, 0)]]
19  --->  [(2, 1), (0, 3), [(2, 1), (3, 1)], [(1, 1), (2, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(1, 2), (4, 2)], [(0, 1), (0, 2)], [(1, 0), (4, 0)]]
14  --->  [(0, 3), (0, 2), [(2, 1), (3, 1)], [(1, 2), (1, 4)]]
40  --->  [(0, 1), (0, 0), [(3, 1), (3, 2)], [(1, 0), (3, 1)], [(1, 0), (2, 0)]]
11  --->  [(1, 4), (2, 4), [(1, 1), (2, 2)]]
9  --->  [(1, 2), (1, 4)]
13  --->  [(1, 2), (1, 3), [(2, 2), (3, 2)]]
10  --->  [(1, 1), (2, 1)]
27  --->  [(1, 0), (2, 0), [(2, 3), (1, 3)], [(2, 1), (4, 3)]]
28  --->  [(1, 0), (2, 1)]
29  --->  [(1, 0), (2, 2), [(1, 0), (2, 0)], [(1, 1), (2, 1)]]
20  --->  [(1, 1), (2, 2), [(1, 4), (4, 4)], [(1, 4), (2, 4)], [(1, 3), (3, 4)], [(1, 3), (2, 3)], [(0, 1), (0, 3)], [(1, 0), (4, 1)]]
21  --->  [(1, 1), (2, 3), [(2, 1), (3, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(0, 1), (0, 4)], [(1, 3), (1, 4)]]
30  --->  [(1, 0), (2, 1), [(1, 1), (3, 1)], [(4, 3), (4, 4)]]
31  --->  [(1, 0), (2, 2), [(1, 1), (4, 1)], [(4, 3), (4, 5)]]
32  --->  [(1, 0), (2, 3), [(4, 3), (3, 5)]]
34  --->  [(1, 0), (2, 0), [(4, 3), (1, 5)]]
35  --->  [(1, 0), (2, 1), [(4, 3), (0, 5)]]
36  --->  [(1, 0), (2, 0)]
37  --->  [(1, 0), (2, 1), [(2, 5), (3, 5)]]
25  --->  [(2, 4), (2, 3), [(2, 1), (4, 1)], [(2, 0), (4, 0)], [(0, 2), (0, 4)], [(1, 3), (1, 5)]]
26  --->  [(2, 4), (2, 2), [(2, 1), (4, 2)], [(0, 2), (0, 5)]]
43  --->  [(2, 2), (2, 1), [(3, 1), (1, 3)], [(1, 0), (3, 2)], [(4, 2), (3, 3)]]
41  --->  [(3, 1), (3, 3), [(1, 0), (3, 2)], [(1, 0), (3, 0)]]
42  --->  [(3, 1), (2, 3), [(1, 0), (3, 3)], [(1, 0), (3, 1)], [(4, 2), (4, 3)]]
54  --->  [(2, 3), (2, 2)]
55  --->  [(2, 3), (2, 1)]
24  --->  [(3, 1), (2, 1), [(2, 1), (4, 3)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(0, 2), (0, 3)], [(1, 3), (1, 4)]]
22  --->  [(2, 1), (4, 1), [(2, 0), (3, 0)], [(1, 4), (4, 4)], [(1, 3), (3, 4)], [(0, 1), (0, 5)], [(1, 3), (1, 5)]]
23  --->  [(2, 1), (4, 2), [(2, 0), (4, 0)]]
15  --->  [(1, 2), (2, 2)]
38  --->  [(1, 0), (2, 0), [(4, 2), (4, 1)], [(2, 5), (3, 4)]]
39  --->  [(1, 0), (3, 0), [(4, 2), (4, 0)], [(2, 5), (3, 3)]]
44  --->  [(1, 0), (3, 3)]
33  --->  [(4, 3), (2, 5)]
50  --->  [(4, 1), (4, 2)]
51  --->  [(4, 1), (4, 3)]
52  --->  [(4, 1), (4, 4)]
53  --->  [(4, 1), (3, 4)]
46  --->  [(1, 5), (2, 5)]
47  --->  [(1, 5), (3, 5)]
48  --->  [(1, 5), (3, 4)]
49  --->  [(1, 5), (3, 3)]

Rescheduler marker:
(0, 0)  --->  [[1, 3, 5, 7, 9, 10, 24, 26, 31, 33, 16, 14, 35, 37], [48], [12, 23, 30, 44, 46], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 24, 29, 31, 43, 45, 21, 47, 25, 26, 27, 28, 32, 33, 34, 35, 17, 18, 15, 16, 36, 37, 38, 39], [4, 6, 8, 10, 21, 28, 42, 20, 27, 29, 34, 36, 19, 17, 38, 40]]
(0, 1)  --->  [[1, 5, 24, 7, 16, 21, 26], [22], [11, 20], [10, 2, 12, 6, 7, 19, 21, 25, 26, 8, 9, 17, 18, 22, 23, 27, 28], [5, 9, 8, 18, 27, 41, 10, 19, 24, 20, 29]]
(0, 2)  --->  [[1, 2, 37, 5, 10, 12, 14], [35], [9, 18, 33], [8, 2, 10, 3, 4, 17, 19, 32, 34, 38, 39, 6, 7, 11, 12, 13, 14, 15, 16], [6, 7, 5, 16, 31, 40, 8, 13, 15, 17, 25, 21]]
(0, 3)  --->  [[1, 3, 27, 10, 13, 15, 17], [25], [9, 23], [6, 8, 10, 2, 3, 4, 5, 22, 24, 28, 29, 11, 12, 14, 15, 16, 17, 18, 19], [5, 7, 4, 6, 21, 15, 30, 13, 16, 18, 20, 26, 22]]
(0, 4)  --->  [[1, 4, 11, 8, 13, 15, 17], [9], [7], [2, 3, 6, 5, 8, 12, 13, 9, 10, 14, 15, 16, 17, 18, 19], [4, 5, 14, 11, 16, 18, 20, 27, 23]]
(0, 5)  --->  [[43], [41], [30, 39], [29, 25, 31, 38, 40, 44, 45], [28, 24, 37, 46]]
(0, 6)  --->  [[], [], [], [], []]
(0, 7)  --->  [[], [], [], [], []]
(0, 8)  --->  [[], [], [], [], []]
(0, 9)  --->  [[], [], [], [], []]
(1, 0)  --->  [[1, 3, 17, 5, 14, 19, 21], [15], [13], [2, 3, 4, 5, 11, 12, 14, 18, 19, 6, 7, 15, 16, 20, 21, 22, 23], [4, 6, 7, 10, 11, 20, 19, 8, 17, 28, 30, 35, 37, 22, 24, 18, 39, 41]]
(1, 1)  --->  [[14, 1, 3, 11, 16, 18, 21], [12], [10], [8, 9, 11, 15, 16, 2, 3, 4, 5, 12, 13, 17, 18, 19, 20, 22, 23], [7, 8, 9, 17, 4, 6, 18, 14, 19, 11, 20, 21, 24, 30]]
(1, 2)  --->  [[14, 1, 10, 18, 21], [11], [9], [6, 8, 10, 15, 16, 2, 3, 11, 12, 19, 20, 22, 23], [6, 5, 7, 17, 9, 14, 4, 13, 16, 18, 21, 24]]
(1, 3)  --->  [[51], [49], [19, 31, 47], [15, 18, 20, 30, 32, 46, 48, 52, 53], [20, 14, 17, 10, 15, 29, 45, 54, 19, 21, 22, 25]]
(1, 4)  --->  [[22], [20], [18], [12, 17, 19, 23, 24], [12, 17, 11, 16, 25, 19, 21, 23, 26]]
(1, 5)  --->  [[34], [31], [29], [25, 28, 30, 35, 36], [36, 47, 24, 27, 37]]
(1, 6)  --->  [[], [], [], [], []]
(1, 7)  --->  [[], [], [], [], []]
(1, 8)  --->  [[], [], [], [], []]
(1, 9)  --->  [[], [], [], [], []]
(2, 0)  --->  [[13], [11], [9], [6, 8, 10, 14, 15], [5, 7, 16, 9, 18, 29, 31, 36, 38, 23, 25, 19, 40, 42]]
(2, 1)  --->  [[], [63], [41, 47, 49, 59, 61], [38, 40, 42, 46, 48, 44, 50, 58, 60, 27, 62], [17, 15, 20, 12, 30, 21, 32, 37, 39, 45, 43, 57, 26, 22, 25, 31]]
(2, 2)  --->  [[39], [37], [33, 35], [14, 32, 34, 29, 36, 40, 41], [18, 13, 31, 22, 33, 28, 44, 42, 5, 14, 56, 17, 19]]
(2, 3)  --->  [[40], [38], [36], [24, 35, 37, 41, 42], [19, 23, 34, 28, 27, 43, 44, 55, 20, 22]]
(2, 4)  --->  [[24], [22], [20], [14, 19, 21, 25, 26], [13, 18, 27, 26, 20, 22]]
(2, 5)  --->  [[], [], [], [], [35, 48, 38]]
(2, 6)  --->  [[], [], [], [], []]
(2, 7)  --->  [[], [], [], [], []]
(2, 8)  --->  [[], [], [], [], []]
(2, 9)  --->  [[], [], [], [], []]
(3, 0)  --->  [[37], [35], [21, 33], [11, 20, 22, 32, 34, 38, 39], [10, 19, 31, 40, 24, 26, 20, 41, 43]]
(3, 1)  --->  [[27], [25], [23], [17, 22, 24, 28, 29], [16, 21, 30, 41, 25, 23, 26, 32, 42, 44]]
(3, 2)  --->  [[21], [19], [17], [7, 16, 18, 22, 23], [42, 6, 15, 24, 18, 20, 43, 45]]
(3, 3)  --->  [[], [71], [48, 50, 53, 67, 69], [45, 47, 49, 46, 51, 52, 54, 66, 68, 42, 70], [43, 21, 23, 44, 46, 45, 51, 65, 41]]
(3, 4)  --->  [[61], [59], [26, 36, 57], [23, 25, 27, 35, 37, 56, 58, 62, 63], [21, 23, 22, 24, 34, 55, 50, 64, 40]]
(3, 5)  --->  [[], [], [], [], [34, 49, 39]]
(3, 6)  --->  [[], [], [], [], []]
(3, 7)  --->  [[], [], [], [], []]
(3, 8)  --->  [[], [], [], [], []]
(3, 9)  --->  [[], [], [], [], []]
(4, 0)  --->  [[47], [45], [29, 43], [26, 28, 30, 42, 44, 48, 49], [25, 27, 21, 41, 50]]
(4, 1)  --->  [[39], [37], [35], [34, 23, 36, 40, 41], [24, 27, 33, 22, 40, 42, 51]]
(4, 2)  --->  [[27], [25], [23], [20, 22, 24, 28, 29], [25, 28, 19, 21, 39, 30, 43, 52]]
(4, 3)  --->  [[35], [33], [31], [27, 30, 32, 36, 37], [26, 29, 38, 31, 44, 53]]
(4, 4)  --->  [[30], [28], [26], [23, 25, 27, 31, 32], [22, 24, 33, 32, 54]]
(4, 5)  --->  [[], [], [], [], [33]]
(4, 6)  --->  [[], [], [], [], []]
(4, 7)  --->  [[], [], [], [], []]
(4, 8)  --->  [[], [], [], [], []]
(4, 9)  --->  [[], [], [], [], []]
(5, 0)  --->  [[], [], [], [], []]
(5, 1)  --->  [[], [], [], [], []]
(5, 2)  --->  [[], [], [], [], []]
(5, 3)  --->  [[], [], [], [], []]
(5, 4)  --->  [[], [], [], [], []]
(5, 5)  --->  [[], [], [], [], []]
(5, 6)  --->  [[], [], [], [], []]
(5, 7)  --->  [[], [], [], [], []]
(5, 8)  --->  [[], [], [], [], []]
(5, 9)  --->  [[], [], [], [], []]
(6, 0)  --->  [[], [], [], [], []]
(6, 1)  --->  [[], [], [], [], []]
(6, 2)  --->  [[], [], [], [], []]
(6, 3)  --->  [[], [], [], [], []]
(6, 4)  --->  [[], [], [], [], []]
(6, 5)  --->  [[], [], [], [], []]
(6, 6)  --->  [[], [], [], [], []]
(6, 7)  --->  [[], [], [], [], []]
(6, 8)  --->  [[], [], [], [], []]
(6, 9)  --->  [[], [], [], [], []]
(7, 0)  --->  [[], [], [], [], []]
(7, 1)  --->  [[], [], [], [], []]
(7, 2)  --->  [[], [], [], [], []]
(7, 3)  --->  [[], [], [], [], []]
(7, 4)  --->  [[], [], [], [], []]
(7, 5)  --->  [[], [], [], [], []]
(7, 6)  --->  [[], [], [], [], []]
(7, 7)  --->  [[], [], [], [], []]
(7, 8)  --->  [[], [], [], [], []]
(7, 9)  --->  [[], [], [], [], []]
(8, 0)  --->  [[], [], [], [], []]
(8, 1)  --->  [[], [], [], [], []]
(8, 2)  --->  [[], [], [], [], []]
(8, 3)  --->  [[], [], [], [], []]
(8, 4)  --->  [[], [], [], [], []]
(8, 5)  --->  [[], [], [], [], []]
(8, 6)  --->  [[], [], [], [], []]
(8, 7)  --->  [[], [], [], [], []]
(8, 8)  --->  [[], [], [], [], []]
(8, 9)  --->  [[], [], [], [], []]
(9, 0)  --->  [[], [], [], [], []]
(9, 1)  --->  [[], [], [], [], []]
(9, 2)  --->  [[], [], [], [], []]
(9, 3)  --->  [[], [], [], [], []]
(9, 4)  --->  [[], [], [], [], []]
(9, 5)  --->  [[], [], [], [], []]
(9, 6)  --->  [[], [], [], [], []]
(9, 7)  --->  [[], [], [], [], []]
(9, 8)  --->  [[], [], [], [], []]
(9, 9)  --->  [[], [], [], [], []]

Scheduling duration in clocks:  72

CCM Size in bits:  2486

CCM Size in bytes:  311

------------------Synthesys of equation 4 has started!---------------

[('1', 'F00*int0'), ('2', 'F01*X00'), ('3', 'F02*X01'), ('4', 'F10*int0'), ('5', 'F11*X10'), ('6', 'F12*X11'), ('7', 'F20*int0'), ('8', 'F21*X20'), ('9', 'F22*X21'), ('10', '1+2'), ('11', '3+4'), ('12', '5+6'), ('13', '7+8'), ('14', '10+11'), ('15', '12+13'), ('16', '14+15'), ('17', '16+9')]

Graph nodes:
Name   Value   Op_Type   Conn
y10      None      Write      []
1      None      *      ['10']
2      None      *      ['10']
3      None      *      ['11']
4      None      *      ['11']
5      None      *      ['12']
6      None      *      ['12']
7      None      *      ['13']
8      None      *      ['13']
9      None      *      ['17']
10      None      +      ['14']
11      None      +      ['14']
12      None      +      ['15']
13      None      +      ['15']
14      None      +      ['16']
15      None      +      ['16']
16      None      +      ['17']
17      None      +      ['y10']
F00      None      Read      ['1']
int0      None      Read      ['1', '4', '7']
F01      None      Read      ['2']
X00      None      Read      ['2']
F02      None      Read      ['3']
X01      None      Read      ['3']
F10      None      Read      ['4']
F11      None      Read      ['5']
X10      None      Read      ['5']
F12      None      Read      ['6']
X11      None      Read      ['6']
F20      None      Read      ['7']
F21      None      Read      ['8']
X20      None      Read      ['8']
F22      None      Read      ['9']
X21      None      Read      ['9']
Labels for mode ASAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Labels for mode ALAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 5, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4]

1. DUMPED cp:  ['1', '10', '14', '16', '17', 'y10']
   Inputs & Coords:
     1 F00 (0, 0)
     1 int0 (0, 0)
     10 1 None
     10 2 None
     14 10 None
     14 11 None
     16 14 None
     16 15 None
     17 16 None
     17 9 None
     y10 17 None
   Pre inputs: [(0, 0), (0, 0)]
   
   Inputs  [[(0, 0), 2]]
   All psbl destinations:  [(5, 0), (5, 0)]
   Closest pe coord:  (5, 0)
   All schedules generated:  [[10, 11, 12, 13, 14, 15], [10, 11, 12, 13, 14, 15]]
   Final closest pe coord and schedule  (5, 0) [10, 11, 12, 13, 14, 15]
Searching for other cps with nodes  ['2', '9', '11', '15']

2. DUMPED cp:  ['5', '12', '15']
   Inputs & Coords:
     5 F11 (0, 3)
     5 X10 (0, 4)
     12 5 None
     12 6 None
     15 12 None
     15 13 None
   Pre inputs: [(0, 3), (0, 4)]
   
   Inputs  [[(0, 3), 1], [(0, 4), 1]]
   All psbl destinations:  [(0, 6), (0, 6)]
   Closest pe coord:  (0, 6)
   All schedules generated:  [[5, 6, 7], [5, 6, 7]]
   Final closest pe coord and schedule  (0, 6) [5, 6, 7]
Searching for other cps with nodes  ['2', '6', '9', '11', '13']

3. DUMPED cp:  ['3', '11']
   Inputs & Coords:
     3 F02 (0, 2)
     3 X01 (0, 2)
     11 3 None
     11 4 None
   Pre inputs: [(0, 2), (0, 2)]
   
   Inputs  [[(0, 2), 2]]
   All psbl destinations:  [(2, 5)]
   Closest pe coord:  (2, 5)
   All schedules generated:  [[10, 11]]
   Final closest pe coord and schedule  (2, 5) [10, 11]
Searching for other cps with nodes  ['2', '4', '6', '9', '13']

4. DUMPED cp:  ['7', '13']
   Inputs & Coords:
     7 F20 (1, 0)
     7 int0 (0, 0)
     13 7 None
     13 8 None
   Pre inputs: [(1, 0), (0, 0)]
   
   Inputs  [[(1, 0), 1], [(0, 0), 1]]
   All psbl destinations:  [(5, 1)]
   Closest pe coord:  (5, 1)
   All schedules generated:  [[11, 12]]
   Final closest pe coord and schedule  (5, 1) [11, 12]
Searching for other cps with nodes  ['2', '4', '6', '8', '9']

5. DUMPED cp:  ['2']
   Inputs & Coords:
     2 F01 (0, 1)
     2 X00 (0, 1)
   Pre inputs: [(0, 1), (0, 1)]
   
   Inputs  [[(0, 1), 2]]
   All psbl destinations:  [(3, 5)]
   Closest pe coord:  (3, 5)
   All schedules generated:  [[14]]
   Final closest pe coord and schedule  (3, 5) [14]
Searching for other cps with nodes  ['4', '6', '8', '9']

6. DUMPED cp:  ['4']
   Inputs & Coords:
     4 F10 (0, 3)
     4 int0 (0, 0)
   Pre inputs: [(0, 3), (0, 0)]
   
   Inputs  [[(0, 3), 1], [(0, 0), 1]]
   All psbl destinations:  [(1, 6)]
   Closest pe coord:  (1, 6)
   All schedules generated:  [[11]]
   Final closest pe coord and schedule  (1, 6) [11]
Searching for other cps with nodes  ['6', '8', '9']

7. DUMPED cp:  ['6']
   Inputs & Coords:
     6 F12 (0, 4)
     6 X11 (1, 0)
   Pre inputs: [(0, 4), (1, 0)]
   
   Inputs  [[(0, 4), 1], [(1, 0), 1]]
   All psbl destinations:  [(2, 6)]
   Closest pe coord:  (2, 6)
   All schedules generated:  [[11]]
   Final closest pe coord and schedule  (2, 6) [11]
Searching for other cps with nodes  ['8', '9']

8. DUMPED cp:  ['8']
   Inputs & Coords:
     8 F21 (1, 1)
     8 X20 (1, 1)
   Pre inputs: [(1, 1), (1, 1)]
   
   Inputs  [[(1, 1), 2]]
   All psbl destinations:  [(5, 2)]
   Closest pe coord:  (5, 2)
   All schedules generated:  [[10]]
   Final closest pe coord and schedule  (5, 2) [10]
Searching for other cps with nodes  ['9']

9. DUMPED cp:  ['9']
   Inputs & Coords:
     9 F22 (1, 2)
     9 X21 (1, 2)
   Pre inputs: [(1, 2), (1, 2)]
   
   Inputs  [[(1, 2), 2]]
   All psbl destinations:  [(4, 5), (4, 5)]
   Closest pe coord:  (4, 5)
   All schedules generated:  [[12], [12]]
   Final closest pe coord and schedule  (4, 5) [12]
Searching for other cps with nodes  []

Input allocation by PEs:
(0, 0)  --->  ['F00', 'int0']
(0, 1)  --->  ['F01', 'X00']
(0, 2)  --->  ['F02', 'X01']
(0, 3)  --->  ['F10', 'F11']
(0, 4)  --->  ['X10', 'F12']
(1, 0)  --->  ['X11', 'F20']
(1, 1)  --->  ['F21', 'X20']
(1, 2)  --->  ['F22', 'X21']

Final results before rescheduling (node.name, node.sched) by PEs: 
(5, 0)  --->  [('1', 10), ('10', 11), ('14', 12), ('16', 13), ('17', 14), ('y10', 15)]
(0, 6)  --->  [('5', 5), ('12', 6), ('15', 7)]
(2, 5)  --->  [('3', 10), ('11', 11)]
(5, 1)  --->  [('7', 11), ('13', 12)]
(3, 5)  --->  [('2', 14)]
(1, 6)  --->  [('4', 11)]
(2, 6)  --->  [('6', 11)]
(5, 2)  --->  [('8', 10)]
(4, 5)  --->  [('9', 12)]


RESCHEDULING
###### 8
     Pred 1 entered:  F21
     Check for pred "F21" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12', 'F21', 'X20']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (5, 2)]
     1.0 Inputs are send from pred at step  25
     1.3 Putting inputs to DPR-X directly at node at step  32
     Pred 2 entered:  X20
     Check for pred "X20" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12', 'F21', 'X20']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (5, 2)]
     1.0 Inputs are send from pred at step  31
     1.3 Putting inputs to DPR-X directly at node at step  38
     3.0 Arithmetic op is done at step  39
     4.2 Saving results to own MCLM at step  42
     (5, 2) ---> [[], [41], [39], [32, 38, 40], [31, 37]]
###### 7
     Pred 1 entered:  F20
     Check for pred "F20" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11', 'X11', 'F20']
     Walked coords  [(1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (5, 1)]
     1.0 Inputs are send from pred at step  25
     1.3 Putting inputs to DPR-X directly at node at step  32
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (5, 1)]
     1.0 Inputs are send from pred at step  42
     1.3 Putting inputs to DPR-X directly at node at step  50
     3.0 Arithmetic op is done at step  51
     4.0 ---Notification is changed for 13 1
     4.0 Saving results to DPR2 directly at step  52
     (5, 1) ---> [[], [], [51], [32, 50, 52], [30, 36, 31, 49]]
###### 6
     Pred 1 entered:  F12
     Check for pred "F12" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03', 'X10', 'F12']
     Walked coords  [(0, 4), (1, 4), (2, 4), (2, 5), (2, 6)]
     1.0 Inputs are send from pred at step  25
     1.3 Putting inputs to DPR-X directly at node at step  31
     Pred 2 entered:  X11
     Check for pred "X11" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11', 'X11', 'F20']
     Walked coords  [(1, 0), (2, 0), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6)]
     1.0 Inputs are send from pred at step  32
     1.3 Putting inputs to DPR-X directly at node at step  41
     3.0 Arithmetic op is done at step  42
     4.2 Saving results to own MCLM at step  45
     (2, 6) ---> [[], [44], [42], [31, 41, 43], [30, 40]]
###### 5
     Pred 1 entered:  F11
     Check for pred "F11" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02', 'F10', 'F11']
     Walked coords  [(0, 3), (0, 4), (0, 5), (0, 6)]
     1.0 Inputs are send from pred at step  26
     1.3 Putting inputs to DPR-X directly at node at step  31
     Pred 2 entered:  X10
     Check for pred "X10" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03', 'X10', 'F12']
     Walked coords  [(0, 4), (0, 5), (0, 6)]
     1.0 Inputs are send from pred at step  21
     1.3 Putting inputs to DPR-X directly at node at step  25
     3.0 Arithmetic op is done at step  32
     4.0 ---Notification is changed for 12 1
     4.0 Saving results to DPR2 directly at step  33
     (0, 6) ---> [[], [], [32], [31, 25, 33], [30, 24]]
###### 4
     Pred 1 entered:  F10
     Check for pred "F10" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02', 'F10', 'F11']
     Walked coords  [(0, 3), (1, 3), (1, 4), (1, 5), (1, 6)]
     1.0 Inputs are send from pred at step  31
     1.3 Putting inputs to DPR-X directly at node at step  37
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6)]
     1.0 Inputs are send from pred at step  50
     1.3 Putting inputs to DPR-X directly at node at step  59
     3.0 Arithmetic op is done at step  60
     4.2 Saving results to own MCLM at step  63
     (1, 6) ---> [[], [62], [60], [37, 59, 61], [36, 58]]
###### 3
     Pred 1 entered:  F02
     Check for pred "F02" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01', 'F02', 'X01']
     Walked coords  [(0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (2, 5)]
     1.0 Inputs are send from pred at step  26
     1.3 Putting inputs to DPR-X directly at node at step  33
     Pred 2 entered:  X01
     Check for pred "X01" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01', 'F02', 'X01']
     Walked coords  [(0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (2, 5)]
     1.0 Inputs are send from pred at step  31
     1.3 Putting inputs to DPR-X directly at node at step  38
     3.0 Arithmetic op is done at step  39
     4.0 ---Notification is changed for 11 1
     4.0 Saving results to DPR2 directly at step  40
     (2, 5) ---> [[], [], [39], [33, 38, 40], [35, 48, 38, 29, 39, 32, 37]]
###### 2
     Pred 1 entered:  F01
     Check for pred "F01" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02', 'F01', 'X00']
     Walked coords  [(0, 1), (1, 1), (2, 1), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)]
     1.0 Inputs are send from pred at step  44
     1.3 Putting inputs to DPR-X directly at node at step  53
     Pred 2 entered:  X00
     Check for pred "X00" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02', 'F01', 'X00']
     Walked coords  [(0, 1), (1, 1), (2, 1), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)]
     1.0 Inputs are send from pred at step  46
     1.3 Putting inputs to DPR-X directly at node at step  55
     3.0 Arithmetic op is done at step  56
     4.2 Saving results to own MCLM at step  59
     (3, 5) ---> [[], [58], [56], [53, 55, 57], [34, 49, 39, 52, 54]]
###### 1
     Pred 1 entered:  F00
     Check for pred "F00" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
     1.0 Inputs are send from pred at step  52
     1.3 Putting inputs to DPR-X directly at node at step  59
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
     1.0 Inputs are send from pred at step  54
     1.3 Putting inputs to DPR-X directly at node at step  61
     3.0 Arithmetic op is done at step  62
     4.0 ---Notification is changed for 10 1
     4.0 Saving results to DPR2 directly at step  63
     (5, 0) ---> [[], [], [62], [59, 61, 63], [30, 48, 58, 60]]
###### 13
     Pred 1 entered:  7
     Pred 2 entered:  8
     Check for pred "8" =====> in (5, 2) ['8']
     Walked coords  [(5, 2), (5, 1)]
     1.0 Inputs are send from pred at step  45
     1.2 Putting inputs to DPR1 directly at node at step  48
     3.0 Arithmetic op is done at step  53
     4.2 Saving results to own MCLM at step  56
     (5, 1) ---> [[], [55], [51, 53], [32, 50, 52, 48, 54], [30, 36, 31, 49, 47]]
###### 12
     Pred 1 entered:  5
     Pred 2 entered:  6
     Check for pred "6" =====> in (2, 6) ['6']
     Walked coords  [(2, 6), (1, 6), (0, 6)]
     1.0 Inputs are send from pred at step  48
     1.2 Putting inputs to DPR1 directly at node at step  52
     3.0 Arithmetic op is done at step  53
     4.0 ---Notification is changed for 15 1
     4.0 Saving results to DPR2 directly at step  54
     (0, 6) ---> [[], [], [32, 53], [31, 25, 33, 52, 54], [30, 24, 51]]
###### 11
     Pred 1 entered:  3
     Pred 2 entered:  4
     Check for pred "4" =====> in (1, 6) ['4']
     Walked coords  [(1, 6), (2, 6), (2, 5)]
     1.0 Inputs are send from pred at step  66
     1.2 Putting inputs to DPR1 directly at node at step  70
     3.0 Arithmetic op is done at step  71
     4.2 Saving results to own MCLM at step  74
     (2, 5) ---> [[], [73], [39, 71], [33, 38, 40, 70, 72], [35, 48, 38, 29, 39, 32, 37, 69]]
###### 10
     Pred 1 entered:  1
     Pred 2 entered:  2
     Check for pred "2" =====> in (3, 5) ['2']
     Walked coords  [(3, 5), (4, 5), (5, 5), (5, 4), (5, 3), (5, 2), (5, 1), (5, 0)]
     1.0 Inputs are send from pred at step  62
     1.2 Putting inputs to DPR1 directly at node at step  71
     3.0 Arithmetic op is done at step  72
     4.0 ---Notification is changed for 14 1
     4.0 Saving results to DPR2 directly at step  73
     (5, 0) ---> [[], [], [62, 72], [59, 61, 63, 71, 73], [30, 48, 58, 60, 70]]
###### 15
     Pred 1 entered:  12
     Pred 2 entered:  13
     Check for pred "13" =====> in (5, 1) ['13']
     Walked coords  [(5, 1), (5, 2), (5, 3), (5, 4), (5, 5), (5, 6), (4, 6), (3, 6), (2, 6), (1, 6), (0, 6)]
     1.0 Inputs are send from pred at step  61
     1.2 Putting inputs to DPR1 directly at node at step  73
     3.0 Arithmetic op is done at step  74
     4.2 Saving results to own MCLM at step  77
     (0, 6) ---> [[], [76], [32, 53, 74], [31, 25, 33, 52, 54, 73, 75], [30, 24, 51, 72]]
###### 14
     Pred 1 entered:  10
     Pred 2 entered:  11
     Check for pred "11" =====> in (2, 5) ['11']
     Walked coords  [(2, 5), (3, 5), (4, 5), (5, 5), (5, 4), (5, 3), (5, 2), (5, 1), (5, 0)]
     1.0 Inputs are send from pred at step  77
     1.2 Putting inputs to DPR1 directly at node at step  87
     3.0 Arithmetic op is done at step  88
     4.0 ---Notification is changed for 16 1
     4.0 Saving results to DPR2 directly at step  89
     (5, 0) ---> [[], [], [62, 72, 88], [59, 61, 63, 71, 73, 87, 89], [30, 48, 58, 60, 70, 86]]
###### 9
     Pred 1 entered:  F22
     Check for pred "F22" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13', 'F22', 'X21']
     Walked coords  [(1, 2), (2, 2), (3, 2), (4, 2), (4, 3), (4, 4), (4, 5)]
     1.0 Inputs are send from pred at step  14
     1.3 Putting inputs to DPR-X directly at node at step  22
     Pred 2 entered:  X21
     Check for pred "X21" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13', 'F22', 'X21']
     Walked coords  [(1, 2), (2, 2), (3, 2), (4, 2), (4, 3), (4, 4), (4, 5)]
     1.0 Inputs are send from pred at step  25
     1.3 Putting inputs to DPR-X directly at node at step  33
     3.0 Arithmetic op is done at step  34
     4.2 Saving results to own MCLM at step  37
     (4, 5) ---> [[], [36], [34], [22, 33, 35], [33, 64, 80, 21, 32]]
###### 16
     Pred 1 entered:  14
     Pred 2 entered:  15
     Check for pred "15" =====> in (0, 6) ['15']
     Walked coords  [(0, 6), (1, 6), (2, 6), (3, 6), (4, 6), (5, 6), (5, 5), (5, 4), (5, 3), (5, 2), (5, 1), (5, 0)]
     1.0 Inputs are send from pred at step  80
     1.2 Putting inputs to DPR1 directly at node at step  93
     3.0 Arithmetic op is done at step  94
     4.0 ---Notification is changed for 17 1
     4.0 Saving results to DPR2 directly at step  95
     (5, 0) ---> [[], [], [62, 72, 88, 94], [59, 61, 63, 71, 73, 87, 89, 93, 95], [30, 48, 58, 60, 70, 86, 92]]
###### 17
     Pred 1 entered:  16
     Pred 2 entered:  9
     Check for pred "9" =====> in (4, 5) ['9']
     Walked coords  [(4, 5), (5, 5), (5, 4), (5, 3), (5, 2), (5, 1), (5, 0)]
     1.0 Inputs are send from pred at step  40
     1.2 Putting inputs to DPR1 directly at node at step  48
     3.0 Arithmetic op is done at step  96
     4.2 Saving results to own MCLM at step  99
     (5, 0) ---> [[], [98], [62, 72, 88, 94, 96], [59, 61, 63, 71, 73, 87, 89, 93, 95, 48, 97], [30, 48, 58, 60, 70, 86, 92, 47]]
###### y10
     Pred 1 entered:  17
     1.4 This is actually last node at step  99

Final results after rescheduling (node.name, node.sched): by PEs
(5, 0)  --->  [('1', 63), ('10', 73), ('14', 89), ('16', 95), ('17', 99), ('y10', 99)]
(0, 6)  --->  [('5', 33), ('12', 54), ('15', 77)]
(2, 5)  --->  [('3', 40), ('11', 74)]
(5, 1)  --->  [('7', 52), ('13', 56)]
(3, 5)  --->  [('2', 59)]
(1, 6)  --->  [('4', 63)]
(2, 6)  --->  [('6', 45)]
(5, 2)  --->  [('8', 42)]
(4, 5)  --->  [('9', 37)]

PE map 
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Node scheds and CCM commands:
1  --->  [(1, 0), ['CCM1', 1, 0, 'PE1'], [(0, 4), ['CCM1', 1, 1, 'PE1']], [(0, 0), ['CCM1', 1, 1, 'PE1']], [(0, 3), ['CCM1', 1, 1, 'PE1']], [(0, 2), ['CCM1', 1, 1, 'PE1']], [(0, 1), ['CCM1', 1, 1, 'PE1']], [(1, 1), ['CCM1', 1, 0, 'PE1']], [(1, 2), ['CCM1', 1, 1, 'PE1']]]
2  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'DPR1']], [(0, 2), ['CCM1', 2, 0, 'PE1']], [(0, 1), ['CCM3', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']]]
3  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(1, 0), ['CCM1', 3, 1, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 3, 0, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 3, 1, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 3, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']]]
6  --->  [(2, 0), ['CCM6', 'DPR1'], [(0, 3), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']]]
4  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM1', 4, 0, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']]]
5  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(0, 4), ['CCM3', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 5, 1, 'PE1']], [(0, 1), ['CCM1', 5, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 5, 3, 'PE1']], [(0, 2), ['CCM1', 5, 0, 'PE1']]]
8  --->  [(2, 0), ['CCM6', 'DPR2'], [(0, 3), ['CCM6', 'DPR2']], [(0, 4), ['CCM5', 'DPR3']], [(0, 2), ['CCM6', 'DPR2']], [(1, 1), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM1', 8, 3, 'PE1']], [(0, 1), ['CCM3', 'PERouter']]]
9  --->  [(2, 0), ['CCM4', '*'], [(0, 3), ['CCM4', '*']], [(0, 4), ['CCM2', 'MCLM1']], [(0, 2), ['CCM4', '*']], [(1, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 9, 0, 'PE1']], [(1, 2), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(0, 1), ['CCM6', 'NodeRouter']]]
10  --->  [(2, 0), ['CCM5', 'DPR3'], [(0, 3), ['CCM5', 'DPR2']], [(0, 2), ['CCM5', 'DPR2']], [(1, 1), ['CCM4', '*']], [(0, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'DPR1']], [(0, 0), ['CCM1', 10, 1, 'PE1']], [(1, 2), ['CCM5', 'DPR3']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 10, 3, 'PE1']], [(0, 2), ['CCM1', 10, 4, 'PE1']], [(1, 2), ['CCM1', 10, 2, 'PE1']]]
11  --->  [(2, 0), ['CCM2', 'MCLM1'], [(1, 1), ['CCM5', 'DPR3']], [(0, 1), ['CCM4', '*']], [(1, 0), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'DPR2']], [(0, 4), ['CCM1', 11, 2, 'PE1']], [(1, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM1', 11, 3, 'PE1']], [(3, 0), ['CCM6', 'DPR1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']]]
7  --->  [(0, 4), ['CCM4', '*'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 7, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 7, 1, 'PE1']], [(3, 2), ['CCM6', 'DPR1']]]
12  --->  [(1, 1), ['CCM2', 'MCLM1'], [(0, 1), ['CCM5', 'DPR2']], [(1, 0), ['CCM6', 'DPR2']], [(0, 0), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 4), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 12, 0, 'PE1']], [(1, 2), ['CCM1', 12, 1, 'PE1']]]
13  --->  [(1, 0), ['CCM4', '*'], [(0, 0), ['CCM5', 'DPR2']], [(2, 0), ['CCM1', 13, 0, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 13, 4, 'PE1']], [(0, 3), ['CCM1', 13, 4, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']]]
14  --->  [(1, 0), ['CCM5', 'DPR3'], [(2, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 14, 2, 'PE1']], [(1, 2), ['CCM1', 14, 0, 'PE1']], [(1, 0), ['CCM1', 14, 1, 'PE1']], [(2, 4), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 14, 6, 'PE1']], [(0, 0), ['CCM1', 14, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']]]
15  --->  [(1, 0), ['CCM2', 'MCLM1'], [(2, 0), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 15, 3, 'PE1']], [(0, 3), ['CCM1', 15, 3, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']]]
22  --->  [(0, 3), ['CCM6', 'DPR1'], [(0, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'DPR2']], [(3, 0), ['CCM5', 'DPR2']], [(2, 4), ['CCM2', 'MCLM1']], [(1, 4), ['CCM1', 22, 0, 'PE1']], [(3, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(4, 5), ['CCM6', 'DPR1']]]
23  --->  [(0, 3), ['CCM4', '+'], [(0, 0), ['CCM4', '+']], [(3, 1), ['CCM4', '*']], [(1, 4), ['CCM3', 'PERouter']], [(3, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(4, 4), ['CCM6', 'DPR1']], [(3, 4), ['CCM6', 'DPR1']], [(4, 2), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 1), ['CCM6', 'DPR2']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 23, 3, 'PE1']], [(1, 0), ['CCM1', 23, 3, 'PE1']], [(0, 4), ['CCM1', 23, 3, 'PE1']], [(1, 2), ['CCM1', 23, 6, 'PE1']]]
24  --->  [(0, 3), ['CCM5', 'DPR3'], [(0, 0), ['CCM5', 'DPR2']], [(0, 1), ['CCM1', 24, 2, 'PE1']], [(3, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 24, 1, 'PE1']], [(2, 3), ['CCM6', 'DPR1']], [(2, 4), ['CCM1', 24, 0, 'PE1']], [(1, 4), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM5', 'DPR3']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM1', 24, 3, 'PE1']], [(0, 2), ['CCM1', 24, 7, 'PE1']], [(1, 2), ['CCM3', 'PERouter']]]
25  --->  [(0, 3), ['CCM2', 'MCLM1'], [(0, 1), ['CCM3', 'PERouter']], [(3, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 4), ['CCM3', 'PERouter']], [(4, 4), ['CCM6', 'DPR2']], [(3, 4), ['CCM6', 'DPR2']], [(4, 2), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'DPR2']], [(1, 5), ['CCM6', 'DPR1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 6), ['CCM6', 'DPR2']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']]]
17  --->  [(0, 2), ['CCM6', 'DPR1'], [(1, 0), ['CCM1', 17, 2, 'PE1']], [(3, 1), ['CCM6', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 4), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(3, 2), ['CCM4', '*']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 17, 6, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 17, 6, 'PE1']], [(0, 0), ['CCM3', 'PERouter']]]
18  --->  [(0, 2), ['CCM4', '+'], [(1, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR2']], [(1, 4), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(3, 2), ['CCM5', 'DPR3']], [(1, 1), ['CCM1', 18, 3, 'PE1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 18, 1, 'PE1']]]
19  --->  [(0, 2), ['CCM5', 'DPR2'], [(0, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(2, 4), ['CCM6', 'DPR2']], [(1, 3), ['CCM4', '*']], [(1, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 19, 3, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM1', 19, 7, 'PE1']]]
16  --->  [(1, 1), ['CCM6', 'NodeRouter'], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 16, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 16, 0, 'PE1']], [(3, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 16, 1, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']]]
20  --->  [(0, 1), ['CCM4', '+'], [(3, 0), ['CCM6', 'DPR2']], [(2, 4), ['CCM4', '*']], [(1, 3), ['CCM5', 'DPR2']], [(1, 4), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR1']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM3', 'PERouter']]]
21  --->  [(0, 1), ['CCM5', 'DPR3'], [(0, 0), ['CCM6', 'DPR1']], [(3, 0), ['CCM4', '*']], [(2, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM1', 21, 0, 'PE1']], [(1, 1), ['CCM1', 21, 6, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 21, 6, 'PE1']], [(0, 1), ['CCM1', 21, 1, 'PE1']], [(1, 2), ['CCM1', 21, 4, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']]]
27  --->  [(0, 3), ['CCM1', 27, 2, 'PE1'], [(0, 0), ['CCM3', 'PERouter']], [(3, 1), ['CCM1', 27, 0, 'PE1']], [(2, 1), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR1']], [(4, 4), ['CCM5', 'DPR3']], [(3, 4), ['CCM5', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(4, 2), ['CCM1', 27, 0, 'PE1']]]
28  --->  [(0, 3), ['CCM3', 'PERouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 1), ['CCM3', 'PERouter']], [(4, 0), ['CCM6', 'DPR2']], [(4, 4), ['CCM2', 'MCLM1']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM3', 'PERouter']], [(1, 5), ['CCM6', 'DPR2']]]
29  --->  [(0, 3), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM6', 'DPR1']], [(4, 0), ['CCM4', '*']], [(0, 5), ['CCM6', 'DPR1']], [(4, 2), ['CCM6', 'NodeRouter']], [(1, 5), ['CCM4', '*']], [(1, 1), ['CCM1', 29, 8, 'PE1']], [(0, 3), ['CCM1', 29, 7, 'PE1']], [(0, 2), ['CCM1', 29, 6, 'PE1']]]
32  --->  [(0, 2), ['CCM6', 'DPR1'], [(2, 2), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM6', 'DPR1']], [(1, 3), ['CCM5', 'DPR2']], [(4, 3), ['CCM5', 'DPR3']], [(4, 4), ['CCM6', 'NodeRouter']], [(5, 2), ['CCM6', 'DPR1']], [(5, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 6), ['CCM4', '*']]]
33  --->  [(0, 2), ['CCM4', '+'], [(2, 2), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 33, 1, 'PE1']], [(3, 0), ['CCM4', '+']], [(4, 3), ['CCM2', 'MCLM1']], [(0, 6), ['CCM5', 'DPR2']], [(2, 5), ['CCM6', 'DPR1']], [(4, 5), ['CCM6', 'DPR2']]]
34  --->  [(0, 2), ['CCM5', 'DPR3'], [(2, 2), ['CCM5', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM5', 'DPR3']], [(4, 1), ['CCM6', 'DPR1']], [(1, 5), ['CCM1', 34, 0, 'PE1']], [(4, 5), ['CCM4', '*']]]
35  --->  [(0, 2), ['CCM2', 'MCLM1'], [(2, 3), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 0), ['CCM2', 'MCLM1']], [(2, 2), ['CCM4', '+']], [(4, 1), ['CCM4', '*']], [(0, 0), ['CCM1', 35, 0, 'PE1']], [(4, 3), ['CCM1', 35, 0, 'PE1']], [(3, 4), ['CCM6', 'DPR1']], [(1, 5), ['CCM3', 'PERouter']], [(4, 5), ['CCM5', 'DPR3']]]
26  --->  [(0, 1), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 26, 1, 'PE1']], [(2, 4), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(4, 4), ['CCM4', '*']], [(3, 4), ['CCM4', '*']], [(0, 1), ['CCM1', 26, 0, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']]]
30  --->  [(0, 0), ['CCM4', '+'], [(1, 3), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM5', 'DPR2']], [(0, 5), ['CCM4', '*']], [(4, 4), ['CCM1', 30, 0, 'PE1']], [(1, 5), ['CCM5', 'DPR3']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 30, 6, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']]]
31  --->  [(0, 0), ['CCM5', 'DPR2'], [(0, 0), ['CCM1', 31, 0, 'PE1']], [(1, 3), ['CCM4', '+']], [(4, 3), ['CCM4', '*']], [(0, 5), ['CCM5', 'DPR2']], [(4, 4), ['CCM3', 'PERouter']], [(1, 5), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 6), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']]]
37  --->  [(0, 2), ['CCM1', 37, 2, 'PE1'], [(2, 3), ['CCM5', 'DPR3']], [(2, 2), ['CCM2', 'MCLM1']], [(3, 0), ['CCM1', 37, 0, 'PE1']], [(4, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 37, 1, 'PE1']], [(4, 3), ['CCM6', 'NodeRouter']], [(3, 4), ['CCM5', 'DPR2']], [(1, 6), ['CCM6', 'DPR1']]]
38  --->  [(0, 2), ['CCM3', 'PERouter'], [(2, 3), ['CCM2', 'MCLM1']], [(2, 1), ['CCM6', 'DPR1']], [(3, 0), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 5), ['CCM6', 'DPR1']], [(5, 2), ['CCM6', 'DPR2']], [(2, 5), ['CCM6', 'DPR2']], [(4, 5), ['CCM1', 38, 0, 'PE1']]]
39  --->  [(0, 2), ['CCM6', 'NodeRouter'], [(3, 0), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM1', 39, 0, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM4', '+']], [(4, 1), ['CCM1', 39, 0, 'PE1']], [(5, 2), ['CCM4', '*']], [(2, 5), ['CCM4', '*']], [(4, 5), ['CCM3', 'PERouter']]]
43  --->  [(0, 0), ['CCM6', 'DPR1'], [(4, 0), ['CCM4', '+']], [(0, 5), ['CCM1', 43, 0, 'PE1']], [(2, 6), ['CCM5', 'DPR3']], [(0, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM1', 43, 0, 'PE1']]]
44  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(4, 0), ['CCM5', 'DPR3']], [(0, 5), ['CCM3', 'PERouter']], [(2, 6), ['CCM2', 'MCLM1']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 44, 8, 'PE1']], [(5, 2), ['CCM3', 'PERouter']]]
45  --->  [(0, 0), ['CCM5', 'DPR2'], [(3, 3), ['CCM6', 'DPR1']], [(4, 0), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM6', 'NodeRouter']]]
46  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM1', 46, 0, 'PE1']]]
47  --->  [(0, 0), ['CCM5', 'DPR3'], [(2, 1), ['CCM4', '+']], [(1, 3), ['CCM4', '+']], [(3, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM1', 47, 0, 'PE1']], [(2, 6), ['CCM3', 'PERouter']]]
48  --->  [(0, 0), ['CCM2', 'MCLM1'], [(2, 1), ['CCM5', 'DPR2']], [(1, 3), ['CCM5', 'DPR3']], [(3, 3), ['CCM4', '*']], [(4, 0), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 48, 1, 'PE1']], [(5, 1), ['CCM6', 'DPR1']], [(2, 6), ['CCM6', 'NodeRouter']], [(5, 0), ['CCM6', 'DPR1']]]
36  --->  [(2, 3), ['CCM4', '*'], [(2, 2), ['CCM5', 'DPR3']], [(4, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM3', 'PERouter']], [(4, 3), ['CCM3', 'PERouter']], [(3, 4), ['CCM4', '+']], [(1, 5), ['CCM6', 'NodeRouter']], [(4, 5), ['CCM2', 'MCLM1']]]
40  --->  [(2, 1), ['CCM6', 'DPR2'], [(2, 3), ['CCM1', 40, 0, 'PE1']], [(2, 2), ['CCM3', 'PERouter']], [(0, 5), ['CCM5', 'DPR3']], [(4, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 40, 1, 'PE1']], [(2, 5), ['CCM5', 'DPR2']], [(4, 5), ['CCM6', 'NodeRouter']]]
41  --->  [(2, 1), ['CCM4', '*'], [(2, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM2', 'MCLM1']], [(4, 1), ['CCM6', 'NodeRouter']], [(5, 2), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 6), ['CCM6', 'DPR2']]]
42  --->  [(2, 1), ['CCM5', 'DPR2'], [(2, 3), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']], [(0, 0), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM4', '*']], [(0, 1), ['CCM1', 42, 0, 'PE1']]]
49  --->  [(1, 3), ['CCM2', 'MCLM1'], [(2, 1), ['CCM4', '+']], [(3, 3), ['CCM5', 'DPR2']], [(4, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']]]
50  --->  [(2, 1), ['CCM5', 'DPR2'], [(3, 3), ['CCM4', '+']], [(5, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 50, 0, 'PE1']]]
51  --->  [(1, 3), ['CCM1', 51, 0, 'PE1'], [(3, 3), ['CCM5', 'DPR2']], [(5, 1), ['CCM4', '*']], [(0, 0), ['CCM3', 'PERouter']]]
52  --->  [(1, 3), ['CCM3', 'PERouter'], [(3, 3), ['CCM6', 'DPR1']], [(5, 1), ['CCM5', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 52, 1, 'PE1']], [(0, 6), ['CCM6', 'DPR1']]]
53  --->  [(1, 3), ['CCM6', 'NodeRouter'], [(3, 3), ['CCM4', '+']], [(3, 5), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(5, 1), ['CCM4', '+']], [(0, 6), ['CCM4', '+']]]
58  --->  [(2, 1), ['CCM6', 'DPR1'], [(3, 4), ['CCM5', 'DPR3']], [(3, 5), ['CCM2', 'MCLM1']]]
59  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM2', 'MCLM1']], [(1, 6), ['CCM6', 'DPR2']], [(5, 0), ['CCM6', 'DPR1']], [(5, 1), ['CCM1', 59, 0, 'PE1']]]
60  --->  [(2, 1), ['CCM5', 'DPR2'], [(1, 6), ['CCM4', '*']], [(3, 5), ['CCM1', 60, 0, 'PE1']], [(5, 1), ['CCM3', 'PERouter']]]
61  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM1', 61, 0, 'PE1']], [(1, 6), ['CCM5', 'DPR3']], [(5, 0), ['CCM6', 'DPR2']], [(3, 5), ['CCM3', 'PERouter']], [(5, 1), ['CCM6', 'NodeRouter']]]
62  --->  [(2, 1), ['CCM5', 'DPR3'], [(3, 4), ['CCM3', 'PERouter']], [(1, 6), ['CCM2', 'MCLM1']], [(5, 0), ['CCM4', '*']], [(3, 5), ['CCM6', 'NodeRouter']]]
63  --->  [(2, 1), ['CCM2', 'MCLM1'], [(3, 4), ['CCM6', 'NodeRouter']], [(5, 0), ['CCM5', 'DPR2']]]
56  --->  [(3, 4), ['CCM6', 'DPR1'], [(3, 5), ['CCM4', '*']]]
57  --->  [(3, 4), ['CCM4', '+'], [(3, 5), ['CCM5', 'DPR3']]]
54  --->  [(3, 3), ['CCM5', 'DPR2'], [(0, 0), ['CCM6', 'NodeRouter']], [(5, 1), ['CCM5', 'DPR3']], [(0, 6), ['CCM5', 'DPR2']]]
66  --->  [(3, 3), ['CCM6', 'DPR1'], [(1, 6), ['CCM6', 'NodeRouter']]]
67  --->  [(3, 3), ['CCM4', '+']]
68  --->  [(3, 3), ['CCM5', 'DPR2']]
69  --->  [(3, 3), ['CCM4', '+']]
70  --->  [(3, 3), ['CCM5', 'DPR3'], [(2, 5), ['CCM6', 'DPR1']]]
71  --->  [(3, 3), ['CCM2', 'MCLM1'], [(2, 5), ['CCM4', '+']], [(5, 0), ['CCM6', 'DPR1']]]
55  --->  [(3, 5), ['CCM6', 'DPR2'], [(5, 1), ['CCM2', 'MCLM1']]]
64  --->  [(1, 6), ['CCM1', 64, 0, 'PE1']]
65  --->  [(1, 6), ['CCM3', 'PERouter']]
72  --->  [(2, 5), ['CCM5', 'DPR3'], [(5, 0), ['CCM4', '+']]]
73  --->  [(2, 5), ['CCM2', 'MCLM1'], [(5, 0), ['CCM5', 'DPR2']], [(0, 6), ['CCM6', 'DPR1']]]
74  --->  [(0, 6), ['CCM4', '+']]
75  --->  [(0, 6), ['CCM5', 'DPR3'], [(2, 5), ['CCM1', 75, 0, 'PE1']]]
76  --->  [(0, 6), ['CCM2', 'MCLM1'], [(2, 5), ['CCM3', 'PERouter']]]
77  --->  [(2, 5), ['CCM6', 'NodeRouter']]
87  --->  [(5, 0), ['CCM6', 'DPR1']]
88  --->  [(5, 0), ['CCM4', '+']]
89  --->  [(5, 0), ['CCM5', 'DPR2']]
78  --->  [(0, 6), ['CCM1', 78, 0, 'PE1']]
79  --->  [(0, 6), ['CCM3', 'PERouter']]
80  --->  [(0, 6), ['CCM6', 'NodeRouter']]
93  --->  [(5, 0), ['CCM6', 'DPR1']]
94  --->  [(5, 0), ['CCM4', '+']]
95  --->  [(5, 0), ['CCM5', 'DPR2']]
96  --->  [(5, 0), ['CCM4', '+']]
97  --->  [(5, 0), ['CCM5', 'DPR3']]
98  --->  [(5, 0), ['CCM2', 'MCLM1']]

Router scheds and CCM commands:
4  --->  [(0, 1), (0, 2), [(2, 2), (3, 2)]]
5  --->  [(0, 1), (0, 3), [(1, 2), (1, 1)]]
6  --->  [(1, 0), (1, 1)]
8  --->  [(1, 1), (1, 0), [(2, 0), (3, 0)], [(1, 2), (1, 3)]]
16  --->  [(2, 1), (2, 2), [(1, 4), (2, 4)], [(1, 2), (3, 2)], [(2, 2), (4, 2)]]
17  --->  [(2, 1), (2, 3), [(1, 1), (1, 0)], [(2, 0), (3, 0)], [(1, 2), (4, 2)], [(1, 2), (2, 2)], [(1, 0), (2, 0)], [(2, 2), (4, 3)]]
18  --->  [(2, 1), (1, 3), [(1, 1), (0, 0)], [(1, 4), (2, 4)], [(1, 3), (2, 3)], [(1, 2), (3, 2)], [(1, 0), (3, 0)], [(2, 2), (4, 4)]]
19  --->  [(2, 1), (0, 3), [(2, 1), (3, 1)], [(1, 1), (2, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(1, 2), (4, 2)], [(0, 1), (0, 2)], [(1, 0), (4, 0)], [(2, 2), (4, 5)]]
14  --->  [(0, 3), (0, 2), [(2, 1), (3, 1)], [(1, 2), (1, 4)]]
40  --->  [(0, 1), (0, 0), [(3, 1), (3, 2)], [(1, 0), (3, 1)], [(1, 0), (2, 0)]]
11  --->  [(1, 4), (2, 4), [(1, 1), (2, 2)]]
9  --->  [(1, 2), (1, 4)]
13  --->  [(1, 2), (1, 3), [(2, 2), (3, 2)]]
10  --->  [(1, 1), (2, 1)]
27  --->  [(1, 0), (2, 0), [(2, 3), (1, 3)], [(2, 1), (4, 3)], [(2, 1), (4, 1)], [(2, 0), (4, 0)], [(1, 4), (2, 5)], [(0, 4), (0, 5)], [(1, 2), (2, 2)], [(2, 2), (4, 2)]]
28  --->  [(1, 0), (2, 1), [(2, 1), (5, 1)], [(2, 0), (5, 0)], [(1, 4), (2, 6)], [(0, 4), (0, 6)], [(1, 2), (2, 3)], [(2, 2), (4, 3)]]
29  --->  [(1, 0), (2, 2), [(1, 0), (2, 0)], [(1, 1), (2, 1)], [(2, 1), (5, 2)], [(2, 0), (5, 1)], [(1, 2), (2, 4)], [(2, 2), (4, 4)]]
20  --->  [(1, 1), (2, 2), [(1, 4), (4, 4)], [(1, 4), (2, 4)], [(1, 3), (3, 4)], [(1, 3), (2, 3)], [(0, 1), (0, 3)], [(1, 0), (4, 1)]]
21  --->  [(1, 1), (2, 3), [(2, 1), (3, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(0, 1), (0, 4)], [(1, 3), (1, 4)]]
30  --->  [(1, 0), (2, 1), [(1, 1), (3, 1)], [(4, 3), (4, 4)], [(1, 2), (2, 5)], [(2, 2), (4, 5)]]
31  --->  [(1, 0), (2, 2), [(1, 1), (4, 1)], [(4, 3), (4, 5)]]
32  --->  [(1, 0), (2, 3), [(4, 3), (3, 5)], [(2, 1), (3, 1)], [(1, 3), (1, 4)], [(1, 2), (2, 2)]]
34  --->  [(1, 0), (2, 0), [(4, 3), (1, 5)], [(2, 1), (5, 1)], [(2, 0), (2, 2)], [(1, 3), (1, 6)], [(1, 2), (2, 4)]]
35  --->  [(1, 0), (2, 1), [(4, 3), (0, 5)], [(2, 1), (5, 2)], [(2, 0), (2, 3)], [(1, 2), (2, 5)]]
36  --->  [(1, 0), (2, 0), [(2, 0), (2, 4)]]
37  --->  [(1, 0), (2, 1), [(2, 5), (3, 5)], [(2, 0), (2, 5)]]
25  --->  [(2, 4), (2, 3), [(2, 1), (4, 1)], [(2, 0), (4, 0)], [(0, 2), (0, 4)], [(1, 3), (1, 5)]]
26  --->  [(2, 4), (2, 2), [(2, 1), (4, 2)], [(0, 2), (0, 5)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(1, 4), (2, 4)], [(2, 2), (3, 2)]]
43  --->  [(2, 2), (2, 1), [(3, 1), (1, 3)], [(1, 0), (3, 2)], [(4, 2), (3, 3)], [(1, 0), (2, 0)], [(5, 5), (5, 2)]]
41  --->  [(3, 1), (3, 3), [(1, 0), (3, 2)], [(1, 0), (3, 0)], [(5, 5), (5, 4)]]
42  --->  [(3, 1), (2, 3), [(1, 0), (3, 3)], [(1, 0), (3, 1)], [(4, 2), (4, 3)], [(5, 5), (5, 3)]]
54  --->  [(2, 3), (2, 2), [(1, 0), (1, 4)], [(1, 0), (3, 0)]]
55  --->  [(2, 3), (2, 1), [(1, 0), (1, 5)], [(1, 0), (4, 0)], [(1, 0), (2, 0)]]
24  --->  [(3, 1), (2, 1), [(2, 1), (4, 3)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(0, 2), (0, 3)], [(1, 3), (1, 4)]]
22  --->  [(2, 1), (4, 1), [(2, 0), (3, 0)], [(1, 4), (4, 4)], [(1, 3), (3, 4)], [(0, 1), (0, 5)], [(1, 3), (1, 5)], [(0, 5), (0, 6)]]
23  --->  [(2, 1), (4, 2), [(2, 0), (4, 0)]]
15  --->  [(1, 2), (2, 2), [(2, 2), (3, 2)]]
38  --->  [(1, 0), (2, 0), [(4, 2), (4, 1)], [(2, 5), (3, 4)], [(2, 0), (2, 6)]]
39  --->  [(1, 0), (3, 0), [(4, 2), (4, 0)], [(2, 5), (3, 3)]]
44  --->  [(1, 0), (3, 3), [(1, 0), (3, 0)], [(5, 5), (5, 1)]]
33  --->  [(4, 3), (2, 5), [(2, 1), (4, 1)], [(2, 0), (2, 1)], [(1, 3), (1, 5)], [(1, 2), (2, 3)]]
50  --->  [(4, 1), (4, 2), [(1, 1), (3, 5)], [(1, 1), (3, 3)]]
51  --->  [(4, 1), (4, 3), [(1, 0), (1, 1)], [(1, 1), (3, 4)]]
52  --->  [(4, 1), (4, 4), [(1, 0), (1, 2)], [(1, 1), (3, 5)]]
53  --->  [(4, 1), (3, 4), [(1, 0), (1, 3)], [(1, 0), (2, 0)]]
46  --->  [(1, 5), (2, 5), [(1, 0), (5, 0)], [(1, 1), (3, 1)]]
47  --->  [(1, 5), (3, 5), [(1, 0), (5, 1)], [(1, 1), (3, 2)], [(1, 1), (2, 1)]]
48  --->  [(1, 5), (3, 4), [(1, 1), (3, 3)], [(1, 1), (3, 1)]]
49  --->  [(1, 5), (3, 3), [(1, 1), (3, 4)], [(1, 1), (3, 2)], [(1, 6), (0, 6)]]
45  --->  [(1, 0), (4, 0), [(1, 1), (2, 1)], [(5, 5), (5, 0)]]
56  --->  [(1, 0), (1, 6), [(1, 0), (5, 0)], [(1, 0), (3, 0)]]
57  --->  [(1, 0), (4, 0)]
58  --->  [(1, 0), (5, 0)]
67  --->  [(2, 6), (2, 5), [(4, 5), (5, 1)], [(5, 2), (3, 6)]]
63  --->  [(4, 5), (5, 5), [(5, 2), (5, 4)]]
64  --->  [(4, 5), (5, 4), [(5, 2), (5, 5)]]
65  --->  [(4, 5), (5, 3), [(5, 2), (5, 6)]]
66  --->  [(4, 5), (5, 2), [(5, 2), (4, 6)]]
68  --->  [(4, 5), (5, 0), [(5, 2), (2, 6)]]
62  --->  [(5, 2), (5, 3)]
69  --->  [(5, 2), (1, 6)]
70  --->  [(5, 2), (0, 6)]
78  --->  [(3, 5), (4, 5)]
79  --->  [(3, 5), (5, 5)]
80  --->  [(3, 5), (5, 4)]
81  --->  [(3, 5), (5, 3), [(1, 6), (2, 6)]]
82  --->  [(3, 5), (5, 2), [(1, 6), (3, 6)]]
83  --->  [(3, 5), (5, 1), [(1, 6), (4, 6)]]
84  --->  [(3, 5), (5, 0), [(1, 6), (5, 6)]]
85  --->  [(1, 6), (5, 5)]
86  --->  [(1, 6), (5, 4)]
87  --->  [(1, 6), (5, 3)]
88  --->  [(1, 6), (5, 2)]
89  --->  [(1, 6), (5, 1)]
90  --->  [(1, 6), (5, 0)]

Rescheduler marker:
(0, 0)  --->  [[1, 3, 5, 7, 9, 10, 24, 26, 31, 33, 16, 14, 35, 37, 40, 48, 50, 52], [48], [12, 23, 30, 44, 46], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 24, 29, 31, 43, 45, 21, 47, 25, 26, 27, 28, 32, 33, 34, 35, 17, 18, 15, 16, 36, 37, 38, 39, 41, 42, 49, 50, 51, 52, 53, 54], [4, 6, 8, 10, 21, 28, 42, 20, 27, 29, 34, 36, 19, 17, 38, 40, 43, 51, 53, 55]]
(0, 1)  --->  [[1, 5, 24, 7, 16, 21, 26, 42, 44], [22], [11, 20], [10, 2, 12, 6, 7, 19, 21, 25, 26, 8, 9, 17, 18, 22, 23, 27, 28, 43, 44, 45, 46], [5, 9, 8, 18, 27, 41, 10, 19, 24, 20, 29, 45, 47]]
(0, 2)  --->  [[1, 2, 37, 5, 10, 12, 14, 24, 29], [35], [9, 18, 33], [8, 2, 10, 3, 4, 17, 19, 32, 34, 38, 39, 6, 7, 11, 12, 13, 14, 15, 16, 25, 26, 30, 31], [6, 7, 5, 16, 31, 40, 8, 13, 15, 17, 25, 21, 27, 32]]
(0, 3)  --->  [[1, 3, 27, 10, 13, 15, 17, 24, 29], [25], [9, 23], [6, 8, 10, 2, 3, 4, 5, 22, 24, 28, 29, 11, 12, 14, 15, 16, 17, 18, 19, 25, 26, 30, 31], [5, 7, 4, 6, 21, 15, 30, 13, 16, 18, 20, 26, 22, 27, 32]]
(0, 4)  --->  [[1, 4, 11, 8, 13, 15, 17, 23, 19], [9], [7], [2, 3, 6, 5, 8, 12, 13, 9, 10, 14, 15, 16, 17, 18, 19, 24, 25, 20, 21], [4, 5, 14, 11, 16, 18, 20, 27, 23, 26, 28, 22]]
(0, 5)  --->  [[43], [41], [30, 39], [29, 25, 31, 38, 40, 44, 45], [28, 24, 37, 46, 29, 23]]
(0, 6)  --->  [[78], [76], [32, 53, 74], [31, 25, 33, 52, 54, 73, 75, 79, 80], [30, 24, 51, 72, 81]]
(0, 7)  --->  [[], [], [], [], []]
(0, 8)  --->  [[], [], [], [], []]
(0, 9)  --->  [[], [], [], [], []]
(1, 0)  --->  [[1, 3, 17, 5, 14, 19, 21, 23, 30], [15], [13], [2, 3, 4, 5, 11, 12, 14, 18, 19, 6, 7, 15, 16, 20, 21, 22, 23, 24, 25, 31, 32], [4, 6, 7, 10, 11, 20, 19, 8, 17, 28, 30, 35, 37, 22, 24, 18, 39, 41, 26, 44, 33, 52, 54, 56]]
(1, 1)  --->  [[14, 1, 3, 11, 16, 18, 21, 23, 29], [12], [10], [8, 9, 11, 15, 16, 2, 3, 4, 5, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 30, 31], [7, 8, 9, 17, 4, 6, 18, 14, 19, 11, 20, 21, 24, 30, 26, 32, 53, 46, 48]]
(1, 2)  --->  [[14, 1, 10, 18, 21, 12, 23], [11], [9], [6, 8, 10, 15, 16, 2, 3, 11, 12, 19, 20, 22, 23, 13, 14, 24, 25], [6, 5, 7, 17, 9, 14, 4, 13, 16, 18, 21, 24, 54, 28, 33, 15, 26]]
(1, 3)  --->  [[51], [49], [19, 31, 47], [15, 18, 20, 30, 32, 46, 48, 52, 53], [20, 14, 17, 10, 15, 29, 45, 54, 19, 21, 22, 25, 33, 55]]
(1, 4)  --->  [[22], [20], [18], [12, 17, 19, 23, 24], [12, 17, 11, 16, 25, 19, 21, 23, 26, 27, 34, 56]]
(1, 5)  --->  [[34], [31], [29], [25, 28, 30, 35, 36], [36, 47, 24, 27, 37, 35, 57]]
(1, 6)  --->  [[64], [62], [60], [37, 59, 61, 65, 66], [36, 58, 50, 67, 71, 82]]
(1, 7)  --->  [[], [], [], [], []]
(1, 8)  --->  [[], [], [], [], []]
(1, 9)  --->  [[], [], [], [], []]
(2, 0)  --->  [[13], [11], [9], [6, 8, 10, 14, 15], [5, 7, 16, 9, 18, 29, 31, 36, 38, 23, 25, 19, 40, 42, 27, 45, 34, 55, 57]]
(2, 1)  --->  [[], [63], [41, 47, 49, 59, 61], [38, 40, 42, 46, 48, 44, 50, 58, 60, 27, 62], [17, 15, 20, 12, 30, 21, 32, 37, 39, 45, 43, 57, 26, 22, 25, 31, 27, 33, 35, 47, 49]]
(2, 2)  --->  [[39], [37], [33, 35], [14, 32, 34, 29, 36, 40, 41], [18, 13, 31, 22, 33, 28, 44, 42, 5, 14, 56, 17, 19, 36, 29, 34, 16, 27]]
(2, 3)  --->  [[40], [38], [36], [24, 35, 37, 41, 42], [19, 23, 34, 28, 27, 43, 44, 55, 20, 22, 37, 30, 35]]
(2, 4)  --->  [[24], [22], [20], [14, 19, 21, 25, 26], [13, 18, 27, 26, 20, 22, 28, 38, 31, 36]]
(2, 5)  --->  [[75], [73], [39, 71], [33, 38, 40, 70, 72, 76, 77], [35, 48, 38, 29, 39, 32, 37, 69, 78]]
(2, 6)  --->  [[46], [44], [42], [31, 41, 43, 47, 48], [30, 40, 49, 68, 70, 83]]
(2, 7)  --->  [[], [], [], [], []]
(2, 8)  --->  [[], [], [], [], []]
(2, 9)  --->  [[], [], [], [], []]
(3, 0)  --->  [[37], [35], [21, 33], [11, 20, 22, 32, 34, 38, 39], [10, 19, 31, 40, 24, 26, 20, 41, 43, 28, 46, 56, 58]]
(3, 1)  --->  [[27], [25], [23], [17, 22, 24, 28, 29], [16, 21, 30, 41, 25, 23, 26, 32, 42, 44, 28, 34, 48, 50]]
(3, 2)  --->  [[21], [19], [17], [7, 16, 18, 22, 23], [42, 6, 15, 24, 18, 20, 43, 45, 49, 51, 17, 28]]
(3, 3)  --->  [[], [71], [48, 50, 53, 67, 69], [45, 47, 49, 46, 51, 52, 54, 66, 68, 42, 70], [43, 21, 23, 44, 46, 45, 51, 65, 41, 50, 52]]
(3, 4)  --->  [[61], [59], [26, 36, 57], [23, 25, 27, 35, 37, 56, 58, 62, 63], [21, 23, 22, 24, 34, 55, 50, 64, 40, 51, 53]]
(3, 5)  --->  [[60], [58], [56], [53, 55, 57, 61, 62], [34, 49, 39, 52, 54, 63, 79]]
(3, 6)  --->  [[], [], [], [], [69, 84]]
(3, 7)  --->  [[], [], [], [], []]
(3, 8)  --->  [[], [], [], [], []]
(3, 9)  --->  [[], [], [], [], []]
(4, 0)  --->  [[47], [45], [29, 43], [26, 28, 30, 42, 44, 48, 49], [25, 27, 21, 41, 50, 29, 47, 57, 59]]
(4, 1)  --->  [[39], [37], [35], [34, 23, 36, 40, 41], [24, 27, 33, 22, 40, 42, 51, 29, 35]]
(4, 2)  --->  [[27], [25], [23], [20, 22, 24, 28, 29], [25, 28, 19, 21, 39, 30, 43, 52, 18, 29]]
(4, 3)  --->  [[35], [33], [31], [27, 30, 32, 36, 37], [26, 29, 38, 31, 44, 53, 19, 30]]
(4, 4)  --->  [[30], [28], [26], [23, 25, 27, 31, 32], [22, 24, 33, 32, 54, 20, 31]]
(4, 5)  --->  [[38], [36], [34], [22, 33, 35, 39, 40], [33, 64, 80, 21, 32, 41]]
(4, 6)  --->  [[], [], [], [], [68, 85]]
(4, 7)  --->  [[], [], [], [], []]
(4, 8)  --->  [[], [], [], [], []]
(4, 9)  --->  [[], [], [], [], []]
(5, 0)  --->  [[], [98], [62, 72, 88, 94, 96], [59, 61, 63, 71, 73, 87, 89, 93, 95, 48, 97], [30, 48, 58, 60, 70, 86, 92, 47]]
(5, 1)  --->  [[59], [55], [51, 53], [32, 50, 52, 48, 54, 60, 61], [30, 36, 31, 49, 47, 69, 62, 85, 91, 46]]
(5, 2)  --->  [[43], [41], [39], [32, 38, 40, 44, 45], [31, 37, 46, 68, 63, 84, 90, 45]]
(5, 3)  --->  [[], [], [], [], [67, 64, 83, 89, 44]]
(5, 4)  --->  [[], [], [], [], [66, 65, 82, 88, 43]]
(5, 5)  --->  [[], [], [], [], [65, 66, 81, 87, 42]]
(5, 6)  --->  [[], [], [], [], [67, 86]]
(5, 7)  --->  [[], [], [], [], []]
(5, 8)  --->  [[], [], [], [], []]
(5, 9)  --->  [[], [], [], [], []]
(6, 0)  --->  [[], [], [], [], []]
(6, 1)  --->  [[], [], [], [], []]
(6, 2)  --->  [[], [], [], [], []]
(6, 3)  --->  [[], [], [], [], []]
(6, 4)  --->  [[], [], [], [], []]
(6, 5)  --->  [[], [], [], [], []]
(6, 6)  --->  [[], [], [], [], []]
(6, 7)  --->  [[], [], [], [], []]
(6, 8)  --->  [[], [], [], [], []]
(6, 9)  --->  [[], [], [], [], []]
(7, 0)  --->  [[], [], [], [], []]
(7, 1)  --->  [[], [], [], [], []]
(7, 2)  --->  [[], [], [], [], []]
(7, 3)  --->  [[], [], [], [], []]
(7, 4)  --->  [[], [], [], [], []]
(7, 5)  --->  [[], [], [], [], []]
(7, 6)  --->  [[], [], [], [], []]
(7, 7)  --->  [[], [], [], [], []]
(7, 8)  --->  [[], [], [], [], []]
(7, 9)  --->  [[], [], [], [], []]
(8, 0)  --->  [[], [], [], [], []]
(8, 1)  --->  [[], [], [], [], []]
(8, 2)  --->  [[], [], [], [], []]
(8, 3)  --->  [[], [], [], [], []]
(8, 4)  --->  [[], [], [], [], []]
(8, 5)  --->  [[], [], [], [], []]
(8, 6)  --->  [[], [], [], [], []]
(8, 7)  --->  [[], [], [], [], []]
(8, 8)  --->  [[], [], [], [], []]
(8, 9)  --->  [[], [], [], [], []]
(9, 0)  --->  [[], [], [], [], []]
(9, 1)  --->  [[], [], [], [], []]
(9, 2)  --->  [[], [], [], [], []]
(9, 3)  --->  [[], [], [], [], []]
(9, 4)  --->  [[], [], [], [], []]
(9, 5)  --->  [[], [], [], [], []]
(9, 6)  --->  [[], [], [], [], []]
(9, 7)  --->  [[], [], [], [], []]
(9, 8)  --->  [[], [], [], [], []]
(9, 9)  --->  [[], [], [], [], []]

Scheduling duration in clocks:  99

CCM Size in bits:  3343

CCM Size in bytes:  418

------------------Synthesys of equation 5 has started!---------------

[('1', 'F00*X00'), ('2', 'F01*X01'), ('3', 'F02*X02'), ('4', 'F10*X10'), ('5', 'F11*X11'), ('6', 'F12*X12'), ('7', 'F20*X20'), ('8', 'F21*X21'), ('9', 'F22*X22'), ('10', '1+2'), ('11', '3+4'), ('12', '5+6'), ('13', '7+8'), ('14', '10+11'), ('15', '12+13'), ('16', '14+15'), ('17', '16+9')]

Graph nodes:
Name   Value   Op_Type   Conn
y11      None      Write      []
1      None      *      ['10']
2      None      *      ['10']
3      None      *      ['11']
4      None      *      ['11']
5      None      *      ['12']
6      None      *      ['12']
7      None      *      ['13']
8      None      *      ['13']
9      None      *      ['17']
10      None      +      ['14']
11      None      +      ['14']
12      None      +      ['15']
13      None      +      ['15']
14      None      +      ['16']
15      None      +      ['16']
16      None      +      ['17']
17      None      +      ['y11']
F00      None      Read      ['1']
X00      None      Read      ['1']
F01      None      Read      ['2']
X01      None      Read      ['2']
F02      None      Read      ['3']
X02      None      Read      ['3']
F10      None      Read      ['4']
X10      None      Read      ['4']
F11      None      Read      ['5']
X11      None      Read      ['5']
F12      None      Read      ['6']
X12      None      Read      ['6']
F20      None      Read      ['7']
X20      None      Read      ['7']
F21      None      Read      ['8']
X21      None      Read      ['8']
F22      None      Read      ['9']
X22      None      Read      ['9']
Labels for mode ASAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Labels for mode ALAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 5, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4]

1. DUMPED cp:  ['1', '10', '14', '16', '17', 'y11']
   Inputs & Coords:
     1 F00 (0, 0)
     1 X00 (0, 0)
     10 1 None
     10 2 None
     14 10 None
     14 11 None
     16 14 None
     16 15 None
     17 16 None
     17 9 None
     y11 17 None
   Pre inputs: [(0, 0), (0, 0)]
   
   Inputs  [[(0, 0), 2]]
   All psbl destinations:  [(5, 3)]
   Closest pe coord:  (5, 3)
   All schedules generated:  [[16, 17, 18, 19, 20, 21]]
   Final closest pe coord and schedule  (5, 3) [16, 17, 18, 19, 20, 21]
Searching for other cps with nodes  ['2', '9', '11', '15']

2. DUMPED cp:  ['5', '12', '15']
   Inputs & Coords:
     5 F11 (0, 4)
     5 X11 (0, 4)
     12 5 None
     12 6 None
     15 12 None
     15 13 None
   Pre inputs: [(0, 4), (0, 4)]
   
   Inputs  [[(0, 4), 2]]
   All psbl destinations:  [(0, 7), (0, 7)]
   Closest pe coord:  (0, 7)
   All schedules generated:  [[6, 7, 8], [6, 7, 8]]
   Final closest pe coord and schedule  (0, 7) [6, 7, 8]
Searching for other cps with nodes  ['2', '6', '9', '11', '13']

3. DUMPED cp:  ['3', '11']
   Inputs & Coords:
     3 F02 (0, 2)
     3 X02 (0, 2)
     11 3 None
     11 4 None
   Pre inputs: [(0, 2), (0, 2)]
   
   Inputs  [[(0, 2), 2]]
   All psbl destinations:  [(3, 6)]
   Closest pe coord:  (3, 6)
   All schedules generated:  [[14, 15]]
   Final closest pe coord and schedule  (3, 6) [14, 15]
Searching for other cps with nodes  ['2', '4', '6', '9', '13']

4. DUMPED cp:  ['7', '13']
   Inputs & Coords:
     7 F20 (1, 1)
     7 X20 (1, 1)
     13 7 None
     13 8 None
   Pre inputs: [(1, 1), (1, 1)]
   
   Inputs  [[(1, 1), 2]]
   All psbl destinations:  [(5, 4)]
   Closest pe coord:  (5, 4)
   All schedules generated:  [[14, 15]]
   Final closest pe coord and schedule  (5, 4) [14, 15]
Searching for other cps with nodes  ['2', '4', '6', '8', '9']

5. DUMPED cp:  ['2']
   Inputs & Coords:
     2 F01 (0, 1)
     2 X01 (0, 1)
   Pre inputs: [(0, 1), (0, 1)]
   
   Inputs  [[(0, 1), 2]]
   All psbl destinations:  [(5, 5), (4, 6)]
   Closest pe coord:  (5, 5)
   All schedules generated:  [[18], [18]]
   Final closest pe coord and schedule  (5, 5) [18]
Searching for other cps with nodes  ['4', '6', '8', '9']

6. DUMPED cp:  ['4']
   Inputs & Coords:
     4 F10 (0, 3)
     4 X10 (0, 3)
   Pre inputs: [(0, 3), (0, 3)]
   
   Inputs  [[(0, 3), 2]]
   All psbl destinations:  [(1, 7)]
   Closest pe coord:  (1, 7)
   All schedules generated:  [[10]]
   Final closest pe coord and schedule  (1, 7) [10]
Searching for other cps with nodes  ['6', '8', '9']

7. DUMPED cp:  ['6']
   Inputs & Coords:
     6 F12 (1, 0)
     6 X12 (1, 0)
   Pre inputs: [(1, 0), (1, 0)]
   
   Inputs  [[(1, 0), 2]]
   All psbl destinations:  [(6, 0), (6, 0)]
   Closest pe coord:  (6, 0)
   All schedules generated:  [[10], [10]]
   Final closest pe coord and schedule  (6, 0) [10]
Searching for other cps with nodes  ['8', '9']

8. DUMPED cp:  ['8']
   Inputs & Coords:
     8 F21 (1, 2)
     8 X21 (1, 2)
   Pre inputs: [(1, 2), (1, 2)]
   
   Inputs  [[(1, 2), 2]]
   All psbl destinations:  [(4, 6)]
   Closest pe coord:  (4, 6)
   All schedules generated:  [[14]]
   Final closest pe coord and schedule  (4, 6) [14]
Searching for other cps with nodes  ['9']

9. DUMPED cp:  ['9']
   Inputs & Coords:
     9 F22 (1, 3)
     9 X22 (1, 3)
   Pre inputs: [(1, 3), (1, 3)]
   
   Inputs  [[(1, 3), 2]]
   All psbl destinations:  [(2, 7)]
   Closest pe coord:  (2, 7)
   All schedules generated:  [[10]]
   Final closest pe coord and schedule  (2, 7) [10]
Searching for other cps with nodes  []

Input allocation by PEs:
(0, 0)  --->  ['F00', 'X00']
(0, 1)  --->  ['F01', 'X01']
(0, 2)  --->  ['F02', 'X02']
(0, 3)  --->  ['F10', 'X10']
(0, 4)  --->  ['F11', 'X11']
(1, 0)  --->  ['F12', 'X12']
(1, 1)  --->  ['F20', 'X20']
(1, 2)  --->  ['F21', 'X21']
(1, 3)  --->  ['F22', 'X22']

Final results before rescheduling (node.name, node.sched) by PEs: 
(5, 3)  --->  [('1', 16), ('10', 17), ('14', 18), ('16', 19), ('17', 20), ('y11', 21)]
(0, 7)  --->  [('5', 6), ('12', 7), ('15', 8)]
(3, 6)  --->  [('3', 14), ('11', 15)]
(5, 4)  --->  [('7', 14), ('13', 15)]
(5, 5)  --->  [('2', 18)]
(1, 7)  --->  [('4', 10)]
(6, 0)  --->  [('6', 10)]
(4, 6)  --->  [('8', 14)]
(2, 7)  --->  [('9', 10)]


RESCHEDULING
###### 8
     Pred 1 entered:  F21
     Check for pred "F21" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13', 'F22', 'X21', 'F21', 'X21']
     Walked coords  [(1, 2), (2, 2), (3, 2), (4, 2), (4, 3), (4, 4), (4, 5), (4, 6)]
     1.0 Inputs are send from pred at step  28
     1.3 Putting inputs to DPR-X directly at node at step  37
     Pred 2 entered:  X21
     Check for pred "X21" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13', 'F22', 'X21', 'F21', 'X21']
     Walked coords  [(1, 2), (2, 2), (3, 2), (4, 2), (4, 3), (4, 4), (4, 5), (4, 6)]
     1.0 Inputs are send from pred at step  30
     1.3 Putting inputs to DPR-X directly at node at step  39
     3.0 Arithmetic op is done at step  40
     4.2 Saving results to own MCLM at step  43
     (4, 6) ---> [[], [42], [40], [37, 39, 41], [68, 85, 36, 38]]
###### 7
     Pred 1 entered:  F20
     Check for pred "F20" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12', 'F21', 'X20', 'F20', 'X20']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (5, 2), (5, 3), (5, 4)]
     1.0 Inputs are send from pred at step  34
     1.3 Putting inputs to DPR-X directly at node at step  43
     Pred 2 entered:  X20
     Check for pred "X20" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12', 'F21', 'X20', 'F20', 'X20']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (5, 2), (5, 3), (5, 4)]
     1.0 Inputs are send from pred at step  46
     1.3 Putting inputs to DPR-X directly at node at step  55
     3.0 Arithmetic op is done at step  56
     4.0 ---Notification is changed for 13 1
     4.0 Saving results to DPR2 directly at step  57
     (5, 4) ---> [[], [], [56], [43, 55, 57], [66, 65, 82, 88, 43, 42, 54]]
###### 6
     Pred 1 entered:  F12
     Check for pred "F12" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11', 'X11', 'F20', 'F12', 'X12']
     Walked coords  [(1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0)]
     1.0 Inputs are send from pred at step  30
     1.3 Putting inputs to DPR-X directly at node at step  37
     Pred 2 entered:  X12
     Check for pred "X12" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11', 'X11', 'F20', 'F12', 'X12']
     Walked coords  [(1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0)]
     1.0 Inputs are send from pred at step  35
     1.3 Putting inputs to DPR-X directly at node at step  42
     3.0 Arithmetic op is done at step  43
     4.2 Saving results to own MCLM at step  46
     (6, 0) ---> [[], [45], [43], [37, 42, 44], [36, 41]]
###### 5
     Pred 1 entered:  F11
     Check for pred "F11" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03', 'X10', 'F12', 'F11', 'X11']
     Walked coords  [(0, 4), (0, 5), (0, 6), (0, 7)]
     1.0 Inputs are send from pred at step  23
     1.3 Putting inputs to DPR-X directly at node at step  28
     Pred 2 entered:  X11
     Check for pred "X11" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03', 'X10', 'F12', 'F11', 'X11']
     Walked coords  [(0, 4), (0, 5), (0, 6), (0, 7)]
     1.0 Inputs are send from pred at step  28
     1.3 Putting inputs to DPR-X directly at node at step  33
     3.0 Arithmetic op is done at step  34
     4.0 ---Notification is changed for 12 1
     4.0 Saving results to DPR2 directly at step  35
     (0, 7) ---> [[], [], [34], [28, 33, 35], [27, 32]]
###### 4
     Pred 1 entered:  F10
     Check for pred "F10" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02', 'F10', 'F11', 'F10', 'X10']
     Walked coords  [(0, 3), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7)]
     1.0 Inputs are send from pred at step  34
     1.3 Putting inputs to DPR-X directly at node at step  41
     Pred 2 entered:  X10
     Check for pred "X10" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02', 'F10', 'F11', 'F10', 'X10']
     Walked coords  [(0, 3), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7)]
     1.0 Inputs are send from pred at step  36
     1.3 Putting inputs to DPR-X directly at node at step  43
     3.0 Arithmetic op is done at step  44
     4.2 Saving results to own MCLM at step  47
     (1, 7) ---> [[], [46], [44], [41, 43, 45], [40, 42]]
###### 3
     Pred 1 entered:  F02
     Check for pred "F02" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01', 'F02', 'X01', 'F02', 'X02']
     Walked coords  [(0, 2), (1, 2), (2, 2), (3, 2), (3, 3), (3, 4), (3, 5), (3, 6)]
     1.0 Inputs are send from pred at step  21
     1.3 Putting inputs to DPR-X directly at node at step  30
     Pred 2 entered:  X02
     Check for pred "X02" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01', 'F02', 'X01', 'F02', 'X02']
     Walked coords  [(0, 2), (1, 2), (2, 2), (3, 2), (3, 3), (3, 4), (3, 5), (3, 6)]
     1.0 Inputs are send from pred at step  23
     1.3 Putting inputs to DPR-X directly at node at step  32
     3.0 Arithmetic op is done at step  33
     4.0 ---Notification is changed for 11 1
     4.0 Saving results to DPR2 directly at step  34
     (3, 6) ---> [[], [], [33], [30, 32, 34], [69, 84, 29, 31]]
###### 2
     Pred 1 entered:  F01
     Check for pred "F01" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02', 'F01', 'X00', 'F01', 'X01']
     Walked coords  [(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]
     1.0 Inputs are send from pred at step  31
     1.3 Putting inputs to DPR-X directly at node at step  42
     Pred 2 entered:  X01
     Check for pred "X01" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02', 'F01', 'X00', 'F01', 'X01']
     Walked coords  [(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]
     1.0 Inputs are send from pred at step  48
     1.3 Putting inputs to DPR-X directly at node at step  59
     3.0 Arithmetic op is done at step  60
     4.2 Saving results to own MCLM at step  63
     (5, 5) ---> [[], [62], [60], [42, 59, 61], [65, 66, 81, 87, 42, 41, 58]]
###### 1
     Pred 1 entered:  F00
     Check for pred "F00" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0', 'F00', 'X00']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (5, 1), (5, 2), (5, 3)]
     1.0 Inputs are send from pred at step  56
     1.3 Putting inputs to DPR-X directly at node at step  66
     Pred 2 entered:  X00
     Check for pred "X00" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0', 'F00', 'X00']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (5, 1), (5, 2), (5, 3)]
     1.0 Inputs are send from pred at step  59
     1.3 Putting inputs to DPR-X directly at node at step  69
     3.0 Arithmetic op is done at step  70
     4.0 ---Notification is changed for 10 1
     4.0 Saving results to DPR2 directly at step  71
     (5, 3) ---> [[], [], [70], [66, 69, 71], [67, 64, 83, 89, 44, 41, 53, 39, 56, 65, 68]]
###### 13
     Pred 1 entered:  7
     Pred 2 entered:  8
     Check for pred "8" =====> in (4, 6) ['8']
     Walked coords  [(4, 6), (5, 6), (5, 5), (5, 4)]
     1.0 Inputs are send from pred at step  46
     1.2 Putting inputs to DPR1 directly at node at step  51
     3.0 Arithmetic op is done at step  58
     4.2 Saving results to own MCLM at step  61
     (5, 4) ---> [[], [60], [56, 58], [43, 55, 57, 51, 59], [66, 65, 82, 88, 43, 42, 54, 40, 57, 50]]
###### 12
     Pred 1 entered:  5
     Pred 2 entered:  6
     Check for pred "6" =====> in (6, 0) ['6']
     Walked coords  [(6, 0), (6, 1), (6, 2), (6, 3), (6, 4), (6, 5), (6, 6), (6, 7), (5, 7), (4, 7), (3, 7), (2, 7), (1, 7), (0, 7)]
     1.0 Inputs are send from pred at step  49
     1.2 Putting inputs to DPR1 directly at node at step  64
     3.0 Arithmetic op is done at step  65
     4.0 ---Notification is changed for 15 1
     4.0 Saving results to DPR2 directly at step  66
     (0, 7) ---> [[], [], [34, 65], [28, 33, 35, 64, 66], [27, 32, 63]]
###### 11
     Pred 1 entered:  3
     Pred 2 entered:  4
     Check for pred "4" =====> in (1, 7) ['4']
     Walked coords  [(1, 7), (2, 7), (3, 7), (3, 6)]
     1.0 Inputs are send from pred at step  50
     1.2 Putting inputs to DPR1 directly at node at step  55
     3.0 Arithmetic op is done at step  56
     4.2 Saving results to own MCLM at step  59
     (3, 6) ---> [[], [58], [33, 56], [30, 32, 34, 55, 57], [69, 84, 29, 31, 54]]
###### 10
     Pred 1 entered:  1
     Pred 2 entered:  2
     Check for pred "2" =====> in (5, 5) ['2']
     Walked coords  [(5, 5), (5, 4), (5, 3)]
     1.0 Inputs are send from pred at step  66
     1.2 Putting inputs to DPR1 directly at node at step  70
     3.0 Arithmetic op is done at step  72
     4.0 ---Notification is changed for 14 1
     4.0 Saving results to DPR2 directly at step  73
     (5, 3) ---> [[], [], [70, 72], [66, 69, 71, 70, 73], [67, 64, 83, 89, 44, 41, 53, 39, 56, 65, 68, 69]]
###### 15
     Pred 1 entered:  12
     Pred 2 entered:  13
     Check for pred "13" =====> in (5, 4) ['13']
     Walked coords  [(5, 4), (5, 5), (5, 6), (5, 7), (4, 7), (3, 7), (2, 7), (1, 7), (0, 7)]
     1.0 Inputs are send from pred at step  66
     1.2 Putting inputs to DPR1 directly at node at step  76
     3.0 Arithmetic op is done at step  77
     4.2 Saving results to own MCLM at step  80
     (0, 7) ---> [[], [79], [34, 65, 77], [28, 33, 35, 64, 66, 76, 78], [27, 32, 63, 75]]
###### 14
     Pred 1 entered:  10
     Pred 2 entered:  11
     Check for pred "11" =====> in (3, 6) ['11']
     Walked coords  [(3, 6), (4, 6), (5, 6), (5, 5), (5, 4), (5, 3)]
     1.0 Inputs are send from pred at step  65
     1.2 Putting inputs to DPR1 directly at node at step  72
     3.0 Arithmetic op is done at step  74
     4.0 ---Notification is changed for 16 1
     4.0 Saving results to DPR2 directly at step  75
     (5, 3) ---> [[], [], [70, 72, 74], [66, 69, 71, 70, 73, 72, 75], [67, 64, 83, 89, 44, 41, 53, 39, 56, 65, 68, 69, 71]]
###### 9
     Pred 1 entered:  F22
     Check for pred "F22" =====> in (1, 3) ['15', 'F22', 'X22']
     Walked coords  [(1, 3), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7)]
     1.0 Inputs are send from pred at step  3
     1.3 Putting inputs to DPR-X directly at node at step  10
     Pred 2 entered:  X22
     Check for pred "X22" =====> in (1, 3) ['15', 'F22', 'X22']
     Walked coords  [(1, 3), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7)]
     1.0 Inputs are send from pred at step  5
     1.3 Putting inputs to DPR-X directly at node at step  12
     3.0 Arithmetic op is done at step  13
     4.2 Saving results to own MCLM at step  16
     (2, 7) ---> [[], [15], [13], [10, 12, 14], [61, 52, 73, 9, 11]]
###### 16
     Pred 1 entered:  14
     Pred 2 entered:  15
     Check for pred "15" =====> in (0, 7) ['15']
     Walked coords  [(0, 7), (1, 7), (2, 7), (3, 7), (4, 7), (5, 7), (5, 6), (5, 5), (5, 4), (5, 3)]
     1.0 Inputs are send from pred at step  83
     1.2 Putting inputs to DPR1 directly at node at step  94
     3.0 Arithmetic op is done at step  95
     4.0 ---Notification is changed for 17 1
     4.0 Saving results to DPR2 directly at step  96
     (5, 3) ---> [[], [], [70, 72, 74, 95], [66, 69, 71, 70, 73, 72, 75, 94, 96], [67, 64, 83, 89, 44, 41, 53, 39, 56, 65, 68, 69, 71, 93]]
###### 17
     Pred 1 entered:  16
     Pred 2 entered:  9
     Check for pred "9" =====> in (2, 7) ['9']
     Walked coords  [(2, 7), (3, 7), (4, 7), (5, 7), (5, 6), (5, 5), (5, 4), (5, 3)]
     1.0 Inputs are send from pred at step  19
     1.2 Putting inputs to DPR1 directly at node at step  28
     3.0 Arithmetic op is done at step  97
     4.2 Saving results to own MCLM at step  100
     (5, 3) ---> [[], [99], [70, 72, 74, 95, 97], [66, 69, 71, 70, 73, 72, 75, 94, 96, 28, 98], [67, 64, 83, 89, 44, 41, 53, 39, 56, 65, 68, 69, 71, 93, 27]]
###### y11
     Pred 1 entered:  17
     1.4 This is actually last node at step  100

Final results after rescheduling (node.name, node.sched): by PEs
(5, 3)  --->  [('1', 71), ('10', 73), ('14', 75), ('16', 96), ('17', 100), ('y11', 100)]
(0, 7)  --->  [('5', 35), ('12', 66), ('15', 80)]
(3, 6)  --->  [('3', 34), ('11', 59)]
(5, 4)  --->  [('7', 57), ('13', 61)]
(5, 5)  --->  [('2', 63)]
(1, 7)  --->  [('4', 47)]
(6, 0)  --->  [('6', 46)]
(4, 6)  --->  [('8', 43)]
(2, 7)  --->  [('9', 16)]

PE map 
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Node scheds and CCM commands:
1  --->  [(1, 0), ['CCM1', 1, 0, 'PE1'], [(0, 4), ['CCM1', 1, 1, 'PE1']], [(0, 0), ['CCM1', 1, 1, 'PE1']], [(0, 3), ['CCM1', 1, 1, 'PE1']], [(0, 2), ['CCM1', 1, 1, 'PE1']], [(0, 1), ['CCM1', 1, 1, 'PE1']], [(1, 1), ['CCM1', 1, 0, 'PE1']], [(1, 2), ['CCM1', 1, 1, 'PE1']], [(1, 3), ['CCM1', 1, 1, 'PE1']]]
2  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'DPR1']], [(0, 2), ['CCM1', 2, 0, 'PE1']], [(0, 1), ['CCM3', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
3  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(1, 0), ['CCM1', 3, 1, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 3, 0, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 3, 1, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 3, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM1', 3, 2, 'PE1']]]
6  --->  [(2, 0), ['CCM6', 'DPR1'], [(0, 3), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']]]
4  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM1', 4, 0, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
5  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(0, 4), ['CCM3', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 5, 1, 'PE1']], [(0, 1), ['CCM1', 5, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 5, 3, 'PE1']], [(0, 2), ['CCM1', 5, 0, 'PE1']], [(1, 3), ['CCM6', 'NodeRouter']]]
8  --->  [(2, 0), ['CCM6', 'DPR2'], [(0, 3), ['CCM6', 'DPR2']], [(0, 4), ['CCM5', 'DPR3']], [(0, 2), ['CCM6', 'DPR2']], [(1, 1), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM1', 8, 3, 'PE1']], [(0, 1), ['CCM3', 'PERouter']]]
9  --->  [(2, 0), ['CCM4', '*'], [(0, 3), ['CCM4', '*']], [(0, 4), ['CCM2', 'MCLM1']], [(0, 2), ['CCM4', '*']], [(1, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 9, 0, 'PE1']], [(1, 2), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(0, 1), ['CCM6', 'NodeRouter']]]
10  --->  [(2, 0), ['CCM5', 'DPR3'], [(0, 3), ['CCM5', 'DPR2']], [(0, 2), ['CCM5', 'DPR2']], [(1, 1), ['CCM4', '*']], [(0, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'DPR1']], [(0, 0), ['CCM1', 10, 1, 'PE1']], [(1, 2), ['CCM5', 'DPR3']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 10, 3, 'PE1']], [(0, 2), ['CCM1', 10, 4, 'PE1']], [(1, 2), ['CCM1', 10, 2, 'PE1']], [(2, 7), ['CCM6', 'DPR1']]]
11  --->  [(2, 0), ['CCM2', 'MCLM1'], [(1, 1), ['CCM5', 'DPR3']], [(0, 1), ['CCM4', '*']], [(1, 0), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'DPR2']], [(0, 4), ['CCM1', 11, 2, 'PE1']], [(1, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM1', 11, 3, 'PE1']], [(3, 0), ['CCM6', 'DPR1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']]]
7  --->  [(0, 4), ['CCM4', '*'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 7, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 7, 1, 'PE1']], [(3, 2), ['CCM6', 'DPR1']]]
12  --->  [(1, 1), ['CCM2', 'MCLM1'], [(0, 1), ['CCM5', 'DPR2']], [(1, 0), ['CCM6', 'DPR2']], [(0, 0), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 4), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 12, 0, 'PE1']], [(1, 2), ['CCM1', 12, 1, 'PE1']], [(2, 7), ['CCM6', 'DPR2']]]
13  --->  [(1, 0), ['CCM4', '*'], [(0, 0), ['CCM5', 'DPR2']], [(2, 0), ['CCM1', 13, 0, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 13, 4, 'PE1']], [(0, 3), ['CCM1', 13, 4, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(2, 7), ['CCM4', '*']]]
14  --->  [(1, 0), ['CCM5', 'DPR3'], [(2, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 14, 2, 'PE1']], [(1, 2), ['CCM1', 14, 0, 'PE1']], [(1, 0), ['CCM1', 14, 1, 'PE1']], [(2, 4), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 14, 6, 'PE1']], [(0, 0), ['CCM1', 14, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']], [(2, 7), ['CCM5', 'DPR3']]]
15  --->  [(1, 0), ['CCM2', 'MCLM1'], [(2, 0), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 15, 3, 'PE1']], [(0, 3), ['CCM1', 15, 3, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(2, 7), ['CCM2', 'MCLM1']]]
22  --->  [(0, 3), ['CCM6', 'DPR1'], [(0, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'DPR2']], [(3, 0), ['CCM5', 'DPR2']], [(2, 4), ['CCM2', 'MCLM1']], [(1, 4), ['CCM1', 22, 0, 'PE1']], [(3, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(4, 5), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']]]
23  --->  [(0, 3), ['CCM4', '+'], [(0, 0), ['CCM4', '+']], [(3, 1), ['CCM4', '*']], [(1, 4), ['CCM3', 'PERouter']], [(3, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(4, 4), ['CCM6', 'DPR1']], [(3, 4), ['CCM6', 'DPR1']], [(4, 2), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 1), ['CCM6', 'DPR2']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 23, 3, 'PE1']], [(1, 0), ['CCM1', 23, 3, 'PE1']], [(0, 4), ['CCM1', 23, 3, 'PE1']], [(1, 2), ['CCM1', 23, 6, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']]]
24  --->  [(0, 3), ['CCM5', 'DPR3'], [(0, 0), ['CCM5', 'DPR2']], [(0, 1), ['CCM1', 24, 2, 'PE1']], [(3, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 24, 1, 'PE1']], [(2, 3), ['CCM6', 'DPR1']], [(2, 4), ['CCM1', 24, 0, 'PE1']], [(1, 4), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM5', 'DPR3']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM1', 24, 3, 'PE1']], [(0, 2), ['CCM1', 24, 7, 'PE1']], [(1, 2), ['CCM3', 'PERouter']]]
25  --->  [(0, 3), ['CCM2', 'MCLM1'], [(0, 1), ['CCM3', 'PERouter']], [(3, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 4), ['CCM3', 'PERouter']], [(4, 4), ['CCM6', 'DPR2']], [(3, 4), ['CCM6', 'DPR2']], [(4, 2), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'DPR2']], [(1, 5), ['CCM6', 'DPR1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 6), ['CCM6', 'DPR2']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']]]
17  --->  [(0, 2), ['CCM6', 'DPR1'], [(1, 0), ['CCM1', 17, 2, 'PE1']], [(3, 1), ['CCM6', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 4), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(3, 2), ['CCM4', '*']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 17, 6, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 17, 6, 'PE1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 7), ['CCM1', 17, 0, 'PE1']]]
18  --->  [(0, 2), ['CCM4', '+'], [(1, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR2']], [(1, 4), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(3, 2), ['CCM5', 'DPR3']], [(1, 1), ['CCM1', 18, 3, 'PE1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 18, 1, 'PE1']], [(2, 7), ['CCM3', 'PERouter']]]
19  --->  [(0, 2), ['CCM5', 'DPR2'], [(0, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(2, 4), ['CCM6', 'DPR2']], [(1, 3), ['CCM4', '*']], [(1, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 19, 3, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM1', 19, 7, 'PE1']], [(0, 2), ['CCM1', 19, 7, 'PE1']], [(2, 7), ['CCM6', 'NodeRouter']]]
16  --->  [(1, 1), ['CCM6', 'NodeRouter'], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 16, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 16, 0, 'PE1']], [(3, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 16, 1, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']]]
20  --->  [(0, 1), ['CCM4', '+'], [(3, 0), ['CCM6', 'DPR2']], [(2, 4), ['CCM4', '*']], [(1, 3), ['CCM5', 'DPR2']], [(1, 4), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR1']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']]]
21  --->  [(0, 1), ['CCM5', 'DPR3'], [(0, 0), ['CCM6', 'DPR1']], [(3, 0), ['CCM4', '*']], [(2, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM1', 21, 0, 'PE1']], [(1, 1), ['CCM1', 21, 6, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 21, 6, 'PE1']], [(0, 1), ['CCM1', 21, 1, 'PE1']], [(1, 2), ['CCM1', 21, 4, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 21, 9, 'PE1']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 21, 10, 'PE1']]]
27  --->  [(0, 3), ['CCM1', 27, 2, 'PE1'], [(0, 0), ['CCM3', 'PERouter']], [(3, 1), ['CCM1', 27, 0, 'PE1']], [(2, 1), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR1']], [(4, 4), ['CCM5', 'DPR3']], [(3, 4), ['CCM5', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(4, 2), ['CCM1', 27, 0, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']]]
28  --->  [(0, 3), ['CCM3', 'PERouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 1), ['CCM3', 'PERouter']], [(4, 0), ['CCM6', 'DPR2']], [(4, 4), ['CCM2', 'MCLM1']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM3', 'PERouter']], [(1, 5), ['CCM6', 'DPR2']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 28, 6, 'PE1']], [(1, 0), ['CCM1', 28, 9, 'PE1']], [(0, 7), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'NodeRouter']], [(5, 3), ['CCM6', 'DPR1']]]
29  --->  [(0, 3), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM6', 'DPR1']], [(4, 0), ['CCM4', '*']], [(0, 5), ['CCM6', 'DPR1']], [(4, 2), ['CCM6', 'NodeRouter']], [(1, 5), ['CCM4', '*']], [(1, 1), ['CCM1', 29, 8, 'PE1']], [(0, 3), ['CCM1', 29, 7, 'PE1']], [(0, 2), ['CCM1', 29, 6, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM1', 29, 0, 'PE1']]]
32  --->  [(0, 2), ['CCM6', 'DPR1'], [(2, 2), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM6', 'DPR1']], [(1, 3), ['CCM5', 'DPR2']], [(4, 3), ['CCM5', 'DPR3']], [(4, 4), ['CCM6', 'NodeRouter']], [(5, 2), ['CCM6', 'DPR1']], [(5, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 6), ['CCM4', '*']], [(1, 1), ['CCM1', 32, 9, 'PE1']], [(0, 3), ['CCM1', 32, 7, 'PE1']], [(3, 6), ['CCM6', 'DPR2']]]
33  --->  [(0, 2), ['CCM4', '+'], [(2, 2), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 33, 1, 'PE1']], [(3, 0), ['CCM4', '+']], [(4, 3), ['CCM2', 'MCLM1']], [(0, 6), ['CCM5', 'DPR2']], [(2, 5), ['CCM6', 'DPR1']], [(4, 5), ['CCM6', 'DPR2']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 33, 10, 'PE1']], [(0, 7), ['CCM6', 'DPR2']], [(0, 3), ['CCM3', 'PERouter']], [(3, 6), ['CCM4', '*']]]
34  --->  [(0, 2), ['CCM5', 'DPR3'], [(2, 2), ['CCM5', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM5', 'DPR3']], [(4, 1), ['CCM6', 'DPR1']], [(1, 5), ['CCM1', 34, 0, 'PE1']], [(4, 5), ['CCM4', '*']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 7), ['CCM4', '*']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 34, 10, 'PE1']], [(3, 6), ['CCM5', 'DPR2']]]
35  --->  [(0, 2), ['CCM2', 'MCLM1'], [(2, 3), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 0), ['CCM2', 'MCLM1']], [(2, 2), ['CCM4', '+']], [(4, 1), ['CCM4', '*']], [(0, 0), ['CCM1', 35, 0, 'PE1']], [(4, 3), ['CCM1', 35, 0, 'PE1']], [(3, 4), ['CCM6', 'DPR1']], [(1, 5), ['CCM3', 'PERouter']], [(4, 5), ['CCM5', 'DPR3']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 7), ['CCM5', 'DPR2']], [(0, 3), ['CCM3', 'PERouter']]]
26  --->  [(0, 1), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 26, 1, 'PE1']], [(2, 4), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(4, 4), ['CCM4', '*']], [(3, 4), ['CCM4', '*']], [(0, 1), ['CCM1', 26, 0, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 26, 7, 'PE1']], [(0, 4), ['CCM1', 26, 10, 'PE1']]]
30  --->  [(0, 0), ['CCM4', '+'], [(1, 3), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM5', 'DPR2']], [(0, 5), ['CCM4', '*']], [(4, 4), ['CCM1', 30, 0, 'PE1']], [(1, 5), ['CCM5', 'DPR3']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 30, 6, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(3, 6), ['CCM6', 'DPR1']], [(0, 1), ['CCM3', 'PERouter']]]
31  --->  [(0, 0), ['CCM5', 'DPR2'], [(0, 0), ['CCM1', 31, 0, 'PE1']], [(1, 3), ['CCM4', '+']], [(4, 3), ['CCM4', '*']], [(0, 5), ['CCM5', 'DPR2']], [(4, 4), ['CCM3', 'PERouter']], [(1, 5), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 6), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']]]
37  --->  [(0, 2), ['CCM1', 37, 2, 'PE1'], [(2, 3), ['CCM5', 'DPR3']], [(2, 2), ['CCM2', 'MCLM1']], [(3, 0), ['CCM1', 37, 0, 'PE1']], [(4, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 37, 1, 'PE1']], [(4, 3), ['CCM6', 'NodeRouter']], [(3, 4), ['CCM5', 'DPR2']], [(1, 6), ['CCM6', 'DPR1']], [(4, 6), ['CCM6', 'DPR1']], [(6, 0), ['CCM6', 'DPR1']]]
38  --->  [(0, 2), ['CCM3', 'PERouter'], [(2, 3), ['CCM2', 'MCLM1']], [(2, 1), ['CCM6', 'DPR1']], [(3, 0), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 5), ['CCM6', 'DPR1']], [(5, 2), ['CCM6', 'DPR2']], [(2, 5), ['CCM6', 'DPR2']], [(4, 5), ['CCM1', 38, 0, 'PE1']]]
39  --->  [(0, 2), ['CCM6', 'NodeRouter'], [(3, 0), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM1', 39, 0, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM4', '+']], [(4, 1), ['CCM1', 39, 0, 'PE1']], [(5, 2), ['CCM4', '*']], [(2, 5), ['CCM4', '*']], [(4, 5), ['CCM3', 'PERouter']], [(4, 6), ['CCM6', 'DPR2']]]
43  --->  [(0, 0), ['CCM6', 'DPR1'], [(4, 0), ['CCM4', '+']], [(0, 5), ['CCM1', 43, 0, 'PE1']], [(2, 6), ['CCM5', 'DPR3']], [(0, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM1', 43, 0, 'PE1']], [(5, 4), ['CCM6', 'DPR1']], [(6, 0), ['CCM4', '*']], [(1, 7), ['CCM6', 'DPR2']]]
44  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(4, 0), ['CCM5', 'DPR3']], [(0, 5), ['CCM3', 'PERouter']], [(2, 6), ['CCM2', 'MCLM1']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 44, 8, 'PE1']], [(5, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 44, 8, 'PE1']], [(6, 0), ['CCM5', 'DPR3']], [(1, 7), ['CCM4', '*']], [(4, 6), ['CCM1', 44, 0, 'PE1']]]
45  --->  [(0, 0), ['CCM5', 'DPR2'], [(3, 3), ['CCM6', 'DPR1']], [(4, 0), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(6, 0), ['CCM2', 'MCLM1']], [(1, 7), ['CCM5', 'DPR3']], [(4, 6), ['CCM3', 'PERouter']]]
46  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM1', 46, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 7), ['CCM2', 'MCLM1']], [(0, 1), ['CCM1', 46, 10, 'PE1']], [(4, 6), ['CCM6', 'NodeRouter']]]
47  --->  [(0, 0), ['CCM5', 'DPR3'], [(2, 1), ['CCM4', '+']], [(1, 3), ['CCM4', '+']], [(3, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM1', 47, 0, 'PE1']], [(2, 6), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(6, 0), ['CCM1', 47, 0, 'PE1']]]
48  --->  [(0, 0), ['CCM2', 'MCLM1'], [(2, 1), ['CCM5', 'DPR2']], [(1, 3), ['CCM5', 'DPR3']], [(3, 3), ['CCM4', '*']], [(4, 0), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 48, 1, 'PE1']], [(5, 1), ['CCM6', 'DPR1']], [(2, 6), ['CCM6', 'NodeRouter']], [(5, 0), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(6, 0), ['CCM3', 'PERouter']], [(1, 7), ['CCM1', 48, 0, 'PE1']]]
36  --->  [(2, 3), ['CCM4', '*'], [(2, 2), ['CCM5', 'DPR3']], [(4, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM3', 'PERouter']], [(4, 3), ['CCM3', 'PERouter']], [(3, 4), ['CCM4', '+']], [(1, 5), ['CCM6', 'NodeRouter']], [(4, 5), ['CCM2', 'MCLM1']], [(0, 3), ['CCM6', 'NodeRouter']]]
40  --->  [(2, 1), ['CCM6', 'DPR2'], [(2, 3), ['CCM1', 40, 0, 'PE1']], [(2, 2), ['CCM3', 'PERouter']], [(0, 5), ['CCM5', 'DPR3']], [(4, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 40, 1, 'PE1']], [(2, 5), ['CCM5', 'DPR2']], [(4, 5), ['CCM6', 'NodeRouter']], [(4, 6), ['CCM4', '*']]]
41  --->  [(2, 1), ['CCM4', '*'], [(2, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM2', 'MCLM1']], [(4, 1), ['CCM6', 'NodeRouter']], [(5, 2), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 6), ['CCM6', 'DPR2']], [(4, 6), ['CCM5', 'DPR3']], [(1, 7), ['CCM6', 'DPR1']]]
42  --->  [(2, 1), ['CCM5', 'DPR2'], [(2, 3), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']], [(0, 0), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM4', '*']], [(0, 1), ['CCM1', 42, 0, 'PE1']], [(4, 6), ['CCM2', 'MCLM1']], [(6, 0), ['CCM6', 'DPR2']], [(5, 5), ['CCM6', 'DPR1']]]
49  --->  [(1, 3), ['CCM2', 'MCLM1'], [(2, 1), ['CCM4', '+']], [(3, 3), ['CCM5', 'DPR2']], [(4, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(6, 0), ['CCM6', 'NodeRouter']], [(1, 7), ['CCM3', 'PERouter']]]
50  --->  [(2, 1), ['CCM5', 'DPR2'], [(3, 3), ['CCM4', '+']], [(5, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 50, 0, 'PE1']], [(1, 7), ['CCM6', 'NodeRouter']]]
51  --->  [(1, 3), ['CCM1', 51, 0, 'PE1'], [(3, 3), ['CCM5', 'DPR2']], [(5, 1), ['CCM4', '*']], [(0, 0), ['CCM3', 'PERouter']], [(5, 4), ['CCM6', 'DPR1']]]
52  --->  [(1, 3), ['CCM3', 'PERouter'], [(3, 3), ['CCM6', 'DPR1']], [(5, 1), ['CCM5', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 52, 1, 'PE1']], [(0, 6), ['CCM6', 'DPR1']]]
53  --->  [(1, 3), ['CCM6', 'NodeRouter'], [(3, 3), ['CCM4', '+']], [(3, 5), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(5, 1), ['CCM4', '+']], [(0, 6), ['CCM4', '+']]]
58  --->  [(2, 1), ['CCM6', 'DPR1'], [(3, 4), ['CCM5', 'DPR3']], [(3, 5), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(5, 4), ['CCM4', '+']], [(3, 6), ['CCM2', 'MCLM1']]]
59  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM2', 'MCLM1']], [(1, 6), ['CCM6', 'DPR2']], [(5, 0), ['CCM6', 'DPR1']], [(5, 1), ['CCM1', 59, 0, 'PE1']], [(5, 5), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(5, 4), ['CCM5', 'DPR3']]]
60  --->  [(2, 1), ['CCM5', 'DPR2'], [(1, 6), ['CCM4', '*']], [(3, 5), ['CCM1', 60, 0, 'PE1']], [(5, 1), ['CCM3', 'PERouter']], [(5, 5), ['CCM4', '*']], [(5, 4), ['CCM2', 'MCLM1']]]
61  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM1', 61, 0, 'PE1']], [(1, 6), ['CCM5', 'DPR3']], [(5, 0), ['CCM6', 'DPR2']], [(3, 5), ['CCM3', 'PERouter']], [(5, 1), ['CCM6', 'NodeRouter']], [(5, 5), ['CCM5', 'DPR3']]]
62  --->  [(2, 1), ['CCM5', 'DPR3'], [(3, 4), ['CCM3', 'PERouter']], [(1, 6), ['CCM2', 'MCLM1']], [(5, 0), ['CCM4', '*']], [(3, 5), ['CCM6', 'NodeRouter']], [(5, 5), ['CCM2', 'MCLM1']]]
63  --->  [(2, 1), ['CCM2', 'MCLM1'], [(3, 4), ['CCM6', 'NodeRouter']], [(5, 0), ['CCM5', 'DPR2']], [(3, 6), ['CCM1', 63, 0, 'PE1']]]
56  --->  [(3, 4), ['CCM6', 'DPR1'], [(3, 5), ['CCM4', '*']], [(5, 4), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 6), ['CCM4', '+']]]
57  --->  [(3, 4), ['CCM4', '+'], [(3, 5), ['CCM5', 'DPR3']], [(5, 4), ['CCM5', 'DPR2']], [(0, 0), ['CCM1', 57, 10, 'PE1']], [(3, 6), ['CCM5', 'DPR3']]]
54  --->  [(3, 3), ['CCM5', 'DPR2'], [(0, 0), ['CCM6', 'NodeRouter']], [(5, 1), ['CCM5', 'DPR3']], [(0, 6), ['CCM5', 'DPR2']], [(0, 0), ['CCM1', 54, 0, 'PE1']]]
66  --->  [(3, 3), ['CCM6', 'DPR1'], [(1, 6), ['CCM6', 'NodeRouter']], [(5, 3), ['CCM6', 'DPR1']], [(0, 7), ['CCM5', 'DPR2']], [(5, 5), ['CCM6', 'NodeRouter']], [(5, 4), ['CCM6', 'NodeRouter']]]
67  --->  [(3, 3), ['CCM4', '+']]
68  --->  [(3, 3), ['CCM5', 'DPR2']]
69  --->  [(3, 3), ['CCM4', '+'], [(5, 3), ['CCM6', 'DPR2']]]
70  --->  [(3, 3), ['CCM5', 'DPR3'], [(2, 5), ['CCM6', 'DPR1']], [(5, 3), ['CCM4', '*']], [(5, 3), ['CCM6', 'DPR1']]]
71  --->  [(3, 3), ['CCM2', 'MCLM1'], [(2, 5), ['CCM4', '+']], [(5, 0), ['CCM6', 'DPR1']], [(5, 3), ['CCM5', 'DPR2']]]
55  --->  [(3, 5), ['CCM6', 'DPR2'], [(5, 1), ['CCM2', 'MCLM1']], [(5, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 6), ['CCM6', 'DPR1']]]
64  --->  [(1, 6), ['CCM1', 64, 0, 'PE1'], [(0, 7), ['CCM6', 'DPR1']], [(5, 5), ['CCM1', 64, 0, 'PE1']], [(5, 4), ['CCM1', 64, 0, 'PE1']], [(3, 6), ['CCM3', 'PERouter']]]
65  --->  [(1, 6), ['CCM3', 'PERouter'], [(0, 7), ['CCM4', '+']], [(5, 5), ['CCM3', 'PERouter']], [(5, 4), ['CCM3', 'PERouter']], [(3, 6), ['CCM6', 'NodeRouter']]]
72  --->  [(2, 5), ['CCM5', 'DPR3'], [(5, 0), ['CCM4', '+']], [(5, 3), ['CCM4', '+']], [(5, 3), ['CCM6', 'DPR1']]]
73  --->  [(2, 5), ['CCM2', 'MCLM1'], [(5, 0), ['CCM5', 'DPR2']], [(0, 6), ['CCM6', 'DPR1']], [(5, 3), ['CCM5', 'DPR2']]]
74  --->  [(0, 6), ['CCM4', '+'], [(5, 3), ['CCM4', '+']]]
75  --->  [(0, 6), ['CCM5', 'DPR3'], [(2, 5), ['CCM1', 75, 0, 'PE1']], [(5, 3), ['CCM5', 'DPR2']]]
76  --->  [(0, 6), ['CCM2', 'MCLM1'], [(2, 5), ['CCM3', 'PERouter']], [(0, 7), ['CCM6', 'DPR1']]]
77  --->  [(2, 5), ['CCM6', 'NodeRouter'], [(0, 7), ['CCM4', '+']]]
87  --->  [(5, 0), ['CCM6', 'DPR1']]
88  --->  [(5, 0), ['CCM4', '+']]
89  --->  [(5, 0), ['CCM5', 'DPR2']]
78  --->  [(0, 6), ['CCM1', 78, 0, 'PE1'], [(0, 7), ['CCM5', 'DPR3']]]
79  --->  [(0, 6), ['CCM3', 'PERouter'], [(0, 7), ['CCM2', 'MCLM1']]]
80  --->  [(0, 6), ['CCM6', 'NodeRouter']]
93  --->  [(5, 0), ['CCM6', 'DPR1']]
94  --->  [(5, 0), ['CCM4', '+'], [(5, 3), ['CCM6', 'DPR1']]]
95  --->  [(5, 0), ['CCM5', 'DPR2'], [(5, 3), ['CCM4', '+']]]
96  --->  [(5, 0), ['CCM4', '+'], [(5, 3), ['CCM5', 'DPR2']]]
97  --->  [(5, 0), ['CCM5', 'DPR3'], [(5, 3), ['CCM4', '+']]]
98  --->  [(5, 0), ['CCM2', 'MCLM1'], [(5, 3), ['CCM5', 'DPR3']]]
81  --->  [(0, 7), ['CCM1', 81, 0, 'PE1']]
82  --->  [(0, 7), ['CCM3', 'PERouter']]
83  --->  [(0, 7), ['CCM6', 'NodeRouter']]
99  --->  [(5, 3), ['CCM2', 'MCLM1']]

Router scheds and CCM commands:
4  --->  [(0, 1), (0, 2), [(2, 2), (3, 2)], [(2, 3), (2, 4)]]
5  --->  [(0, 1), (0, 3), [(1, 2), (1, 1)], [(2, 3), (2, 5)]]
6  --->  [(1, 0), (1, 1), [(2, 3), (2, 6)], [(2, 3), (2, 4)]]
8  --->  [(1, 1), (1, 0), [(2, 0), (3, 0)], [(1, 2), (1, 3)], [(2, 3), (2, 6)]]
16  --->  [(2, 1), (2, 2), [(1, 4), (2, 4)], [(1, 2), (3, 2)], [(2, 2), (4, 2)]]
17  --->  [(2, 1), (2, 3), [(1, 1), (1, 0)], [(2, 0), (3, 0)], [(1, 2), (4, 2)], [(1, 2), (2, 2)], [(1, 0), (2, 0)], [(2, 2), (4, 3)]]
18  --->  [(2, 1), (1, 3), [(1, 1), (0, 0)], [(1, 4), (2, 4)], [(1, 3), (2, 3)], [(1, 2), (3, 2)], [(1, 0), (3, 0)], [(2, 2), (4, 4)]]
19  --->  [(2, 1), (0, 3), [(2, 1), (3, 1)], [(1, 1), (2, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(1, 2), (4, 2)], [(0, 1), (0, 2)], [(1, 0), (4, 0)], [(2, 2), (4, 5)]]
14  --->  [(0, 3), (0, 2), [(2, 1), (3, 1)], [(1, 2), (1, 4)]]
40  --->  [(0, 1), (0, 0), [(3, 1), (3, 2)], [(1, 0), (3, 1)], [(1, 0), (2, 0)], [(2, 1), (5, 4)], [(1, 3), (1, 7)]]
11  --->  [(1, 4), (2, 4), [(1, 1), (2, 2)]]
9  --->  [(1, 2), (1, 4), [(2, 3), (2, 7)]]
13  --->  [(1, 2), (1, 3), [(2, 2), (3, 2)]]
10  --->  [(1, 1), (2, 1)]
27  --->  [(1, 0), (2, 0), [(2, 3), (1, 3)], [(2, 1), (4, 3)], [(2, 1), (4, 1)], [(2, 0), (4, 0)], [(1, 4), (2, 5)], [(0, 4), (0, 5)], [(1, 2), (2, 2)], [(2, 2), (4, 2)], [(1, 2), (3, 6)], [(1, 2), (3, 4)]]
28  --->  [(1, 0), (2, 1), [(2, 1), (5, 1)], [(2, 0), (5, 0)], [(1, 4), (2, 6)], [(0, 4), (0, 6)], [(1, 2), (2, 3)], [(2, 2), (4, 3)], [(1, 2), (3, 5)]]
29  --->  [(1, 0), (2, 2), [(1, 0), (2, 0)], [(1, 1), (2, 1)], [(2, 1), (5, 2)], [(2, 0), (5, 1)], [(1, 2), (2, 4)], [(2, 2), (4, 4)], [(2, 2), (3, 2)], [(0, 5), (0, 6)], [(1, 2), (3, 6)]]
20  --->  [(1, 1), (2, 2), [(1, 4), (4, 4)], [(1, 4), (2, 4)], [(1, 3), (3, 4)], [(1, 3), (2, 3)], [(0, 1), (0, 3)], [(1, 0), (4, 1)], [(3, 7), (4, 7)]]
21  --->  [(1, 1), (2, 3), [(2, 1), (3, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(0, 1), (0, 4)], [(1, 3), (1, 4)], [(3, 7), (5, 7)]]
30  --->  [(1, 0), (2, 1), [(1, 1), (3, 1)], [(4, 3), (4, 4)], [(1, 2), (2, 5)], [(2, 2), (4, 5)], [(2, 2), (4, 2)], [(0, 5), (0, 7)]]
31  --->  [(1, 0), (2, 2), [(1, 1), (4, 1)], [(4, 3), (4, 5)], [(2, 2), (4, 3)], [(2, 2), (3, 2)], [(2, 0), (3, 0)]]
32  --->  [(1, 0), (2, 3), [(4, 3), (3, 5)], [(2, 1), (3, 1)], [(1, 3), (1, 4)], [(1, 2), (2, 2)], [(2, 2), (4, 4)], [(2, 2), (4, 2)], [(2, 0), (4, 0)], [(1, 1), (2, 1)]]
34  --->  [(1, 0), (2, 0), [(4, 3), (1, 5)], [(2, 1), (5, 1)], [(2, 0), (2, 2)], [(1, 3), (1, 6)], [(1, 2), (2, 4)], [(2, 2), (4, 6)], [(2, 2), (4, 4)], [(2, 0), (6, 0)], [(1, 1), (4, 1)]]
35  --->  [(1, 0), (2, 1), [(4, 3), (0, 5)], [(2, 1), (5, 2)], [(2, 0), (2, 3)], [(1, 2), (2, 5)], [(2, 2), (4, 5)], [(2, 1), (3, 1)], [(1, 3), (1, 4)], [(1, 1), (5, 1)]]
36  --->  [(1, 0), (2, 0), [(2, 0), (2, 4)], [(2, 2), (4, 6)], [(2, 1), (4, 1)], [(2, 0), (3, 0)], [(1, 3), (1, 5)], [(1, 1), (5, 2)]]
37  --->  [(1, 0), (2, 1), [(2, 5), (3, 5)], [(2, 0), (2, 5)], [(2, 1), (5, 1)], [(2, 0), (4, 0)], [(1, 3), (1, 6)], [(1, 3), (1, 4)], [(1, 1), (5, 3)]]
25  --->  [(2, 4), (2, 3), [(2, 1), (4, 1)], [(2, 0), (4, 0)], [(0, 2), (0, 4)], [(1, 3), (1, 5)], [(0, 5), (0, 7)], [(1, 2), (3, 4)], [(1, 2), (3, 2)], [(3, 7), (5, 3)]]
26  --->  [(2, 4), (2, 2), [(2, 1), (4, 2)], [(0, 2), (0, 5)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(1, 4), (2, 4)], [(2, 2), (3, 2)], [(1, 2), (3, 5)], [(1, 2), (3, 3)]]
43  --->  [(2, 2), (2, 1), [(3, 1), (1, 3)], [(1, 0), (3, 2)], [(4, 2), (3, 3)], [(1, 0), (2, 0)], [(5, 5), (5, 2)]]
41  --->  [(3, 1), (3, 3), [(1, 0), (3, 2)], [(1, 0), (3, 0)], [(5, 5), (5, 4)]]
42  --->  [(3, 1), (2, 3), [(1, 0), (3, 3)], [(1, 0), (3, 1)], [(4, 2), (4, 3)], [(5, 5), (5, 3)]]
54  --->  [(2, 3), (2, 2), [(1, 0), (1, 4)], [(1, 0), (3, 0)], [(1, 1), (5, 3)], [(6, 1), (6, 6)]]
55  --->  [(2, 3), (2, 1), [(1, 0), (1, 5)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(1, 1), (5, 4)], [(6, 1), (6, 7)]]
24  --->  [(3, 1), (2, 1), [(2, 1), (4, 3)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(0, 2), (0, 3)], [(1, 3), (1, 4)], [(0, 5), (0, 6)], [(1, 2), (3, 3)], [(1, 2), (2, 2)], [(3, 7), (5, 4)]]
22  --->  [(2, 1), (4, 1), [(2, 0), (3, 0)], [(1, 4), (4, 4)], [(1, 3), (3, 4)], [(0, 1), (0, 5)], [(1, 3), (1, 5)], [(0, 5), (0, 6)], [(1, 2), (2, 2)], [(3, 7), (5, 6)]]
23  --->  [(2, 1), (4, 2), [(2, 0), (4, 0)], [(1, 2), (3, 2)], [(3, 7), (5, 5)]]
15  --->  [(1, 2), (2, 2), [(2, 2), (3, 2)]]
38  --->  [(1, 0), (2, 0), [(4, 2), (4, 1)], [(2, 5), (3, 4)], [(2, 0), (2, 6)], [(2, 1), (5, 2)], [(2, 0), (5, 0)], [(1, 3), (1, 7)], [(1, 3), (1, 5)], [(1, 1), (5, 4)]]
39  --->  [(1, 0), (3, 0), [(4, 2), (4, 0)], [(2, 5), (3, 3)], [(2, 1), (5, 3)], [(2, 0), (6, 0)], [(1, 3), (1, 6)], [(1, 1), (5, 5)]]
44  --->  [(1, 0), (3, 3), [(1, 0), (3, 0)], [(5, 5), (5, 1)]]
33  --->  [(4, 3), (2, 5), [(2, 1), (4, 1)], [(2, 0), (2, 1)], [(1, 3), (1, 5)], [(1, 2), (2, 3)], [(2, 2), (4, 5)], [(2, 2), (4, 3)], [(2, 0), (5, 0)], [(1, 1), (3, 1)]]
50  --->  [(4, 1), (4, 2), [(1, 1), (3, 5)], [(1, 1), (3, 3)], [(2, 1), (5, 2)], [(1, 1), (3, 1)], [(6, 1), (6, 2)]]
51  --->  [(4, 1), (4, 3), [(1, 0), (1, 1)], [(1, 1), (3, 4)], [(2, 1), (5, 3)], [(1, 1), (4, 1)], [(6, 1), (6, 3)], [(2, 7), (3, 7)]]
52  --->  [(4, 1), (4, 4), [(1, 0), (1, 2)], [(1, 1), (3, 5)], [(2, 1), (5, 4)], [(1, 1), (5, 1)], [(6, 1), (6, 4)], [(2, 7), (3, 6)]]
53  --->  [(4, 1), (3, 4), [(1, 0), (1, 3)], [(1, 0), (2, 0)], [(1, 1), (5, 2)], [(6, 1), (6, 5)]]
46  --->  [(1, 5), (2, 5), [(1, 0), (5, 0)], [(1, 1), (3, 1)]]
47  --->  [(1, 5), (3, 5), [(1, 0), (5, 1)], [(1, 1), (3, 2)], [(1, 1), (2, 1)], [(2, 1), (3, 1)], [(5, 6), (5, 5)]]
48  --->  [(1, 5), (3, 4), [(1, 1), (3, 3)], [(1, 1), (3, 1)], [(2, 1), (4, 1)], [(5, 6), (5, 4)]]
49  --->  [(1, 5), (3, 3), [(1, 1), (3, 4)], [(1, 1), (3, 2)], [(1, 6), (0, 6)], [(2, 1), (5, 1)], [(1, 1), (2, 1)]]
45  --->  [(1, 0), (4, 0), [(1, 1), (2, 1)], [(5, 5), (5, 0)]]
56  --->  [(1, 0), (1, 6), [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(1, 1), (5, 5)], [(6, 1), (5, 7)]]
57  --->  [(1, 0), (4, 0), [(1, 0), (2, 0)], [(6, 1), (4, 7)]]
58  --->  [(1, 0), (5, 0), [(1, 0), (3, 0)], [(6, 1), (3, 7)]]
67  --->  [(2, 6), (2, 5), [(4, 5), (5, 1)], [(5, 2), (3, 6)], [(5, 4), (5, 3)], [(5, 5), (5, 6)], [(4, 6), (5, 5)]]
63  --->  [(4, 5), (5, 5), [(5, 2), (5, 4)], [(1, 0), (5, 3)], [(1, 0), (5, 0)]]
64  --->  [(4, 5), (5, 4), [(5, 2), (5, 5)], [(1, 0), (5, 1)]]
65  --->  [(4, 5), (5, 3), [(5, 2), (5, 6)], [(1, 0), (5, 2)]]
66  --->  [(4, 5), (5, 2), [(5, 2), (4, 6)], [(1, 0), (5, 3)], [(4, 6), (5, 6)]]
68  --->  [(4, 5), (5, 0), [(5, 2), (2, 6)], [(5, 5), (5, 7)], [(4, 6), (5, 4)]]
62  --->  [(5, 2), (5, 3), [(1, 0), (5, 2)], [(1, 0), (4, 0)]]
69  --->  [(5, 2), (1, 6), [(5, 5), (4, 7)], [(4, 6), (5, 3)]]
70  --->  [(5, 2), (0, 6), [(5, 5), (3, 7)]]
78  --->  [(3, 5), (4, 5)]
79  --->  [(3, 5), (5, 5)]
80  --->  [(3, 5), (5, 4)]
81  --->  [(3, 5), (5, 3), [(1, 6), (2, 6)]]
82  --->  [(3, 5), (5, 2), [(1, 6), (3, 6)]]
83  --->  [(3, 5), (5, 1), [(1, 6), (4, 6)]]
84  --->  [(3, 5), (5, 0), [(1, 6), (5, 6)], [(1, 7), (2, 7)]]
85  --->  [(1, 6), (5, 5), [(1, 7), (3, 7)]]
86  --->  [(1, 6), (5, 4), [(1, 7), (4, 7)]]
87  --->  [(1, 6), (5, 3), [(1, 7), (5, 7)]]
88  --->  [(1, 6), (5, 2), [(1, 7), (5, 6)]]
89  --->  [(1, 6), (5, 1), [(1, 7), (5, 5)]]
90  --->  [(1, 6), (5, 0), [(1, 7), (5, 4)]]
59  --->  [(1, 0), (4, 0), [(6, 1), (2, 7)]]
60  --->  [(1, 0), (5, 0), [(1, 0), (2, 0)], [(6, 1), (1, 7)]]
61  --->  [(1, 0), (5, 1), [(1, 0), (3, 0)], [(6, 1), (0, 7)]]
71  --->  [(5, 5), (2, 7)]
72  --->  [(5, 5), (1, 7)]
73  --->  [(5, 5), (0, 7)]
7  --->  [(2, 3), (2, 7), [(2, 3), (2, 5)]]
91  --->  [(1, 7), (5, 3)]

Rescheduler marker:
(0, 0)  --->  [[1, 3, 5, 7, 9, 10, 24, 26, 31, 33, 16, 14, 35, 37, 40, 48, 50, 52, 54, 57], [48], [12, 23, 30, 44, 46], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 24, 29, 31, 43, 45, 21, 47, 25, 26, 27, 28, 32, 33, 34, 35, 17, 18, 15, 16, 36, 37, 38, 39, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59], [4, 6, 8, 10, 21, 28, 42, 20, 27, 29, 34, 36, 19, 17, 38, 40, 43, 51, 53, 55, 57, 60]]
(0, 1)  --->  [[1, 5, 24, 7, 16, 21, 26, 42, 44, 29, 46], [22], [11, 20], [10, 2, 12, 6, 7, 19, 21, 25, 26, 8, 9, 17, 18, 22, 23, 27, 28, 43, 44, 45, 46, 30, 31, 47, 48], [5, 9, 8, 18, 27, 41, 10, 19, 24, 20, 29, 45, 47, 32, 49]]
(0, 2)  --->  [[1, 2, 37, 5, 10, 12, 14, 24, 29, 19, 21], [35], [9, 18, 33], [8, 2, 10, 3, 4, 17, 19, 32, 34, 38, 39, 6, 7, 11, 12, 13, 14, 15, 16, 25, 26, 30, 31, 20, 21, 22, 23], [6, 7, 5, 16, 31, 40, 8, 13, 15, 17, 25, 21, 27, 32, 22, 24]]
(0, 3)  --->  [[1, 3, 27, 10, 13, 15, 17, 24, 29, 32, 34], [25], [9, 23], [6, 8, 10, 2, 3, 4, 5, 22, 24, 28, 29, 11, 12, 14, 15, 16, 17, 18, 19, 25, 26, 30, 31, 33, 34, 35, 36], [5, 7, 4, 6, 21, 15, 30, 13, 16, 18, 20, 26, 22, 27, 32, 35, 37]]
(0, 4)  --->  [[1, 4, 11, 8, 13, 15, 17, 23, 19, 21, 26], [9], [7], [2, 3, 6, 5, 8, 12, 13, 9, 10, 14, 15, 16, 17, 18, 19, 24, 25, 20, 21, 22, 23, 27, 28], [4, 5, 14, 11, 16, 18, 20, 27, 23, 26, 28, 22, 24, 29]]
(0, 5)  --->  [[43], [41], [30, 39], [29, 25, 31, 38, 40, 44, 45], [28, 24, 37, 46, 29, 23, 25, 30]]
(0, 6)  --->  [[78], [76], [32, 53, 74], [31, 25, 33, 52, 54, 73, 75, 79, 80], [30, 24, 51, 72, 81, 26, 31]]
(0, 7)  --->  [[81], [79], [34, 65, 77], [28, 33, 35, 64, 66, 76, 78, 82, 83], [27, 32, 63, 75, 84]]
(0, 8)  --->  [[], [], [], [], []]
(0, 9)  --->  [[], [], [], [], []]
(1, 0)  --->  [[1, 3, 17, 5, 14, 19, 21, 23, 30, 28, 33], [15], [13], [2, 3, 4, 5, 11, 12, 14, 18, 19, 6, 7, 15, 16, 20, 21, 22, 23, 24, 25, 31, 32, 29, 30, 34, 35], [4, 6, 7, 10, 11, 20, 19, 8, 17, 28, 30, 35, 37, 22, 24, 18, 39, 41, 26, 44, 33, 52, 54, 56, 31, 36, 58, 61]]
(1, 1)  --->  [[14, 1, 3, 11, 16, 18, 21, 23, 29, 32, 44], [12], [10], [8, 9, 11, 15, 16, 2, 3, 4, 5, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 30, 31, 33, 34, 45, 46], [7, 8, 9, 17, 4, 6, 18, 14, 19, 11, 20, 21, 24, 30, 26, 32, 53, 46, 48, 35, 47, 33, 50]]
(1, 2)  --->  [[14, 1, 10, 18, 21, 12, 23, 26, 28], [11], [9], [6, 8, 10, 15, 16, 2, 3, 11, 12, 19, 20, 22, 23, 13, 14, 24, 25, 27, 28, 29, 30], [6, 5, 7, 17, 9, 14, 4, 13, 16, 18, 21, 24, 54, 28, 33, 15, 26, 29, 31, 23, 25]]
(1, 3)  --->  [[51, 1, 3], [49], [19, 31, 47], [15, 18, 20, 30, 32, 46, 48, 52, 53, 2, 3, 4, 5], [20, 14, 17, 10, 15, 29, 45, 54, 19, 21, 22, 25, 33, 55, 36, 38, 4, 6]]
(1, 4)  --->  [[22], [20], [18], [12, 17, 19, 23, 24], [12, 17, 11, 16, 25, 19, 21, 23, 26, 27, 34, 56, 37, 39]]
(1, 5)  --->  [[34], [31], [29], [25, 28, 30, 35, 36], [36, 47, 24, 27, 37, 35, 57, 38, 40]]
(1, 6)  --->  [[64], [62], [60], [37, 59, 61, 65, 66], [36, 58, 50, 67, 71, 82, 39, 41]]
(1, 7)  --->  [[48], [46], [44], [41, 43, 45, 49, 50], [40, 42, 62, 51, 74, 85]]
(1, 8)  --->  [[], [], [], [], []]
(1, 9)  --->  [[], [], [], [], []]
(2, 0)  --->  [[13], [11], [9], [6, 8, 10, 14, 15], [5, 7, 16, 9, 18, 29, 31, 36, 38, 23, 25, 19, 40, 42, 27, 45, 34, 55, 57, 32, 37, 59, 62]]
(2, 1)  --->  [[], [63], [41, 47, 49, 59, 61], [38, 40, 42, 46, 48, 44, 50, 58, 60, 27, 62], [17, 15, 20, 12, 30, 21, 32, 37, 39, 45, 43, 57, 26, 22, 25, 31, 27, 33, 35, 47, 49, 36, 48, 34, 51]]
(2, 2)  --->  [[39], [37], [33, 35], [14, 32, 34, 29, 36, 40, 41], [18, 13, 31, 22, 33, 28, 44, 42, 5, 14, 56, 17, 19, 36, 29, 34, 16, 27, 30, 32, 24, 26]]
(2, 3)  --->  [[40], [38], [36], [24, 35, 37, 41, 42], [19, 23, 34, 28, 27, 43, 44, 55, 20, 22, 37, 30, 35, 5, 7]]
(2, 4)  --->  [[24], [22], [20], [14, 19, 21, 25, 26], [13, 18, 27, 26, 20, 22, 28, 38, 31, 36, 6, 8]]
(2, 5)  --->  [[75], [73], [39, 71], [33, 38, 40, 70, 72, 76, 77], [35, 48, 38, 29, 39, 32, 37, 69, 78, 7, 9]]
(2, 6)  --->  [[46], [44], [42], [31, 41, 43, 47, 48], [30, 40, 49, 68, 70, 83, 8, 10]]
(2, 7)  --->  [[17], [15], [13], [10, 12, 14, 18, 19], [61, 52, 73, 9, 11, 86, 20]]
(2, 8)  --->  [[], [], [], [], []]
(2, 9)  --->  [[], [], [], [], []]
(3, 0)  --->  [[37], [35], [21, 33], [11, 20, 22, 32, 34, 38, 39], [10, 19, 31, 40, 24, 26, 20, 41, 43, 28, 46, 56, 58, 33, 38, 60, 63]]
(3, 1)  --->  [[27], [25], [23], [17, 22, 24, 28, 29], [16, 21, 30, 41, 25, 23, 26, 32, 42, 44, 28, 34, 48, 50, 37, 49, 35, 52]]
(3, 2)  --->  [[21], [19], [17], [7, 16, 18, 22, 23], [42, 6, 15, 24, 18, 20, 43, 45, 49, 51, 17, 28, 31, 33, 25, 27]]
(3, 3)  --->  [[], [71], [48, 50, 53, 67, 69], [45, 47, 49, 46, 51, 52, 54, 66, 68, 42, 70], [43, 21, 23, 44, 46, 45, 51, 65, 41, 50, 52, 26, 28]]
(3, 4)  --->  [[61], [59], [26, 36, 57], [23, 25, 27, 35, 37, 56, 58, 62, 63], [21, 23, 22, 24, 34, 55, 50, 64, 40, 51, 53, 27, 29]]
(3, 5)  --->  [[60], [58], [56], [53, 55, 57, 61, 62], [34, 49, 39, 52, 54, 63, 79, 28, 30]]
(3, 6)  --->  [[63], [58], [33, 56], [30, 32, 34, 55, 57, 64, 65], [69, 84, 29, 31, 54, 66]]
(3, 7)  --->  [[], [], [], [], [60, 53, 72, 87, 21]]
(3, 8)  --->  [[], [], [], [], []]
(3, 9)  --->  [[], [], [], [], []]
(4, 0)  --->  [[47], [45], [29, 43], [26, 28, 30, 42, 44, 48, 49], [25, 27, 21, 41, 50, 29, 47, 57, 59, 34, 39, 61, 64]]
(4, 1)  --->  [[39], [37], [35], [34, 23, 36, 40, 41], [24, 27, 33, 22, 40, 42, 51, 29, 35, 38, 50, 36, 53]]
(4, 2)  --->  [[27], [25], [23], [20, 22, 24, 28, 29], [25, 28, 19, 21, 39, 30, 43, 52, 18, 29, 32, 34]]
(4, 3)  --->  [[35], [33], [31], [27, 30, 32, 36, 37], [26, 29, 38, 31, 44, 53, 19, 30, 33, 35]]
(4, 4)  --->  [[30], [28], [26], [23, 25, 27, 31, 32], [22, 24, 33, 32, 54, 20, 31, 34, 36]]
(4, 5)  --->  [[38], [36], [34], [22, 33, 35, 39, 40], [33, 64, 80, 21, 32, 41, 35, 37]]
(4, 6)  --->  [[44], [42], [40], [37, 39, 41, 45, 46], [68, 85, 36, 38, 47, 67]]
(4, 7)  --->  [[], [], [], [], [59, 71, 88, 22]]
(4, 8)  --->  [[], [], [], [], []]
(4, 9)  --->  [[], [], [], [], []]
(5, 0)  --->  [[], [98], [62, 72, 88, 94, 96], [59, 61, 63, 71, 73, 87, 89, 93, 95, 48, 97], [30, 48, 58, 60, 70, 86, 92, 47, 35, 40, 62, 65]]
(5, 1)  --->  [[59], [55], [51, 53], [32, 50, 52, 48, 54, 60, 61], [30, 36, 31, 49, 47, 69, 62, 85, 91, 46, 39, 51, 37, 54, 63, 66]]
(5, 2)  --->  [[43], [41], [39], [32, 38, 40, 44, 45], [31, 37, 46, 68, 63, 84, 90, 45, 40, 52, 38, 55, 64, 67]]
(5, 3)  --->  [[], [99], [70, 72, 74, 95, 97], [66, 69, 71, 70, 73, 72, 75, 94, 96, 28, 98], [67, 64, 83, 89, 44, 41, 53, 39, 56, 65, 68, 69, 71, 93, 27]]
(5, 4)  --->  [[64], [60], [56, 58], [43, 55, 57, 51, 59, 65, 66], [66, 65, 82, 88, 43, 42, 54, 40, 57, 50, 68, 67, 70, 92, 26]]
(5, 5)  --->  [[64], [62], [60], [42, 59, 61, 65, 66], [65, 66, 81, 87, 42, 41, 58, 49, 67, 68, 69, 91, 25]]
(5, 6)  --->  [[], [], [], [], [67, 86, 48, 69, 68, 90, 24]]
(5, 7)  --->  [[], [], [], [], [58, 70, 89, 23]]
(5, 8)  --->  [[], [], [], [], []]
(5, 9)  --->  [[], [], [], [], []]
(6, 0)  --->  [[47], [45], [43], [37, 42, 44, 48, 49], [36, 41, 50]]
(6, 1)  --->  [[], [], [], [], [51]]
(6, 2)  --->  [[], [], [], [], [52]]
(6, 3)  --->  [[], [], [], [], [53]]
(6, 4)  --->  [[], [], [], [], [54]]
(6, 5)  --->  [[], [], [], [], [55]]
(6, 6)  --->  [[], [], [], [], [56]]
(6, 7)  --->  [[], [], [], [], [57]]
(6, 8)  --->  [[], [], [], [], []]
(6, 9)  --->  [[], [], [], [], []]
(7, 0)  --->  [[], [], [], [], []]
(7, 1)  --->  [[], [], [], [], []]
(7, 2)  --->  [[], [], [], [], []]
(7, 3)  --->  [[], [], [], [], []]
(7, 4)  --->  [[], [], [], [], []]
(7, 5)  --->  [[], [], [], [], []]
(7, 6)  --->  [[], [], [], [], []]
(7, 7)  --->  [[], [], [], [], []]
(7, 8)  --->  [[], [], [], [], []]
(7, 9)  --->  [[], [], [], [], []]
(8, 0)  --->  [[], [], [], [], []]
(8, 1)  --->  [[], [], [], [], []]
(8, 2)  --->  [[], [], [], [], []]
(8, 3)  --->  [[], [], [], [], []]
(8, 4)  --->  [[], [], [], [], []]
(8, 5)  --->  [[], [], [], [], []]
(8, 6)  --->  [[], [], [], [], []]
(8, 7)  --->  [[], [], [], [], []]
(8, 8)  --->  [[], [], [], [], []]
(8, 9)  --->  [[], [], [], [], []]
(9, 0)  --->  [[], [], [], [], []]
(9, 1)  --->  [[], [], [], [], []]
(9, 2)  --->  [[], [], [], [], []]
(9, 3)  --->  [[], [], [], [], []]
(9, 4)  --->  [[], [], [], [], []]
(9, 5)  --->  [[], [], [], [], []]
(9, 6)  --->  [[], [], [], [], []]
(9, 7)  --->  [[], [], [], [], []]
(9, 8)  --->  [[], [], [], [], []]
(9, 9)  --->  [[], [], [], [], []]

Scheduling duration in clocks:  100

CCM Size in bits:  4200

CCM Size in bytes:  525

------------------Synthesys of equation 6 has started!---------------

[('1', 'F00*X01'), ('2', 'F01*X02'), ('3', 'F02*X03'), ('4', 'F10*X11'), ('5', 'F11*X12'), ('6', 'F12*X13'), ('7', 'F20*X21'), ('8', 'F21*X22'), ('9', 'F22*X23'), ('10', '1+2'), ('11', '3+4'), ('12', '5+6'), ('13', '7+8'), ('14', '10+11'), ('15', '12+13'), ('16', '14+15'), ('17', '16+9')]

Graph nodes:
Name   Value   Op_Type   Conn
y12      None      Write      []
1      None      *      ['10']
2      None      *      ['10']
3      None      *      ['11']
4      None      *      ['11']
5      None      *      ['12']
6      None      *      ['12']
7      None      *      ['13']
8      None      *      ['13']
9      None      *      ['17']
10      None      +      ['14']
11      None      +      ['14']
12      None      +      ['15']
13      None      +      ['15']
14      None      +      ['16']
15      None      +      ['16']
16      None      +      ['17']
17      None      +      ['y12']
F00      None      Read      ['1']
X01      None      Read      ['1']
F01      None      Read      ['2']
X02      None      Read      ['2']
F02      None      Read      ['3']
X03      None      Read      ['3']
F10      None      Read      ['4']
X11      None      Read      ['4']
F11      None      Read      ['5']
X12      None      Read      ['5']
F12      None      Read      ['6']
X13      None      Read      ['6']
F20      None      Read      ['7']
X21      None      Read      ['7']
F21      None      Read      ['8']
X22      None      Read      ['8']
F22      None      Read      ['9']
X23      None      Read      ['9']
Labels for mode ASAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Labels for mode ALAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 5, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4]

1. DUMPED cp:  ['1', '10', '14', '16', '17', 'y12']
   Inputs & Coords:
     1 F00 (0, 0)
     1 X01 (0, 0)
     10 1 None
     10 2 None
     14 10 None
     14 11 None
     16 14 None
     16 15 None
     17 16 None
     17 9 None
     y12 17 None
   Pre inputs: [(0, 0), (0, 0)]
   
   Inputs  [[(0, 0), 2]]
   All psbl destinations:  [(6, 1)]
   Closest pe coord:  (6, 1)
   All schedules generated:  [[14, 15, 16, 17, 18, 19]]
   Final closest pe coord and schedule  (6, 1) [14, 15, 16, 17, 18, 19]
Searching for other cps with nodes  ['2', '9', '11', '15']

2. DUMPED cp:  ['5', '12', '15']
   Inputs & Coords:
     5 F11 (0, 4)
     5 X12 (0, 4)
     12 5 None
     12 6 None
     15 12 None
     15 13 None
   Pre inputs: [(0, 4), (0, 4)]
   
   Inputs  [[(0, 4), 2]]
   All psbl destinations:  [(3, 7), (3, 7)]
   Closest pe coord:  (3, 7)
   All schedules generated:  [[12, 13, 14], [12, 13, 14]]
   Final closest pe coord and schedule  (3, 7) [12, 13, 14]
Searching for other cps with nodes  ['2', '6', '9', '11', '13']

3. DUMPED cp:  ['3', '11']
   Inputs & Coords:
     3 F02 (0, 2)
     3 X03 (0, 2)
     11 3 None
     11 4 None
   Pre inputs: [(0, 2), (0, 2)]
   
   Inputs  [[(0, 2), 2]]
   All psbl destinations:  [(5, 6), (4, 7)]
   Closest pe coord:  (5, 6)
   All schedules generated:  [[18, 19], [18, 19]]
   Final closest pe coord and schedule  (5, 6) [18, 19]
Searching for other cps with nodes  ['2', '4', '6', '9', '13']

4. DUMPED cp:  ['7', '13']
   Inputs & Coords:
     7 F20 (1, 1)
     7 X21 (1, 1)
     13 7 None
     13 8 None
   Pre inputs: [(1, 1), (1, 1)]
   
   Inputs  [[(1, 1), 2]]
   All psbl destinations:  [(6, 2)]
   Closest pe coord:  (6, 2)
   All schedules generated:  [[12, 13]]
   Final closest pe coord and schedule  (6, 2) [12, 13]
Searching for other cps with nodes  ['2', '4', '6', '8', '9']

5. DUMPED cp:  ['2']
   Inputs & Coords:
     2 F01 (0, 1)
     2 X02 (0, 1)
   Pre inputs: [(0, 1), (0, 1)]
   
   Inputs  [[(0, 1), 2]]
   All psbl destinations:  [(6, 3)]
   Closest pe coord:  (6, 3)
   All schedules generated:  [[16]]
   Final closest pe coord and schedule  (6, 3) [16]
Searching for other cps with nodes  ['4', '6', '8', '9']

6. DUMPED cp:  ['4']
   Inputs & Coords:
     4 F10 (0, 3)
     4 X11 (0, 3)
   Pre inputs: [(0, 3), (0, 3)]
   
   Inputs  [[(0, 3), 2]]
   All psbl destinations:  [(4, 7), (4, 7)]
   Closest pe coord:  (4, 7)
   All schedules generated:  [[16], [16]]
   Final closest pe coord and schedule  (4, 7) [16]
Searching for other cps with nodes  ['6', '8', '9']

7. DUMPED cp:  ['6']
   Inputs & Coords:
     6 F12 (1, 0)
     6 X13 (1, 0)
   Pre inputs: [(1, 0), (1, 0)]
   
   Inputs  [[(1, 0), 2]]
   All psbl destinations:  [(6, 4)]
   Closest pe coord:  (6, 4)
   All schedules generated:  [[18]]
   Final closest pe coord and schedule  (6, 4) [18]
Searching for other cps with nodes  ['8', '9']

8. DUMPED cp:  ['8']
   Inputs & Coords:
     8 F21 (1, 2)
     8 X22 (1, 2)
   Pre inputs: [(1, 2), (1, 2)]
   
   Inputs  [[(1, 2), 2]]
   All psbl destinations:  [(6, 5)]
   Closest pe coord:  (6, 5)
   All schedules generated:  [[16]]
   Final closest pe coord and schedule  (6, 5) [16]
Searching for other cps with nodes  ['9']

9. DUMPED cp:  ['9']
   Inputs & Coords:
     9 F22 (1, 3)
     9 X23 (1, 3)
   Pre inputs: [(1, 3), (1, 3)]
   
   Inputs  [[(1, 3), 2]]
   All psbl destinations:  [(5, 7), (5, 7)]
   Closest pe coord:  (5, 7)
   All schedules generated:  [[16], [16]]
   Final closest pe coord and schedule  (5, 7) [16]
Searching for other cps with nodes  []

Input allocation by PEs:
(0, 0)  --->  ['F00', 'X01']
(0, 1)  --->  ['F01', 'X02']
(0, 2)  --->  ['F02', 'X03']
(0, 3)  --->  ['F10', 'X11']
(0, 4)  --->  ['F11', 'X12']
(1, 0)  --->  ['F12', 'X13']
(1, 1)  --->  ['F20', 'X21']
(1, 2)  --->  ['F21', 'X22']
(1, 3)  --->  ['F22', 'X23']

Final results before rescheduling (node.name, node.sched) by PEs: 
(6, 1)  --->  [('1', 14), ('10', 15), ('14', 16), ('16', 17), ('17', 18), ('y12', 19)]
(3, 7)  --->  [('5', 12), ('12', 13), ('15', 14)]
(5, 6)  --->  [('3', 18), ('11', 19)]
(6, 2)  --->  [('7', 12), ('13', 13)]
(6, 3)  --->  [('2', 16)]
(4, 7)  --->  [('4', 16)]
(6, 4)  --->  [('6', 18)]
(6, 5)  --->  [('8', 16)]
(5, 7)  --->  [('9', 16)]


RESCHEDULING
###### 8
     Pred 1 entered:  F21
     Check for pred "F21" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13', 'F22', 'X21', 'F21', 'X21', 'F21', 'X22']
     Walked coords  [(1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (6, 2), (6, 3), (6, 4), (6, 5)]
     1.0 Inputs are send from pred at step  18
     1.3 Putting inputs to DPR-X directly at node at step  28
     Pred 2 entered:  X22
     Check for pred "X22" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13', 'F22', 'X21', 'F21', 'X21', 'F21', 'X22']
     Walked coords  [(1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (6, 2), (6, 3), (6, 4), (6, 5)]
     1.0 Inputs are send from pred at step  36
     1.3 Putting inputs to DPR-X directly at node at step  46
     3.0 Arithmetic op is done at step  47
     4.2 Saving results to own MCLM at step  50
     (6, 5) ---> [[], [49], [47], [28, 46, 48], [55, 27, 45]]
###### 7
     Pred 1 entered:  F20
     Check for pred "F20" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12', 'F21', 'X20', 'F20', 'X20', 'F20', 'X21']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (6, 2)]
     1.0 Inputs are send from pred at step  40
     1.3 Putting inputs to DPR-X directly at node at step  48
     Pred 2 entered:  X21
     Check for pred "X21" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12', 'F21', 'X20', 'F20', 'X20', 'F20', 'X21']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (6, 2)]
     1.0 Inputs are send from pred at step  48
     1.3 Putting inputs to DPR-X directly at node at step  56
     3.0 Arithmetic op is done at step  57
     4.0 ---Notification is changed for 13 1
     4.0 Saving results to DPR2 directly at step  58
     (6, 2) ---> [[], [], [57], [48, 56, 58], [52, 24, 42, 47, 55]]
###### 6
     Pred 1 entered:  F12
     Check for pred "F12" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11', 'X11', 'F20', 'F12', 'X12', 'F12', 'X13']
     Walked coords  [(1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (6, 1), (6, 2), (6, 3), (6, 4)]
     1.0 Inputs are send from pred at step  41
     1.3 Putting inputs to DPR-X directly at node at step  52
     Pred 2 entered:  X13
     Check for pred "X13" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11', 'X11', 'F20', 'F12', 'X12', 'F12', 'X13']
     Walked coords  [(1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (6, 1), (6, 2), (6, 3), (6, 4)]
     1.0 Inputs are send from pred at step  45
     1.3 Putting inputs to DPR-X directly at node at step  56
     3.0 Arithmetic op is done at step  57
     4.2 Saving results to own MCLM at step  60
     (6, 4) ---> [[], [59], [57], [52, 56, 58], [54, 26, 44, 51, 55]]
###### 5
     Pred 1 entered:  F11
     Check for pred "F11" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03', 'X10', 'F12', 'F11', 'X11', 'F11', 'X12']
     Walked coords  [(0, 4), (1, 4), (2, 4), (3, 4), (3, 5), (3, 6), (3, 7)]
     1.0 Inputs are send from pred at step  31
     1.3 Putting inputs to DPR-X directly at node at step  39
     Pred 2 entered:  X12
     Check for pred "X12" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03', 'X10', 'F12', 'F11', 'X11', 'F11', 'X12']
     Walked coords  [(0, 4), (1, 4), (2, 4), (3, 4), (3, 5), (3, 6), (3, 7)]
     1.0 Inputs are send from pred at step  38
     1.3 Putting inputs to DPR-X directly at node at step  46
     3.0 Arithmetic op is done at step  47
     4.0 ---Notification is changed for 12 1
     4.0 Saving results to DPR2 directly at step  48
     (3, 7) ---> [[], [], [47], [39, 46, 48], [60, 53, 72, 87, 21, 38, 45]]
###### 4
     Pred 1 entered:  F10
     Check for pred "F10" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02', 'F10', 'F11', 'F10', 'X10', 'F10', 'X11']
     Walked coords  [(0, 3), (1, 3), (2, 3), (3, 3), (4, 3), (4, 4), (4, 5), (4, 6), (4, 7)]
     1.0 Inputs are send from pred at step  38
     1.3 Putting inputs to DPR-X directly at node at step  48
     Pred 2 entered:  X11
     Check for pred "X11" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02', 'F10', 'F11', 'F10', 'X10', 'F10', 'X11']
     Walked coords  [(0, 3), (1, 3), (2, 3), (3, 3), (4, 3), (4, 4), (4, 5), (4, 6), (4, 7)]
     1.0 Inputs are send from pred at step  44
     1.3 Putting inputs to DPR-X directly at node at step  54
     3.0 Arithmetic op is done at step  55
     4.2 Saving results to own MCLM at step  58
     (4, 7) ---> [[], [57], [55], [48, 54, 56], [59, 71, 88, 22, 47, 53]]
###### 3
     Pred 1 entered:  F02
     Check for pred "F02" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01', 'F02', 'X01', 'F02', 'X02', 'F02', 'X03']
     Walked coords  [(0, 2), (1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (5, 3), (5, 4), (5, 5), (5, 6)]
     1.0 Inputs are send from pred at step  36
     1.3 Putting inputs to DPR-X directly at node at step  47
     Pred 2 entered:  X03
     Check for pred "X03" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01', 'F02', 'X01', 'F02', 'X02', 'F02', 'X03']
     Walked coords  [(0, 2), (1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (5, 3), (5, 4), (5, 5), (5, 6)]
     1.0 Inputs are send from pred at step  43
     1.3 Putting inputs to DPR-X directly at node at step  54
     3.0 Arithmetic op is done at step  55
     4.0 ---Notification is changed for 11 1
     4.0 Saving results to DPR2 directly at step  56
     (5, 6) ---> [[], [], [55], [47, 54, 56], [67, 86, 48, 69, 68, 90, 24, 46, 53]]
###### 2
     Pred 1 entered:  F01
     Check for pred "F01" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02', 'F01', 'X00', 'F01', 'X01', 'F01', 'X02']
     Walked coords  [(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (6, 2), (6, 3)]
     1.0 Inputs are send from pred at step  50
     1.3 Putting inputs to DPR-X directly at node at step  60
     Pred 2 entered:  X02
     Check for pred "X02" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02', 'F01', 'X00', 'F01', 'X01', 'F01', 'X02']
     Walked coords  [(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (6, 2), (6, 3)]
     1.0 Inputs are send from pred at step  52
     1.3 Putting inputs to DPR-X directly at node at step  62
     3.0 Arithmetic op is done at step  63
     4.2 Saving results to own MCLM at step  66
     (6, 3) ---> [[], [65], [63], [60, 62, 64], [53, 25, 43, 50, 54, 59, 61]]
###### 1
     Pred 1 entered:  F00
     Check for pred "F00" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0', 'F00', 'X00', 'F00', 'X01']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (6, 1)]
     1.0 Inputs are send from pred at step  61
     1.3 Putting inputs to DPR-X directly at node at step  70
     Pred 2 entered:  X01
     Check for pred "X01" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0', 'F00', 'X00', 'F00', 'X01']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (6, 1)]
     1.0 Inputs are send from pred at step  63
     1.3 Putting inputs to DPR-X directly at node at step  72
     3.0 Arithmetic op is done at step  73
     4.0 ---Notification is changed for 10 1
     4.0 Saving results to DPR2 directly at step  74
     (6, 1) ---> [[], [], [73], [70, 72, 74], [51, 46, 54, 48, 52, 57, 59, 69, 71]]
###### 13
     Pred 1 entered:  7
     Pred 2 entered:  8
     Check for pred "8" =====> in (6, 5) ['8']
     Walked coords  [(6, 5), (6, 4), (6, 3), (6, 2)]
     1.0 Inputs are send from pred at step  55
     1.2 Putting inputs to DPR1 directly at node at step  60
     3.0 Arithmetic op is done at step  61
     4.2 Saving results to own MCLM at step  64
     (6, 2) ---> [[], [63], [57, 61], [48, 56, 58, 60, 62], [52, 24, 42, 47, 55, 49, 53, 58, 60, 59]]
###### 12
     Pred 1 entered:  5
     Pred 2 entered:  6
     Check for pred "6" =====> in (6, 4) ['6']
     Walked coords  [(6, 4), (6, 5), (6, 6), (6, 7), (5, 7), (4, 7), (3, 7)]
     1.0 Inputs are send from pred at step  63
     1.2 Putting inputs to DPR1 directly at node at step  71
     3.0 Arithmetic op is done at step  72
     4.0 ---Notification is changed for 15 1
     4.0 Saving results to DPR2 directly at step  73
     (3, 7) ---> [[], [], [47, 72], [39, 46, 48, 71, 73], [60, 53, 72, 87, 21, 38, 45, 70]]
###### 11
     Pred 1 entered:  3
     Pred 2 entered:  4
     Check for pred "4" =====> in (4, 7) ['4']
     Walked coords  [(4, 7), (5, 7), (5, 6)]
     1.0 Inputs are send from pred at step  61
     1.2 Putting inputs to DPR1 directly at node at step  65
     3.0 Arithmetic op is done at step  66
     4.2 Saving results to own MCLM at step  69
     (5, 6) ---> [[], [68], [55, 66], [47, 54, 56, 65, 67], [67, 86, 48, 69, 68, 90, 24, 46, 53, 64]]
###### 10
     Pred 1 entered:  1
     Pred 2 entered:  2
     Check for pred "2" =====> in (6, 3) ['2']
     Walked coords  [(6, 3), (6, 2), (6, 1)]
     1.0 Inputs are send from pred at step  69
     1.2 Putting inputs to DPR1 directly at node at step  73
     3.0 Arithmetic op is done at step  75
     4.0 ---Notification is changed for 14 1
     4.0 Saving results to DPR2 directly at step  76
     (6, 1) ---> [[], [], [73, 75], [70, 72, 74, 73, 76], [51, 46, 54, 48, 52, 57, 59, 69, 71, 72]]
###### 15
     Pred 1 entered:  12
     Pred 2 entered:  13
     Check for pred "13" =====> in (6, 2) ['13']
     Walked coords  [(6, 2), (6, 3), (6, 4), (6, 5), (6, 6), (6, 7), (5, 7), (4, 7), (3, 7)]
     1.0 Inputs are send from pred at step  67
     1.2 Putting inputs to DPR1 directly at node at step  77
     3.0 Arithmetic op is done at step  78
     4.2 Saving results to own MCLM at step  81
     (3, 7) ---> [[], [80], [47, 72, 78], [39, 46, 48, 71, 73, 77, 79], [60, 53, 72, 87, 21, 38, 45, 70, 76]]
###### 14
     Pred 1 entered:  10
     Pred 2 entered:  11
     Check for pred "11" =====> in (5, 6) ['11']
     Walked coords  [(5, 6), (6, 6), (6, 5), (6, 4), (6, 3), (6, 2), (6, 1)]
     1.0 Inputs are send from pred at step  72
     1.2 Putting inputs to DPR1 directly at node at step  80
     3.0 Arithmetic op is done at step  81
     4.0 ---Notification is changed for 16 1
     4.0 Saving results to DPR2 directly at step  82
     (6, 1) ---> [[], [], [73, 75, 81], [70, 72, 74, 73, 76, 80, 82], [51, 46, 54, 48, 52, 57, 59, 69, 71, 72, 79]]
###### 9
     Pred 1 entered:  F22
     Check for pred "F22" =====> in (1, 3) ['15', 'F22', 'X22', 'F22', 'X23']
     Walked coords  [(1, 3), (2, 3), (3, 3), (4, 3), (5, 3), (5, 4), (5, 5), (5, 6), (5, 7)]
     1.0 Inputs are send from pred at step  7
     1.3 Putting inputs to DPR-X directly at node at step  17
     Pred 2 entered:  X23
     Check for pred "X23" =====> in (1, 3) ['15', 'F22', 'X22', 'F22', 'X23']
     Walked coords  [(1, 3), (2, 3), (3, 3), (4, 3), (5, 3), (5, 4), (5, 5), (5, 6), (5, 7)]
     1.0 Inputs are send from pred at step  10
     1.3 Putting inputs to DPR-X directly at node at step  20
     3.0 Arithmetic op is done at step  21
     4.2 Saving results to own MCLM at step  24
     (5, 7) ---> [[], [23], [21], [17, 20, 22], [58, 70, 89, 23, 68, 63, 74, 16, 19]]
###### 16
     Pred 1 entered:  14
     Pred 2 entered:  15
     Check for pred "15" =====> in (3, 7) ['15']
     Walked coords  [(3, 7), (4, 7), (5, 7), (6, 7), (6, 6), (6, 5), (6, 4), (6, 3), (6, 2), (6, 1)]
     1.0 Inputs are send from pred at step  84
     1.2 Putting inputs to DPR1 directly at node at step  95
     3.0 Arithmetic op is done at step  96
     4.0 ---Notification is changed for 17 1
     4.0 Saving results to DPR2 directly at step  97
     (6, 1) ---> [[], [], [73, 75, 81, 96], [70, 72, 74, 73, 76, 80, 82, 95, 97], [51, 46, 54, 48, 52, 57, 59, 69, 71, 72, 79, 94]]
###### 17
     Pred 1 entered:  16
     Pred 2 entered:  9
     Check for pred "9" =====> in (5, 7) ['9']
     Walked coords  [(5, 7), (6, 7), (6, 6), (6, 5), (6, 4), (6, 3), (6, 2), (6, 1)]
     1.0 Inputs are send from pred at step  27
     1.2 Putting inputs to DPR1 directly at node at step  36
     3.0 Arithmetic op is done at step  98
     4.2 Saving results to own MCLM at step  101
     (6, 1) ---> [[], [100], [73, 75, 81, 96, 98], [70, 72, 74, 73, 76, 80, 82, 95, 97, 36, 99], [51, 46, 54, 48, 52, 57, 59, 69, 71, 72, 79, 94, 35]]
###### y12
     Pred 1 entered:  17
     1.4 This is actually last node at step  101

Final results after rescheduling (node.name, node.sched): by PEs
(6, 1)  --->  [('1', 74), ('10', 76), ('14', 82), ('16', 97), ('17', 101), ('y12', 101)]
(3, 7)  --->  [('5', 48), ('12', 73), ('15', 81)]
(5, 6)  --->  [('3', 56), ('11', 69)]
(6, 2)  --->  [('7', 58), ('13', 64)]
(6, 3)  --->  [('2', 66)]
(4, 7)  --->  [('4', 58)]
(6, 4)  --->  [('6', 60)]
(6, 5)  --->  [('8', 50)]
(5, 7)  --->  [('9', 24)]

PE map 
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Node scheds and CCM commands:
1  --->  [(1, 0), ['CCM1', 1, 0, 'PE1'], [(0, 4), ['CCM1', 1, 1, 'PE1']], [(0, 0), ['CCM1', 1, 1, 'PE1']], [(0, 3), ['CCM1', 1, 1, 'PE1']], [(0, 2), ['CCM1', 1, 1, 'PE1']], [(0, 1), ['CCM1', 1, 1, 'PE1']], [(1, 1), ['CCM1', 1, 0, 'PE1']], [(1, 2), ['CCM1', 1, 1, 'PE1']], [(1, 3), ['CCM1', 1, 1, 'PE1']]]
2  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'DPR1']], [(0, 2), ['CCM1', 2, 0, 'PE1']], [(0, 1), ['CCM3', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
3  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(1, 0), ['CCM1', 3, 1, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 3, 0, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 3, 1, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 3, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM1', 3, 2, 'PE1']]]
6  --->  [(2, 0), ['CCM6', 'DPR1'], [(0, 3), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
4  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM1', 4, 0, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
5  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(0, 4), ['CCM3', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 5, 1, 'PE1']], [(0, 1), ['CCM1', 5, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 5, 3, 'PE1']], [(0, 2), ['CCM1', 5, 0, 'PE1']], [(1, 3), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM1', 5, 1, 'PE1']]]
8  --->  [(2, 0), ['CCM6', 'DPR2'], [(0, 3), ['CCM6', 'DPR2']], [(0, 4), ['CCM5', 'DPR3']], [(0, 2), ['CCM6', 'DPR2']], [(1, 1), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM1', 8, 3, 'PE1']], [(0, 1), ['CCM3', 'PERouter']], [(1, 3), ['CCM1', 8, 4, 'PE1']]]
9  --->  [(2, 0), ['CCM4', '*'], [(0, 3), ['CCM4', '*']], [(0, 4), ['CCM2', 'MCLM1']], [(0, 2), ['CCM4', '*']], [(1, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 9, 0, 'PE1']], [(1, 2), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM3', 'PERouter']]]
10  --->  [(2, 0), ['CCM5', 'DPR3'], [(0, 3), ['CCM5', 'DPR2']], [(0, 2), ['CCM5', 'DPR2']], [(1, 1), ['CCM4', '*']], [(0, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'DPR1']], [(0, 0), ['CCM1', 10, 1, 'PE1']], [(1, 2), ['CCM5', 'DPR3']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 10, 3, 'PE1']], [(0, 2), ['CCM1', 10, 4, 'PE1']], [(1, 2), ['CCM1', 10, 2, 'PE1']], [(2, 7), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'NodeRouter']]]
11  --->  [(2, 0), ['CCM2', 'MCLM1'], [(1, 1), ['CCM5', 'DPR3']], [(0, 1), ['CCM4', '*']], [(1, 0), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'DPR2']], [(0, 4), ['CCM1', 11, 2, 'PE1']], [(1, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM1', 11, 3, 'PE1']], [(3, 0), ['CCM6', 'DPR1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']]]
7  --->  [(0, 4), ['CCM4', '*'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 7, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 7, 1, 'PE1']], [(3, 2), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'NodeRouter']]]
12  --->  [(1, 1), ['CCM2', 'MCLM1'], [(0, 1), ['CCM5', 'DPR2']], [(1, 0), ['CCM6', 'DPR2']], [(0, 0), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 4), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 12, 0, 'PE1']], [(1, 2), ['CCM1', 12, 1, 'PE1']], [(2, 7), ['CCM6', 'DPR2']]]
13  --->  [(1, 0), ['CCM4', '*'], [(0, 0), ['CCM5', 'DPR2']], [(2, 0), ['CCM1', 13, 0, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 13, 4, 'PE1']], [(0, 3), ['CCM1', 13, 4, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(2, 7), ['CCM4', '*']]]
14  --->  [(1, 0), ['CCM5', 'DPR3'], [(2, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 14, 2, 'PE1']], [(1, 2), ['CCM1', 14, 0, 'PE1']], [(1, 0), ['CCM1', 14, 1, 'PE1']], [(2, 4), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 14, 6, 'PE1']], [(0, 0), ['CCM1', 14, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']], [(2, 7), ['CCM5', 'DPR3']]]
15  --->  [(1, 0), ['CCM2', 'MCLM1'], [(2, 0), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 15, 3, 'PE1']], [(0, 3), ['CCM1', 15, 3, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(2, 7), ['CCM2', 'MCLM1']]]
22  --->  [(0, 3), ['CCM6', 'DPR1'], [(0, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'DPR2']], [(3, 0), ['CCM5', 'DPR2']], [(2, 4), ['CCM2', 'MCLM1']], [(1, 4), ['CCM1', 22, 0, 'PE1']], [(3, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(4, 5), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(5, 7), ['CCM5', 'DPR3']]]
23  --->  [(0, 3), ['CCM4', '+'], [(0, 0), ['CCM4', '+']], [(3, 1), ['CCM4', '*']], [(1, 4), ['CCM3', 'PERouter']], [(3, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(4, 4), ['CCM6', 'DPR1']], [(3, 4), ['CCM6', 'DPR1']], [(4, 2), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 1), ['CCM6', 'DPR2']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 23, 3, 'PE1']], [(1, 0), ['CCM1', 23, 3, 'PE1']], [(0, 4), ['CCM1', 23, 3, 'PE1']], [(1, 2), ['CCM1', 23, 6, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(5, 7), ['CCM2', 'MCLM1']]]
24  --->  [(0, 3), ['CCM5', 'DPR3'], [(0, 0), ['CCM5', 'DPR2']], [(0, 1), ['CCM1', 24, 2, 'PE1']], [(3, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 24, 1, 'PE1']], [(2, 3), ['CCM6', 'DPR1']], [(2, 4), ['CCM1', 24, 0, 'PE1']], [(1, 4), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM5', 'DPR3']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM1', 24, 3, 'PE1']], [(0, 2), ['CCM1', 24, 7, 'PE1']], [(1, 2), ['CCM3', 'PERouter']]]
25  --->  [(0, 3), ['CCM2', 'MCLM1'], [(0, 1), ['CCM3', 'PERouter']], [(3, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 4), ['CCM3', 'PERouter']], [(4, 4), ['CCM6', 'DPR2']], [(3, 4), ['CCM6', 'DPR2']], [(4, 2), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'DPR2']], [(1, 5), ['CCM6', 'DPR1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 6), ['CCM6', 'DPR2']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(5, 7), ['CCM1', 25, 0, 'PE1']]]
17  --->  [(0, 2), ['CCM6', 'DPR1'], [(1, 0), ['CCM1', 17, 2, 'PE1']], [(3, 1), ['CCM6', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 4), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(3, 2), ['CCM4', '*']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 17, 6, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 17, 6, 'PE1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 7), ['CCM1', 17, 0, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(5, 7), ['CCM6', 'DPR1']]]
18  --->  [(0, 2), ['CCM4', '+'], [(1, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR2']], [(1, 4), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(3, 2), ['CCM5', 'DPR3']], [(1, 1), ['CCM1', 18, 3, 'PE1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 18, 1, 'PE1']], [(2, 7), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']]]
19  --->  [(0, 2), ['CCM5', 'DPR2'], [(0, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(2, 4), ['CCM6', 'DPR2']], [(1, 3), ['CCM4', '*']], [(1, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 19, 3, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM1', 19, 7, 'PE1']], [(0, 2), ['CCM1', 19, 7, 'PE1']], [(2, 7), ['CCM6', 'NodeRouter']]]
16  --->  [(1, 1), ['CCM6', 'NodeRouter'], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 16, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 16, 0, 'PE1']], [(3, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 16, 1, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 16, 7, 'PE1']]]
20  --->  [(0, 1), ['CCM4', '+'], [(3, 0), ['CCM6', 'DPR2']], [(2, 4), ['CCM4', '*']], [(1, 3), ['CCM5', 'DPR2']], [(1, 4), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR1']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(5, 7), ['CCM6', 'DPR2']]]
21  --->  [(0, 1), ['CCM5', 'DPR3'], [(0, 0), ['CCM6', 'DPR1']], [(3, 0), ['CCM4', '*']], [(2, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM1', 21, 0, 'PE1']], [(1, 1), ['CCM1', 21, 6, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 21, 6, 'PE1']], [(0, 1), ['CCM1', 21, 1, 'PE1']], [(1, 2), ['CCM1', 21, 4, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 21, 9, 'PE1']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 21, 10, 'PE1']], [(5, 7), ['CCM4', '*']]]
27  --->  [(0, 3), ['CCM1', 27, 2, 'PE1'], [(0, 0), ['CCM3', 'PERouter']], [(3, 1), ['CCM1', 27, 0, 'PE1']], [(2, 1), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR1']], [(4, 4), ['CCM5', 'DPR3']], [(3, 4), ['CCM5', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(4, 2), ['CCM1', 27, 0, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']], [(5, 7), ['CCM6', 'NodeRouter']]]
28  --->  [(0, 3), ['CCM3', 'PERouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 1), ['CCM3', 'PERouter']], [(4, 0), ['CCM6', 'DPR2']], [(4, 4), ['CCM2', 'MCLM1']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM3', 'PERouter']], [(1, 5), ['CCM6', 'DPR2']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 28, 6, 'PE1']], [(1, 0), ['CCM1', 28, 9, 'PE1']], [(0, 7), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'NodeRouter']], [(5, 3), ['CCM6', 'DPR1']], [(6, 5), ['CCM6', 'DPR1']]]
29  --->  [(0, 3), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM6', 'DPR1']], [(4, 0), ['CCM4', '*']], [(0, 5), ['CCM6', 'DPR1']], [(4, 2), ['CCM6', 'NodeRouter']], [(1, 5), ['CCM4', '*']], [(1, 1), ['CCM1', 29, 8, 'PE1']], [(0, 3), ['CCM1', 29, 7, 'PE1']], [(0, 2), ['CCM1', 29, 6, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM1', 29, 0, 'PE1']], [(0, 4), ['CCM1', 29, 9, 'PE1']]]
32  --->  [(0, 2), ['CCM6', 'DPR1'], [(2, 2), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM6', 'DPR1']], [(1, 3), ['CCM5', 'DPR2']], [(4, 3), ['CCM5', 'DPR3']], [(4, 4), ['CCM6', 'NodeRouter']], [(5, 2), ['CCM6', 'DPR1']], [(5, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 6), ['CCM4', '*']], [(1, 1), ['CCM1', 32, 9, 'PE1']], [(0, 3), ['CCM1', 32, 7, 'PE1']], [(3, 6), ['CCM6', 'DPR2']]]
33  --->  [(0, 2), ['CCM4', '+'], [(2, 2), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 33, 1, 'PE1']], [(3, 0), ['CCM4', '+']], [(4, 3), ['CCM2', 'MCLM1']], [(0, 6), ['CCM5', 'DPR2']], [(2, 5), ['CCM6', 'DPR1']], [(4, 5), ['CCM6', 'DPR2']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 33, 10, 'PE1']], [(0, 7), ['CCM6', 'DPR2']], [(0, 3), ['CCM3', 'PERouter']], [(3, 6), ['CCM4', '*']]]
34  --->  [(0, 2), ['CCM5', 'DPR3'], [(2, 2), ['CCM5', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM5', 'DPR3']], [(4, 1), ['CCM6', 'DPR1']], [(1, 5), ['CCM1', 34, 0, 'PE1']], [(4, 5), ['CCM4', '*']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 7), ['CCM4', '*']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 34, 10, 'PE1']], [(3, 6), ['CCM5', 'DPR2']], [(1, 2), ['CCM1', 34, 10, 'PE1']], [(0, 2), ['CCM1', 34, 7, 'PE1']]]
35  --->  [(0, 2), ['CCM2', 'MCLM1'], [(2, 3), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 0), ['CCM2', 'MCLM1']], [(2, 2), ['CCM4', '+']], [(4, 1), ['CCM4', '*']], [(0, 0), ['CCM1', 35, 0, 'PE1']], [(4, 3), ['CCM1', 35, 0, 'PE1']], [(3, 4), ['CCM6', 'DPR1']], [(1, 5), ['CCM3', 'PERouter']], [(4, 5), ['CCM5', 'DPR3']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 7), ['CCM5', 'DPR2']], [(0, 3), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']]]
26  --->  [(0, 1), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 26, 1, 'PE1']], [(2, 4), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(4, 4), ['CCM4', '*']], [(3, 4), ['CCM4', '*']], [(0, 1), ['CCM1', 26, 0, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 26, 7, 'PE1']], [(0, 4), ['CCM1', 26, 10, 'PE1']], [(5, 7), ['CCM3', 'PERouter']]]
30  --->  [(0, 0), ['CCM4', '+'], [(1, 3), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM5', 'DPR2']], [(0, 5), ['CCM4', '*']], [(4, 4), ['CCM1', 30, 0, 'PE1']], [(1, 5), ['CCM5', 'DPR3']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 30, 6, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(3, 6), ['CCM6', 'DPR1']], [(0, 1), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']]]
31  --->  [(0, 0), ['CCM5', 'DPR2'], [(0, 0), ['CCM1', 31, 0, 'PE1']], [(1, 3), ['CCM4', '+']], [(4, 3), ['CCM4', '*']], [(0, 5), ['CCM5', 'DPR2']], [(4, 4), ['CCM3', 'PERouter']], [(1, 5), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 6), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM6', 'NodeRouter']]]
37  --->  [(0, 2), ['CCM1', 37, 2, 'PE1'], [(2, 3), ['CCM5', 'DPR3']], [(2, 2), ['CCM2', 'MCLM1']], [(3, 0), ['CCM1', 37, 0, 'PE1']], [(4, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 37, 1, 'PE1']], [(4, 3), ['CCM6', 'NodeRouter']], [(3, 4), ['CCM5', 'DPR2']], [(1, 6), ['CCM6', 'DPR1']], [(4, 6), ['CCM6', 'DPR1']], [(6, 0), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']]]
38  --->  [(0, 2), ['CCM3', 'PERouter'], [(2, 3), ['CCM2', 'MCLM1']], [(2, 1), ['CCM6', 'DPR1']], [(3, 0), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 5), ['CCM6', 'DPR1']], [(5, 2), ['CCM6', 'DPR2']], [(2, 5), ['CCM6', 'DPR2']], [(4, 5), ['CCM1', 38, 0, 'PE1']], [(1, 1), ['CCM1', 38, 9, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']]]
39  --->  [(0, 2), ['CCM6', 'NodeRouter'], [(3, 0), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM1', 39, 0, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM4', '+']], [(4, 1), ['CCM1', 39, 0, 'PE1']], [(5, 2), ['CCM4', '*']], [(2, 5), ['CCM4', '*']], [(4, 5), ['CCM3', 'PERouter']], [(4, 6), ['CCM6', 'DPR2']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 39, 9, 'PE1']], [(3, 7), ['CCM6', 'DPR1']]]
43  --->  [(0, 0), ['CCM6', 'DPR1'], [(4, 0), ['CCM4', '+']], [(0, 5), ['CCM1', 43, 0, 'PE1']], [(2, 6), ['CCM5', 'DPR3']], [(0, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM1', 43, 0, 'PE1']], [(5, 4), ['CCM6', 'DPR1']], [(6, 0), ['CCM4', '*']], [(1, 7), ['CCM6', 'DPR2']], [(1, 0), ['CCM1', 43, 12, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']]]
44  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(4, 0), ['CCM5', 'DPR3']], [(0, 5), ['CCM3', 'PERouter']], [(2, 6), ['CCM2', 'MCLM1']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 44, 8, 'PE1']], [(5, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 44, 8, 'PE1']], [(6, 0), ['CCM5', 'DPR3']], [(1, 7), ['CCM4', '*']], [(4, 6), ['CCM1', 44, 0, 'PE1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']]]
45  --->  [(0, 0), ['CCM5', 'DPR2'], [(3, 3), ['CCM6', 'DPR1']], [(4, 0), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(6, 0), ['CCM2', 'MCLM1']], [(1, 7), ['CCM5', 'DPR3']], [(4, 6), ['CCM3', 'PERouter']], [(1, 0), ['CCM6', 'NodeRouter']]]
46  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM1', 46, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 7), ['CCM2', 'MCLM1']], [(0, 1), ['CCM1', 46, 10, 'PE1']], [(4, 6), ['CCM6', 'NodeRouter']], [(6, 5), ['CCM6', 'DPR2']], [(1, 1), ['CCM1', 46, 12, 'PE1']], [(3, 7), ['CCM6', 'DPR2']]]
47  --->  [(0, 0), ['CCM5', 'DPR3'], [(2, 1), ['CCM4', '+']], [(1, 3), ['CCM4', '+']], [(3, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM1', 47, 0, 'PE1']], [(2, 6), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(6, 0), ['CCM1', 47, 0, 'PE1']], [(6, 5), ['CCM4', '*']], [(1, 1), ['CCM3', 'PERouter']], [(3, 7), ['CCM4', '*']], [(5, 6), ['CCM6', 'DPR1']]]
48  --->  [(0, 0), ['CCM2', 'MCLM1'], [(2, 1), ['CCM5', 'DPR2']], [(1, 3), ['CCM5', 'DPR3']], [(3, 3), ['CCM4', '*']], [(4, 0), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 48, 1, 'PE1']], [(5, 1), ['CCM6', 'DPR1']], [(2, 6), ['CCM6', 'NodeRouter']], [(5, 0), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(6, 0), ['CCM3', 'PERouter']], [(1, 7), ['CCM1', 48, 0, 'PE1']], [(6, 5), ['CCM5', 'DPR3']], [(6, 2), ['CCM6', 'DPR1']], [(1, 1), ['CCM6', 'NodeRouter']], [(3, 7), ['CCM5', 'DPR2']], [(4, 7), ['CCM6', 'DPR1']], [(0, 1), ['CCM1', 48, 0, 'PE1']]]
36  --->  [(2, 3), ['CCM4', '*'], [(2, 2), ['CCM5', 'DPR3']], [(4, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM3', 'PERouter']], [(4, 3), ['CCM3', 'PERouter']], [(3, 4), ['CCM4', '+']], [(1, 5), ['CCM6', 'NodeRouter']], [(4, 5), ['CCM2', 'MCLM1']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 36, 12, 'PE1']], [(0, 3), ['CCM1', 36, 7, 'PE1']], [(0, 2), ['CCM6', 'NodeRouter']], [(6, 1), ['CCM6', 'DPR1']]]
40  --->  [(2, 1), ['CCM6', 'DPR2'], [(2, 3), ['CCM1', 40, 0, 'PE1']], [(2, 2), ['CCM3', 'PERouter']], [(0, 5), ['CCM5', 'DPR3']], [(4, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 40, 1, 'PE1']], [(2, 5), ['CCM5', 'DPR2']], [(4, 5), ['CCM6', 'NodeRouter']], [(4, 6), ['CCM4', '*']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']]]
41  --->  [(2, 1), ['CCM4', '*'], [(2, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM2', 'MCLM1']], [(4, 1), ['CCM6', 'NodeRouter']], [(5, 2), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 6), ['CCM6', 'DPR2']], [(4, 6), ['CCM5', 'DPR3']], [(1, 7), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 41, 12, 'PE1']]]
42  --->  [(2, 1), ['CCM5', 'DPR2'], [(2, 3), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']], [(0, 0), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM4', '*']], [(0, 1), ['CCM1', 42, 0, 'PE1']], [(4, 6), ['CCM2', 'MCLM1']], [(6, 0), ['CCM6', 'DPR2']], [(5, 5), ['CCM6', 'DPR1']], [(0, 3), ['CCM1', 42, 12, 'PE1']], [(0, 2), ['CCM3', 'PERouter']]]
49  --->  [(1, 3), ['CCM2', 'MCLM1'], [(2, 1), ['CCM4', '+']], [(3, 3), ['CCM5', 'DPR2']], [(4, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(6, 0), ['CCM6', 'NodeRouter']], [(1, 7), ['CCM3', 'PERouter']], [(6, 5), ['CCM2', 'MCLM1']], [(0, 1), ['CCM3', 'PERouter']]]
50  --->  [(2, 1), ['CCM5', 'DPR2'], [(3, 3), ['CCM4', '+']], [(5, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 50, 0, 'PE1']], [(1, 7), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 50, 12, 'PE1']]]
51  --->  [(1, 3), ['CCM1', 51, 0, 'PE1'], [(3, 3), ['CCM5', 'DPR2']], [(5, 1), ['CCM4', '*']], [(0, 0), ['CCM3', 'PERouter']], [(5, 4), ['CCM6', 'DPR1']], [(0, 1), ['CCM3', 'PERouter']]]
52  --->  [(1, 3), ['CCM3', 'PERouter'], [(3, 3), ['CCM6', 'DPR1']], [(5, 1), ['CCM5', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 52, 1, 'PE1']], [(0, 6), ['CCM6', 'DPR1']], [(6, 4), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']]]
53  --->  [(1, 3), ['CCM6', 'NodeRouter'], [(3, 3), ['CCM4', '+']], [(3, 5), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(5, 1), ['CCM4', '+']], [(0, 6), ['CCM4', '+']], [(6, 5), ['CCM1', 53, 0, 'PE1']]]
58  --->  [(2, 1), ['CCM6', 'DPR1'], [(3, 4), ['CCM5', 'DPR3']], [(3, 5), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(5, 4), ['CCM4', '+']], [(3, 6), ['CCM2', 'MCLM1']], [(6, 2), ['CCM5', 'DPR2']], [(6, 4), ['CCM5', 'DPR3']]]
59  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM2', 'MCLM1']], [(1, 6), ['CCM6', 'DPR2']], [(5, 0), ['CCM6', 'DPR1']], [(5, 1), ['CCM1', 59, 0, 'PE1']], [(5, 5), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(5, 4), ['CCM5', 'DPR3']], [(6, 4), ['CCM2', 'MCLM1']], [(0, 0), ['CCM1', 59, 0, 'PE1']], [(4, 7), ['CCM1', 59, 0, 'PE1']]]
60  --->  [(2, 1), ['CCM5', 'DPR2'], [(1, 6), ['CCM4', '*']], [(3, 5), ['CCM1', 60, 0, 'PE1']], [(5, 1), ['CCM3', 'PERouter']], [(5, 5), ['CCM4', '*']], [(5, 4), ['CCM2', 'MCLM1']], [(6, 3), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(6, 2), ['CCM6', 'DPR1']], [(4, 7), ['CCM3', 'PERouter']]]
61  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM1', 61, 0, 'PE1']], [(1, 6), ['CCM5', 'DPR3']], [(5, 0), ['CCM6', 'DPR2']], [(3, 5), ['CCM3', 'PERouter']], [(5, 1), ['CCM6', 'NodeRouter']], [(5, 5), ['CCM5', 'DPR3']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 61, 12, 'PE1']], [(6, 2), ['CCM4', '+']], [(6, 4), ['CCM1', 61, 0, 'PE1']], [(4, 7), ['CCM6', 'NodeRouter']]]
62  --->  [(2, 1), ['CCM5', 'DPR3'], [(3, 4), ['CCM3', 'PERouter']], [(1, 6), ['CCM2', 'MCLM1']], [(5, 0), ['CCM4', '*']], [(3, 5), ['CCM6', 'NodeRouter']], [(5, 5), ['CCM2', 'MCLM1']], [(6, 3), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(6, 2), ['CCM5', 'DPR3']], [(6, 4), ['CCM3', 'PERouter']]]
63  --->  [(2, 1), ['CCM2', 'MCLM1'], [(3, 4), ['CCM6', 'NodeRouter']], [(5, 0), ['CCM5', 'DPR2']], [(3, 6), ['CCM1', 63, 0, 'PE1']], [(6, 3), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(6, 2), ['CCM2', 'MCLM1']], [(6, 4), ['CCM6', 'NodeRouter']]]
56  --->  [(3, 4), ['CCM6', 'DPR1'], [(3, 5), ['CCM4', '*']], [(5, 4), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 6), ['CCM4', '+']], [(6, 2), ['CCM6', 'DPR2']], [(6, 4), ['CCM6', 'DPR2']], [(4, 7), ['CCM5', 'DPR3']], [(5, 6), ['CCM5', 'DPR2']]]
57  --->  [(3, 4), ['CCM4', '+'], [(3, 5), ['CCM5', 'DPR3']], [(5, 4), ['CCM5', 'DPR2']], [(0, 0), ['CCM1', 57, 10, 'PE1']], [(3, 6), ['CCM5', 'DPR3']], [(6, 2), ['CCM4', '*']], [(6, 4), ['CCM4', '*']], [(4, 7), ['CCM2', 'MCLM1']]]
54  --->  [(3, 3), ['CCM5', 'DPR2'], [(0, 0), ['CCM6', 'NodeRouter']], [(5, 1), ['CCM5', 'DPR3']], [(0, 6), ['CCM5', 'DPR2']], [(0, 0), ['CCM1', 54, 0, 'PE1']], [(4, 7), ['CCM6', 'DPR2']], [(5, 6), ['CCM6', 'DPR2']], [(6, 5), ['CCM3', 'PERouter']]]
66  --->  [(3, 3), ['CCM6', 'DPR1'], [(1, 6), ['CCM6', 'NodeRouter']], [(5, 3), ['CCM6', 'DPR1']], [(0, 7), ['CCM5', 'DPR2']], [(5, 5), ['CCM6', 'NodeRouter']], [(5, 4), ['CCM6', 'NodeRouter']], [(5, 6), ['CCM4', '+']], [(6, 2), ['CCM3', 'PERouter']]]
67  --->  [(3, 3), ['CCM4', '+'], [(5, 6), ['CCM5', 'DPR3']], [(6, 3), ['CCM1', 67, 0, 'PE1']], [(6, 2), ['CCM6', 'NodeRouter']]]
68  --->  [(3, 3), ['CCM5', 'DPR2'], [(5, 6), ['CCM2', 'MCLM1']], [(6, 3), ['CCM3', 'PERouter']]]
69  --->  [(3, 3), ['CCM4', '+'], [(5, 3), ['CCM6', 'DPR2']], [(6, 3), ['CCM6', 'NodeRouter']]]
70  --->  [(3, 3), ['CCM5', 'DPR3'], [(2, 5), ['CCM6', 'DPR1']], [(5, 3), ['CCM4', '*']], [(5, 3), ['CCM6', 'DPR1']], [(6, 1), ['CCM6', 'DPR1']], [(5, 6), ['CCM1', 70, 0, 'PE1']]]
71  --->  [(3, 3), ['CCM2', 'MCLM1'], [(2, 5), ['CCM4', '+']], [(5, 0), ['CCM6', 'DPR1']], [(5, 3), ['CCM5', 'DPR2']], [(3, 7), ['CCM6', 'DPR1']], [(5, 6), ['CCM3', 'PERouter']]]
55  --->  [(3, 5), ['CCM6', 'DPR2'], [(5, 1), ['CCM2', 'MCLM1']], [(5, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 6), ['CCM6', 'DPR1']], [(4, 7), ['CCM4', '*']], [(5, 6), ['CCM4', '*']], [(6, 5), ['CCM6', 'NodeRouter']]]
64  --->  [(1, 6), ['CCM1', 64, 0, 'PE1'], [(0, 7), ['CCM6', 'DPR1']], [(5, 5), ['CCM1', 64, 0, 'PE1']], [(5, 4), ['CCM1', 64, 0, 'PE1']], [(3, 6), ['CCM3', 'PERouter']], [(6, 3), ['CCM5', 'DPR3']]]
65  --->  [(1, 6), ['CCM3', 'PERouter'], [(0, 7), ['CCM4', '+']], [(5, 5), ['CCM3', 'PERouter']], [(5, 4), ['CCM3', 'PERouter']], [(3, 6), ['CCM6', 'NodeRouter']], [(6, 3), ['CCM2', 'MCLM1']], [(5, 6), ['CCM6', 'DPR1']], [(6, 2), ['CCM1', 65, 0, 'PE1']]]
72  --->  [(2, 5), ['CCM5', 'DPR3'], [(5, 0), ['CCM4', '+']], [(5, 3), ['CCM4', '+']], [(5, 3), ['CCM6', 'DPR1']], [(6, 1), ['CCM6', 'DPR2']], [(3, 7), ['CCM4', '+']], [(5, 6), ['CCM6', 'NodeRouter']]]
73  --->  [(2, 5), ['CCM2', 'MCLM1'], [(5, 0), ['CCM5', 'DPR2']], [(0, 6), ['CCM6', 'DPR1']], [(5, 3), ['CCM5', 'DPR2']], [(6, 1), ['CCM4', '*']], [(3, 7), ['CCM5', 'DPR2']], [(6, 1), ['CCM6', 'DPR1']]]
74  --->  [(0, 6), ['CCM4', '+'], [(5, 3), ['CCM4', '+']], [(6, 1), ['CCM5', 'DPR2']]]
75  --->  [(0, 6), ['CCM5', 'DPR3'], [(2, 5), ['CCM1', 75, 0, 'PE1']], [(5, 3), ['CCM5', 'DPR2']], [(6, 1), ['CCM4', '+']]]
76  --->  [(0, 6), ['CCM2', 'MCLM1'], [(2, 5), ['CCM3', 'PERouter']], [(0, 7), ['CCM6', 'DPR1']], [(6, 1), ['CCM5', 'DPR2']]]
77  --->  [(2, 5), ['CCM6', 'NodeRouter'], [(0, 7), ['CCM4', '+']], [(3, 7), ['CCM6', 'DPR1']]]
87  --->  [(5, 0), ['CCM6', 'DPR1']]
88  --->  [(5, 0), ['CCM4', '+']]
89  --->  [(5, 0), ['CCM5', 'DPR2']]
78  --->  [(0, 6), ['CCM1', 78, 0, 'PE1'], [(0, 7), ['CCM5', 'DPR3']], [(3, 7), ['CCM4', '+']]]
79  --->  [(0, 6), ['CCM3', 'PERouter'], [(0, 7), ['CCM2', 'MCLM1']], [(3, 7), ['CCM5', 'DPR3']]]
80  --->  [(0, 6), ['CCM6', 'NodeRouter'], [(3, 7), ['CCM2', 'MCLM1']], [(6, 1), ['CCM6', 'DPR1']]]
93  --->  [(5, 0), ['CCM6', 'DPR1']]
94  --->  [(5, 0), ['CCM4', '+'], [(5, 3), ['CCM6', 'DPR1']]]
95  --->  [(5, 0), ['CCM5', 'DPR2'], [(5, 3), ['CCM4', '+']], [(6, 1), ['CCM6', 'DPR1']]]
96  --->  [(5, 0), ['CCM4', '+'], [(5, 3), ['CCM5', 'DPR2']], [(6, 1), ['CCM4', '+']]]
97  --->  [(5, 0), ['CCM5', 'DPR3'], [(5, 3), ['CCM4', '+']], [(6, 1), ['CCM5', 'DPR2']]]
98  --->  [(5, 0), ['CCM2', 'MCLM1'], [(5, 3), ['CCM5', 'DPR3']], [(6, 1), ['CCM4', '+']]]
81  --->  [(0, 7), ['CCM1', 81, 0, 'PE1'], [(6, 1), ['CCM4', '+']]]
82  --->  [(0, 7), ['CCM3', 'PERouter'], [(6, 1), ['CCM5', 'DPR2']], [(3, 7), ['CCM1', 82, 0, 'PE1']]]
83  --->  [(0, 7), ['CCM6', 'NodeRouter'], [(3, 7), ['CCM3', 'PERouter']]]
99  --->  [(5, 3), ['CCM2', 'MCLM1'], [(6, 1), ['CCM5', 'DPR3']]]
84  --->  [(3, 7), ['CCM6', 'NodeRouter']]
100  --->  [(6, 1), ['CCM2', 'MCLM1']]

Router scheds and CCM commands:
4  --->  [(0, 1), (0, 2), [(2, 2), (3, 2)], [(2, 3), (2, 4)]]
5  --->  [(0, 1), (0, 3), [(1, 2), (1, 1)], [(2, 3), (2, 5)]]
6  --->  [(1, 0), (1, 1), [(2, 3), (2, 6)], [(2, 3), (2, 4)]]
8  --->  [(1, 1), (1, 0), [(2, 0), (3, 0)], [(1, 2), (1, 3)], [(2, 3), (2, 6)], [(2, 3), (3, 3)]]
16  --->  [(2, 1), (2, 2), [(1, 4), (2, 4)], [(1, 2), (3, 2)], [(2, 2), (4, 2)], [(2, 3), (5, 6)]]
17  --->  [(2, 1), (2, 3), [(1, 1), (1, 0)], [(2, 0), (3, 0)], [(1, 2), (4, 2)], [(1, 2), (2, 2)], [(1, 0), (2, 0)], [(2, 2), (4, 3)], [(2, 3), (5, 7)]]
18  --->  [(2, 1), (1, 3), [(1, 1), (0, 0)], [(1, 4), (2, 4)], [(1, 3), (2, 3)], [(1, 2), (3, 2)], [(1, 0), (3, 0)], [(2, 2), (4, 4)]]
19  --->  [(2, 1), (0, 3), [(2, 1), (3, 1)], [(1, 1), (2, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(1, 2), (4, 2)], [(0, 1), (0, 2)], [(1, 0), (4, 0)], [(2, 2), (4, 5)], [(2, 2), (3, 2)]]
14  --->  [(0, 3), (0, 2), [(2, 1), (3, 1)], [(1, 2), (1, 4)], [(2, 3), (5, 7)], [(2, 3), (5, 4)]]
40  --->  [(0, 1), (0, 0), [(3, 1), (3, 2)], [(1, 0), (3, 1)], [(1, 0), (2, 0)], [(2, 1), (5, 4)], [(1, 3), (1, 7)], [(2, 2), (6, 2)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(1, 2), (5, 2)]]
11  --->  [(1, 4), (2, 4), [(1, 1), (2, 2)], [(2, 3), (5, 4)], [(2, 3), (3, 3)]]
9  --->  [(1, 2), (1, 4), [(2, 3), (2, 7)], [(2, 3), (4, 3)]]
13  --->  [(1, 2), (1, 3), [(2, 2), (3, 2)], [(2, 3), (5, 6)], [(2, 3), (5, 3)]]
10  --->  [(1, 1), (2, 1), [(2, 3), (5, 3)]]
27  --->  [(1, 0), (2, 0), [(2, 3), (1, 3)], [(2, 1), (4, 3)], [(2, 1), (4, 1)], [(2, 0), (4, 0)], [(1, 4), (2, 5)], [(0, 4), (0, 5)], [(1, 2), (2, 2)], [(2, 2), (4, 2)], [(1, 2), (3, 6)], [(1, 2), (3, 4)]]
28  --->  [(1, 0), (2, 1), [(2, 1), (5, 1)], [(2, 0), (5, 0)], [(1, 4), (2, 6)], [(0, 4), (0, 6)], [(1, 2), (2, 3)], [(2, 2), (4, 3)], [(1, 2), (3, 5)], [(6, 7), (6, 6)]]
29  --->  [(1, 0), (2, 2), [(1, 0), (2, 0)], [(1, 1), (2, 1)], [(2, 1), (5, 2)], [(2, 0), (5, 1)], [(1, 2), (2, 4)], [(2, 2), (4, 4)], [(2, 2), (3, 2)], [(0, 5), (0, 6)], [(1, 2), (3, 6)], [(6, 7), (6, 5)]]
20  --->  [(1, 1), (2, 2), [(1, 4), (4, 4)], [(1, 4), (2, 4)], [(1, 3), (3, 4)], [(1, 3), (2, 3)], [(0, 1), (0, 3)], [(1, 0), (4, 1)], [(3, 7), (4, 7)], [(2, 2), (4, 2)]]
21  --->  [(1, 1), (2, 3), [(2, 1), (3, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(0, 1), (0, 4)], [(1, 3), (1, 4)], [(3, 7), (5, 7)], [(2, 2), (5, 2)]]
30  --->  [(1, 0), (2, 1), [(1, 1), (3, 1)], [(4, 3), (4, 4)], [(1, 2), (2, 5)], [(2, 2), (4, 5)], [(2, 2), (4, 2)], [(0, 5), (0, 7)], [(6, 7), (6, 4)]]
31  --->  [(1, 0), (2, 2), [(1, 1), (4, 1)], [(4, 3), (4, 5)], [(2, 2), (4, 3)], [(2, 2), (3, 2)], [(2, 0), (3, 0)], [(6, 7), (6, 3)]]
32  --->  [(1, 0), (2, 3), [(4, 3), (3, 5)], [(2, 1), (3, 1)], [(1, 3), (1, 4)], [(1, 2), (2, 2)], [(2, 2), (4, 4)], [(2, 2), (4, 2)], [(2, 0), (4, 0)], [(1, 1), (2, 1)], [(1, 4), (2, 4)], [(6, 7), (6, 2)]]
34  --->  [(1, 0), (2, 0), [(4, 3), (1, 5)], [(2, 1), (5, 1)], [(2, 0), (2, 2)], [(1, 3), (1, 6)], [(1, 2), (2, 4)], [(2, 2), (4, 6)], [(2, 2), (4, 4)], [(2, 0), (6, 0)], [(1, 1), (4, 1)], [(1, 4), (3, 5)]]
35  --->  [(1, 0), (2, 1), [(4, 3), (0, 5)], [(2, 1), (5, 2)], [(2, 0), (2, 3)], [(1, 2), (2, 5)], [(2, 2), (4, 5)], [(2, 1), (3, 1)], [(1, 3), (1, 4)], [(1, 1), (5, 1)], [(1, 4), (3, 6)]]
36  --->  [(1, 0), (2, 0), [(2, 0), (2, 4)], [(2, 2), (4, 6)], [(2, 1), (4, 1)], [(2, 0), (3, 0)], [(1, 3), (1, 5)], [(1, 1), (5, 2)], [(1, 4), (3, 7)]]
37  --->  [(1, 0), (2, 1), [(2, 5), (3, 5)], [(2, 0), (2, 5)], [(2, 1), (5, 1)], [(2, 0), (4, 0)], [(1, 3), (1, 6)], [(1, 3), (1, 4)], [(1, 1), (5, 3)], [(2, 2), (3, 2)], [(1, 2), (2, 2)]]
25  --->  [(2, 4), (2, 3), [(2, 1), (4, 1)], [(2, 0), (4, 0)], [(0, 2), (0, 4)], [(1, 3), (1, 5)], [(0, 5), (0, 7)], [(1, 2), (3, 4)], [(1, 2), (3, 2)], [(3, 7), (5, 3)], [(2, 2), (6, 5)]]
26  --->  [(2, 4), (2, 2), [(2, 1), (4, 2)], [(0, 2), (0, 5)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(1, 4), (2, 4)], [(2, 2), (3, 2)], [(1, 2), (3, 5)], [(1, 2), (3, 3)]]
43  --->  [(2, 2), (2, 1), [(3, 1), (1, 3)], [(1, 0), (3, 2)], [(4, 2), (3, 3)], [(1, 0), (2, 0)], [(5, 5), (5, 2)], [(2, 2), (6, 5)], [(2, 1), (5, 1)], [(2, 0), (4, 0)], [(1, 4), (3, 7)], [(1, 3), (4, 5)], [(1, 2), (5, 5)]]
41  --->  [(3, 1), (3, 3), [(1, 0), (3, 2)], [(1, 0), (3, 0)], [(5, 5), (5, 4)], [(2, 2), (6, 3)], [(2, 1), (3, 1)], [(1, 4), (3, 5)], [(1, 3), (4, 3)], [(1, 2), (5, 3)]]
42  --->  [(3, 1), (2, 3), [(1, 0), (3, 3)], [(1, 0), (3, 1)], [(4, 2), (4, 3)], [(5, 5), (5, 3)], [(2, 2), (6, 4)], [(2, 1), (4, 1)], [(2, 0), (3, 0)], [(1, 4), (3, 6)], [(1, 3), (4, 4)], [(1, 2), (5, 4)]]
54  --->  [(2, 3), (2, 2), [(1, 0), (1, 4)], [(1, 0), (3, 0)], [(1, 1), (5, 3)], [(6, 1), (6, 6)], [(1, 1), (5, 1)], [(1, 1), (3, 1)]]
55  --->  [(2, 3), (2, 1), [(1, 0), (1, 5)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(1, 1), (5, 4)], [(6, 1), (6, 7)], [(1, 1), (6, 1)], [(1, 1), (4, 1)]]
24  --->  [(3, 1), (2, 1), [(2, 1), (4, 3)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(0, 2), (0, 3)], [(1, 3), (1, 4)], [(0, 5), (0, 6)], [(1, 2), (3, 3)], [(1, 2), (2, 2)], [(3, 7), (5, 4)], [(2, 2), (6, 4)]]
22  --->  [(2, 1), (4, 1), [(2, 0), (3, 0)], [(1, 4), (4, 4)], [(1, 3), (3, 4)], [(0, 1), (0, 5)], [(1, 3), (1, 5)], [(0, 5), (0, 6)], [(1, 2), (2, 2)], [(3, 7), (5, 6)], [(2, 2), (6, 2)]]
23  --->  [(2, 1), (4, 2), [(2, 0), (4, 0)], [(1, 2), (3, 2)], [(3, 7), (5, 5)], [(2, 2), (6, 3)]]
15  --->  [(1, 2), (2, 2), [(2, 2), (3, 2)], [(2, 3), (5, 5)]]
38  --->  [(1, 0), (2, 0), [(4, 2), (4, 1)], [(2, 5), (3, 4)], [(2, 0), (2, 6)], [(2, 1), (5, 2)], [(2, 0), (5, 0)], [(1, 3), (1, 7)], [(1, 3), (1, 5)], [(1, 1), (5, 4)], [(2, 2), (4, 2)], [(1, 2), (3, 2)]]
39  --->  [(1, 0), (3, 0), [(4, 2), (4, 0)], [(2, 5), (3, 3)], [(2, 1), (5, 3)], [(2, 0), (6, 0)], [(1, 3), (1, 6)], [(1, 1), (5, 5)], [(2, 2), (5, 2)], [(1, 4), (2, 4)], [(1, 3), (2, 3)], [(1, 2), (4, 2)]]
44  --->  [(1, 0), (3, 3), [(1, 0), (3, 0)], [(5, 5), (5, 1)], [(2, 1), (6, 1)], [(2, 0), (5, 0)], [(1, 3), (4, 6)], [(1, 2), (5, 6)], [(1, 2), (2, 2)]]
33  --->  [(4, 3), (2, 5), [(2, 1), (4, 1)], [(2, 0), (2, 1)], [(1, 3), (1, 5)], [(1, 2), (2, 3)], [(2, 2), (4, 5)], [(2, 2), (4, 3)], [(2, 0), (5, 0)], [(1, 1), (3, 1)], [(1, 4), (3, 4)], [(6, 7), (6, 1)]]
50  --->  [(4, 1), (4, 2), [(1, 1), (3, 5)], [(1, 1), (3, 3)], [(2, 1), (5, 2)], [(1, 1), (3, 1)], [(6, 1), (6, 2)], [(2, 1), (4, 1)], [(2, 0), (6, 1)], [(1, 3), (4, 6)], [(1, 2), (5, 5)]]
51  --->  [(4, 1), (4, 3), [(1, 0), (1, 1)], [(1, 1), (3, 4)], [(2, 1), (5, 3)], [(1, 1), (4, 1)], [(6, 1), (6, 3)], [(2, 7), (3, 7)], [(2, 1), (5, 1)], [(2, 0), (6, 2)], [(1, 3), (4, 7)], [(1, 2), (5, 6)], [(1, 1), (2, 1)]]
52  --->  [(4, 1), (4, 4), [(1, 0), (1, 2)], [(1, 1), (3, 5)], [(2, 1), (5, 4)], [(1, 1), (5, 1)], [(6, 1), (6, 4)], [(2, 7), (3, 6)], [(2, 1), (6, 1)], [(2, 0), (6, 3)], [(1, 1), (3, 1)]]
53  --->  [(4, 1), (3, 4), [(1, 0), (1, 3)], [(1, 0), (2, 0)], [(1, 1), (5, 2)], [(6, 1), (6, 5)], [(2, 1), (6, 2)], [(2, 0), (6, 4)], [(1, 1), (4, 1)], [(1, 1), (2, 1)]]
46  --->  [(1, 5), (2, 5), [(1, 0), (5, 0)], [(1, 1), (3, 1)], [(2, 0), (6, 1)], [(2, 0), (3, 0)], [(1, 3), (3, 3)], [(1, 2), (4, 2)]]
47  --->  [(1, 5), (3, 5), [(1, 0), (5, 1)], [(1, 1), (3, 2)], [(1, 1), (2, 1)], [(2, 1), (3, 1)], [(5, 6), (5, 5)], [(2, 0), (6, 2)], [(2, 0), (4, 0)], [(1, 3), (4, 3)], [(1, 2), (5, 2)]]
48  --->  [(1, 5), (3, 4), [(1, 1), (3, 3)], [(1, 1), (3, 1)], [(2, 1), (4, 1)], [(5, 6), (5, 4)], [(2, 0), (6, 3)], [(2, 0), (5, 0)], [(1, 3), (4, 4)], [(1, 2), (5, 3)]]
49  --->  [(1, 5), (3, 3), [(1, 1), (3, 4)], [(1, 1), (3, 2)], [(1, 6), (0, 6)], [(2, 1), (5, 1)], [(1, 1), (2, 1)], [(2, 1), (3, 1)], [(2, 0), (6, 4)], [(2, 0), (6, 0)], [(1, 3), (4, 5)], [(1, 2), (5, 4)]]
45  --->  [(1, 0), (4, 0), [(1, 1), (2, 1)], [(5, 5), (5, 0)], [(2, 1), (6, 2)], [(2, 0), (6, 0)], [(1, 3), (4, 7)], [(1, 3), (2, 3)], [(1, 2), (3, 2)]]
56  --->  [(1, 0), (1, 6), [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(1, 1), (5, 5)], [(6, 1), (5, 7)], [(1, 1), (6, 2)], [(1, 1), (5, 1)], [(6, 4), (6, 3)]]
57  --->  [(1, 0), (4, 0), [(1, 0), (2, 0)], [(6, 1), (4, 7)], [(1, 1), (6, 3)], [(1, 1), (6, 1)], [(6, 4), (6, 2)]]
58  --->  [(1, 0), (5, 0), [(1, 0), (3, 0)], [(6, 1), (3, 7)], [(1, 1), (6, 2)]]
67  --->  [(2, 6), (2, 5), [(4, 5), (5, 1)], [(5, 2), (3, 6)], [(5, 4), (5, 3)], [(5, 5), (5, 6)], [(4, 6), (5, 5)], [(1, 0), (6, 1)], [(1, 0), (5, 0)], [(6, 5), (4, 7)]]
63  --->  [(4, 5), (5, 5), [(5, 2), (5, 4)], [(1, 0), (5, 3)], [(1, 0), (5, 0)], [(1, 0), (3, 0)]]
64  --->  [(4, 5), (5, 4), [(5, 2), (5, 5)], [(1, 0), (5, 1)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(6, 5), (6, 6)]]
65  --->  [(4, 5), (5, 3), [(5, 2), (5, 6)], [(1, 0), (5, 2)], [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(6, 5), (6, 7)]]
66  --->  [(4, 5), (5, 2), [(5, 2), (4, 6)], [(1, 0), (5, 3)], [(4, 6), (5, 6)], [(1, 0), (6, 0)], [(1, 0), (4, 0)], [(6, 5), (5, 7)]]
68  --->  [(4, 5), (5, 0), [(5, 2), (2, 6)], [(5, 5), (5, 7)], [(4, 6), (5, 4)], [(1, 0), (6, 0)], [(6, 5), (3, 7)], [(6, 3), (6, 4)]]
62  --->  [(5, 2), (5, 3), [(1, 0), (5, 2)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(5, 7), (5, 6)]]
69  --->  [(5, 2), (1, 6), [(5, 5), (4, 7)], [(4, 6), (5, 3)], [(1, 0), (6, 1)], [(6, 3), (6, 5)]]
70  --->  [(5, 2), (0, 6), [(5, 5), (3, 7)], [(6, 2), (6, 1)], [(6, 3), (6, 6)]]
78  --->  [(3, 5), (4, 5)]
79  --->  [(3, 5), (5, 5)]
80  --->  [(3, 5), (5, 4)]
81  --->  [(3, 5), (5, 3), [(1, 6), (2, 6)]]
82  --->  [(3, 5), (5, 2), [(1, 6), (3, 6)]]
83  --->  [(3, 5), (5, 1), [(1, 6), (4, 6)]]
84  --->  [(3, 5), (5, 0), [(1, 6), (5, 6)], [(1, 7), (2, 7)]]
85  --->  [(1, 6), (5, 5), [(1, 7), (3, 7)], [(4, 7), (5, 7)]]
86  --->  [(1, 6), (5, 4), [(1, 7), (4, 7)], [(4, 7), (6, 7)]]
87  --->  [(1, 6), (5, 3), [(1, 7), (5, 7)], [(4, 7), (6, 6)]]
88  --->  [(1, 6), (5, 2), [(1, 7), (5, 6)], [(4, 7), (6, 5)]]
89  --->  [(1, 6), (5, 1), [(1, 7), (5, 5)], [(4, 7), (6, 4)]]
90  --->  [(1, 6), (5, 0), [(1, 7), (5, 4)], [(4, 7), (6, 3)]]
59  --->  [(1, 0), (4, 0), [(6, 1), (2, 7)], [(1, 1), (6, 3)]]
60  --->  [(1, 0), (5, 0), [(1, 0), (2, 0)], [(6, 1), (1, 7)]]
61  --->  [(1, 0), (5, 1), [(1, 0), (3, 0)], [(6, 1), (0, 7)]]
71  --->  [(5, 5), (2, 7), [(6, 3), (6, 7)]]
72  --->  [(5, 5), (1, 7), [(6, 3), (5, 7)]]
73  --->  [(5, 5), (0, 7), [(6, 3), (4, 7)], [(6, 6), (6, 5)]]
7  --->  [(2, 3), (2, 7), [(2, 3), (2, 5)]]
91  --->  [(1, 7), (5, 3), [(4, 7), (6, 2)]]
74  --->  [(6, 3), (3, 7), [(6, 6), (6, 4)]]
75  --->  [(6, 6), (6, 3)]
76  --->  [(6, 6), (6, 2)]
77  --->  [(6, 6), (6, 1)]
12  --->  [(2, 3), (5, 5), [(2, 3), (4, 3)]]
92  --->  [(4, 7), (6, 1)]

Rescheduler marker:
(0, 0)  --->  [[1, 3, 5, 7, 9, 10, 24, 26, 31, 33, 16, 14, 35, 37, 40, 48, 50, 52, 54, 57, 59, 61], [48], [12, 23, 30, 44, 46], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 24, 29, 31, 43, 45, 21, 47, 25, 26, 27, 28, 32, 33, 34, 35, 17, 18, 15, 16, 36, 37, 38, 39, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], [4, 6, 8, 10, 21, 28, 42, 20, 27, 29, 34, 36, 19, 17, 38, 40, 43, 51, 53, 55, 57, 60, 62, 64]]
(0, 1)  --->  [[1, 5, 24, 7, 16, 21, 26, 42, 44, 29, 46, 48, 50], [22], [11, 20], [10, 2, 12, 6, 7, 19, 21, 25, 26, 8, 9, 17, 18, 22, 23, 27, 28, 43, 44, 45, 46, 30, 31, 47, 48, 49, 50, 51, 52], [5, 9, 8, 18, 27, 41, 10, 19, 24, 20, 29, 45, 47, 32, 49, 51, 53]]
(0, 2)  --->  [[1, 2, 37, 5, 10, 12, 14, 24, 29, 19, 21, 34, 41], [35], [9, 18, 33], [8, 2, 10, 3, 4, 17, 19, 32, 34, 38, 39, 6, 7, 11, 12, 13, 14, 15, 16, 25, 26, 30, 31, 20, 21, 22, 23, 35, 36, 42, 43], [6, 7, 5, 16, 31, 40, 8, 13, 15, 17, 25, 21, 27, 32, 22, 24, 37, 44]]
(0, 3)  --->  [[1, 3, 27, 10, 13, 15, 17, 24, 29, 32, 34, 36, 42], [25], [9, 23], [6, 8, 10, 2, 3, 4, 5, 22, 24, 28, 29, 11, 12, 14, 15, 16, 17, 18, 19, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 43, 44], [5, 7, 4, 6, 21, 15, 30, 13, 16, 18, 20, 26, 22, 27, 32, 35, 37, 39, 45]]
(0, 4)  --->  [[1, 4, 11, 8, 13, 15, 17, 23, 19, 21, 26, 29, 36], [9], [7], [2, 3, 6, 5, 8, 12, 13, 9, 10, 14, 15, 16, 17, 18, 19, 24, 25, 20, 21, 22, 23, 27, 28, 30, 31, 37, 38], [4, 5, 14, 11, 16, 18, 20, 27, 23, 26, 28, 22, 24, 29, 32, 39]]
(0, 5)  --->  [[43], [41], [30, 39], [29, 25, 31, 38, 40, 44, 45], [28, 24, 37, 46, 29, 23, 25, 30]]
(0, 6)  --->  [[78], [76], [32, 53, 74], [31, 25, 33, 52, 54, 73, 75, 79, 80], [30, 24, 51, 72, 81, 26, 31]]
(0, 7)  --->  [[81], [79], [34, 65, 77], [28, 33, 35, 64, 66, 76, 78, 82, 83], [27, 32, 63, 75, 84]]
(0, 8)  --->  [[], [], [], [], []]
(0, 9)  --->  [[], [], [], [], []]
(1, 0)  --->  [[1, 3, 17, 5, 14, 19, 21, 23, 30, 28, 33, 39, 43], [15], [13], [2, 3, 4, 5, 11, 12, 14, 18, 19, 6, 7, 15, 16, 20, 21, 22, 23, 24, 25, 31, 32, 29, 30, 34, 35, 40, 41, 44, 45], [4, 6, 7, 10, 11, 20, 19, 8, 17, 28, 30, 35, 37, 22, 24, 18, 39, 41, 26, 44, 33, 52, 54, 56, 31, 36, 58, 61, 42, 46, 63, 65]]
(1, 1)  --->  [[14, 1, 3, 11, 16, 18, 21, 23, 29, 32, 44, 38, 46], [12], [10], [8, 9, 11, 15, 16, 2, 3, 4, 5, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 30, 31, 33, 34, 45, 46, 39, 40, 47, 48], [7, 8, 9, 17, 4, 6, 18, 14, 19, 11, 20, 21, 24, 30, 26, 32, 53, 46, 48, 35, 47, 33, 50, 41, 49, 52, 54]]
(1, 2)  --->  [[14, 1, 10, 18, 21, 12, 23, 26, 28, 16, 34], [11], [9], [6, 8, 10, 15, 16, 2, 3, 11, 12, 19, 20, 22, 23, 13, 14, 24, 25, 27, 28, 29, 30, 17, 18, 35, 36], [6, 5, 7, 17, 9, 14, 4, 13, 16, 18, 21, 24, 54, 28, 33, 15, 26, 29, 31, 23, 25, 19, 37, 38, 45]]
(1, 3)  --->  [[51, 1, 3, 5, 8], [49], [19, 31, 47], [15, 18, 20, 30, 32, 46, 48, 52, 53, 2, 3, 4, 5, 6, 7, 9, 10], [20, 14, 17, 10, 15, 29, 45, 54, 19, 21, 22, 25, 33, 55, 36, 38, 4, 6, 40, 46, 8, 11]]
(1, 4)  --->  [[22], [20], [18], [12, 17, 19, 23, 24], [12, 17, 11, 16, 25, 19, 21, 23, 26, 27, 34, 56, 37, 39, 33, 40]]
(1, 5)  --->  [[34], [31], [29], [25, 28, 30, 35, 36], [36, 47, 24, 27, 37, 35, 57, 38, 40]]
(1, 6)  --->  [[64], [62], [60], [37, 59, 61, 65, 66], [36, 58, 50, 67, 71, 82, 39, 41]]
(1, 7)  --->  [[48], [46], [44], [41, 43, 45, 49, 50], [40, 42, 62, 51, 74, 85]]
(1, 8)  --->  [[], [], [], [], []]
(1, 9)  --->  [[], [], [], [], []]
(2, 0)  --->  [[13], [11], [9], [6, 8, 10, 14, 15], [5, 7, 16, 9, 18, 29, 31, 36, 38, 23, 25, 19, 40, 42, 27, 45, 34, 55, 57, 32, 37, 59, 62, 43, 47, 64, 66]]
(2, 1)  --->  [[], [63], [41, 47, 49, 59, 61], [38, 40, 42, 46, 48, 44, 50, 58, 60, 27, 62], [17, 15, 20, 12, 30, 21, 32, 37, 39, 45, 43, 57, 26, 22, 25, 31, 27, 33, 35, 47, 49, 36, 48, 34, 51, 42, 50, 53, 55]]
(2, 2)  --->  [[39], [37], [33, 35], [14, 32, 34, 29, 36, 40, 41], [18, 13, 31, 22, 33, 28, 44, 42, 5, 14, 56, 17, 19, 36, 29, 34, 16, 27, 30, 32, 24, 26, 20, 38, 39, 46]]
(2, 3)  --->  [[40], [38], [36], [24, 35, 37, 41, 42], [19, 23, 34, 28, 27, 43, 44, 55, 20, 22, 37, 30, 35, 5, 7, 41, 47, 9, 12]]
(2, 4)  --->  [[24], [22], [20], [14, 19, 21, 25, 26], [13, 18, 27, 26, 20, 22, 28, 38, 31, 36, 6, 8, 34, 41]]
(2, 5)  --->  [[75], [73], [39, 71], [33, 38, 40, 70, 72, 76, 77], [35, 48, 38, 29, 39, 32, 37, 69, 78, 7, 9]]
(2, 6)  --->  [[46], [44], [42], [31, 41, 43, 47, 48], [30, 40, 49, 68, 70, 83, 8, 10]]
(2, 7)  --->  [[17], [15], [13], [10, 12, 14, 18, 19], [61, 52, 73, 9, 11, 86, 20]]
(2, 8)  --->  [[], [], [], [], []]
(2, 9)  --->  [[], [], [], [], []]
(3, 0)  --->  [[37], [35], [21, 33], [11, 20, 22, 32, 34, 38, 39], [10, 19, 31, 40, 24, 26, 20, 41, 43, 28, 46, 56, 58, 33, 38, 60, 63, 44, 48, 65, 67]]
(3, 1)  --->  [[27], [25], [23], [17, 22, 24, 28, 29], [16, 21, 30, 41, 25, 23, 26, 32, 42, 44, 28, 34, 48, 50, 37, 49, 35, 52, 43, 51, 54, 56]]
(3, 2)  --->  [[21], [19], [17], [7, 16, 18, 22, 23], [42, 6, 15, 24, 18, 20, 43, 45, 49, 51, 17, 28, 31, 33, 25, 27, 21, 39, 40, 47]]
(3, 3)  --->  [[], [71], [48, 50, 53, 67, 69], [45, 47, 49, 46, 51, 52, 54, 66, 68, 42, 70], [43, 21, 23, 44, 46, 45, 51, 65, 41, 50, 52, 26, 28, 42, 48, 10, 13]]
(3, 4)  --->  [[61], [59], [26, 36, 57], [23, 25, 27, 35, 37, 56, 58, 62, 63], [21, 23, 22, 24, 34, 55, 50, 64, 40, 51, 53, 27, 29, 35, 42]]
(3, 5)  --->  [[60], [58], [56], [53, 55, 57, 61, 62], [34, 49, 39, 52, 54, 63, 79, 28, 30, 36, 43]]
(3, 6)  --->  [[63], [58], [33, 56], [30, 32, 34, 55, 57, 64, 65], [69, 84, 29, 31, 54, 66, 37, 44]]
(3, 7)  --->  [[82], [80], [47, 72, 78], [39, 46, 48, 71, 73, 77, 79, 83, 84], [60, 53, 72, 87, 21, 38, 45, 70, 76, 85]]
(3, 8)  --->  [[], [], [], [], []]
(3, 9)  --->  [[], [], [], [], []]
(4, 0)  --->  [[47], [45], [29, 43], [26, 28, 30, 42, 44, 48, 49], [25, 27, 21, 41, 50, 29, 47, 57, 59, 34, 39, 61, 64, 45, 49, 66, 68]]
(4, 1)  --->  [[39], [37], [35], [34, 23, 36, 40, 41], [24, 27, 33, 22, 40, 42, 51, 29, 35, 38, 50, 36, 53, 44, 52, 55, 57]]
(4, 2)  --->  [[27], [25], [23], [20, 22, 24, 28, 29], [25, 28, 19, 21, 39, 30, 43, 52, 18, 29, 32, 34, 22, 40, 41, 48]]
(4, 3)  --->  [[35], [33], [31], [27, 30, 32, 36, 37], [26, 29, 38, 31, 44, 53, 19, 30, 33, 35, 43, 49, 11, 14]]
(4, 4)  --->  [[30], [28], [26], [23, 25, 27, 31, 32], [22, 24, 33, 32, 54, 20, 31, 34, 36, 44, 50]]
(4, 5)  --->  [[38], [36], [34], [22, 33, 35, 39, 40], [33, 64, 80, 21, 32, 41, 35, 37, 45, 51]]
(4, 6)  --->  [[44], [42], [40], [37, 39, 41, 45, 46], [68, 85, 36, 38, 47, 67, 46, 52]]
(4, 7)  --->  [[59], [57], [55], [48, 54, 56, 60, 61], [59, 71, 88, 22, 47, 53, 69, 62, 75, 86]]
(4, 8)  --->  [[], [], [], [], []]
(4, 9)  --->  [[], [], [], [], []]
(5, 0)  --->  [[], [98], [62, 72, 88, 94, 96], [59, 61, 63, 71, 73, 87, 89, 93, 95, 48, 97], [30, 48, 58, 60, 70, 86, 92, 47, 35, 40, 62, 65, 46, 50, 67, 69]]
(5, 1)  --->  [[59], [55], [51, 53], [32, 50, 52, 48, 54, 60, 61], [30, 36, 31, 49, 47, 69, 62, 85, 91, 46, 39, 51, 37, 54, 63, 66, 45, 53, 56, 58]]
(5, 2)  --->  [[43], [41], [39], [32, 38, 40, 44, 45], [31, 37, 46, 68, 63, 84, 90, 45, 40, 52, 38, 55, 64, 67, 23, 41, 42, 49]]
(5, 3)  --->  [[], [99], [70, 72, 74, 95, 97], [66, 69, 71, 70, 73, 72, 75, 94, 96, 28, 98], [67, 64, 83, 89, 44, 41, 53, 39, 56, 65, 68, 69, 71, 93, 27, 43, 50, 12, 15]]
(5, 4)  --->  [[64], [60], [56, 58], [43, 55, 57, 51, 59, 65, 66], [66, 65, 82, 88, 43, 42, 54, 40, 57, 50, 68, 67, 70, 92, 26, 44, 51, 13, 16]]
(5, 5)  --->  [[64], [62], [60], [42, 59, 61, 65, 66], [65, 66, 81, 87, 42, 41, 58, 49, 67, 68, 69, 91, 25, 45, 52, 14, 17]]
(5, 6)  --->  [[70], [68], [55, 66], [47, 54, 56, 65, 67, 71, 72], [67, 86, 48, 69, 68, 90, 24, 46, 53, 64, 73, 15, 18]]
(5, 7)  --->  [[25], [23], [21], [17, 20, 22, 26, 27], [58, 70, 89, 23, 68, 63, 74, 16, 19, 87, 28]]
(5, 8)  --->  [[], [], [], [], []]
(5, 9)  --->  [[], [], [], [], []]
(6, 0)  --->  [[47], [45], [43], [37, 42, 44, 48, 49], [36, 41, 50, 47, 51, 68, 70]]
(6, 1)  --->  [[], [100], [73, 75, 81, 96, 98], [70, 72, 74, 73, 76, 80, 82, 95, 97, 36, 99], [51, 46, 54, 48, 52, 57, 59, 69, 71, 72, 79, 94, 35]]
(6, 2)  --->  [[65], [63], [57, 61], [48, 56, 58, 60, 62, 66, 67], [52, 24, 42, 47, 55, 49, 53, 58, 60, 59, 71, 68, 78, 93, 34]]
(6, 3)  --->  [[67], [65], [63], [60, 62, 64, 68, 69], [53, 25, 43, 50, 54, 59, 61, 58, 70, 69, 77, 92, 33]]
(6, 4)  --->  [[61], [59], [57], [52, 56, 58, 62, 63], [54, 26, 44, 51, 55, 57, 64, 70, 76, 91, 32]]
(6, 5)  --->  [[53], [49], [47], [28, 46, 48, 54, 55], [55, 27, 45, 56, 65, 71, 75, 90, 31]]
(6, 6)  --->  [[], [], [], [], [56, 66, 72, 74, 89, 30]]
(6, 7)  --->  [[], [], [], [], [57, 67, 73, 88, 29]]
(6, 8)  --->  [[], [], [], [], []]
(6, 9)  --->  [[], [], [], [], []]
(7, 0)  --->  [[], [], [], [], []]
(7, 1)  --->  [[], [], [], [], []]
(7, 2)  --->  [[], [], [], [], []]
(7, 3)  --->  [[], [], [], [], []]
(7, 4)  --->  [[], [], [], [], []]
(7, 5)  --->  [[], [], [], [], []]
(7, 6)  --->  [[], [], [], [], []]
(7, 7)  --->  [[], [], [], [], []]
(7, 8)  --->  [[], [], [], [], []]
(7, 9)  --->  [[], [], [], [], []]
(8, 0)  --->  [[], [], [], [], []]
(8, 1)  --->  [[], [], [], [], []]
(8, 2)  --->  [[], [], [], [], []]
(8, 3)  --->  [[], [], [], [], []]
(8, 4)  --->  [[], [], [], [], []]
(8, 5)  --->  [[], [], [], [], []]
(8, 6)  --->  [[], [], [], [], []]
(8, 7)  --->  [[], [], [], [], []]
(8, 8)  --->  [[], [], [], [], []]
(8, 9)  --->  [[], [], [], [], []]
(9, 0)  --->  [[], [], [], [], []]
(9, 1)  --->  [[], [], [], [], []]
(9, 2)  --->  [[], [], [], [], []]
(9, 3)  --->  [[], [], [], [], []]
(9, 4)  --->  [[], [], [], [], []]
(9, 5)  --->  [[], [], [], [], []]
(9, 6)  --->  [[], [], [], [], []]
(9, 7)  --->  [[], [], [], [], []]
(9, 8)  --->  [[], [], [], [], []]
(9, 9)  --->  [[], [], [], [], []]

Scheduling duration in clocks:  101

CCM Size in bits:  5057

CCM Size in bytes:  633

------------------Synthesys of equation 7 has started!---------------

[('1', 'F00*int0'), ('2', 'F01*X10'), ('3', 'F02*X11'), ('4', 'F10*int0'), ('5', 'F11*X20'), ('6', 'F12*X21'), ('7', 'F20*int0'), ('8', 'F21*X30'), ('9', 'F22*X31'), ('10', '1+2'), ('11', '3+4'), ('12', '5+6'), ('13', '7+8'), ('14', '10+11'), ('15', '12+13'), ('16', '14+15'), ('17', '16+9')]

Graph nodes:
Name   Value   Op_Type   Conn
y20      None      Write      []
1      None      *      ['10']
2      None      *      ['10']
3      None      *      ['11']
4      None      *      ['11']
5      None      *      ['12']
6      None      *      ['12']
7      None      *      ['13']
8      None      *      ['13']
9      None      *      ['17']
10      None      +      ['14']
11      None      +      ['14']
12      None      +      ['15']
13      None      +      ['15']
14      None      +      ['16']
15      None      +      ['16']
16      None      +      ['17']
17      None      +      ['y20']
F00      None      Read      ['1']
int0      None      Read      ['1', '4', '7']
F01      None      Read      ['2']
X10      None      Read      ['2']
F02      None      Read      ['3']
X11      None      Read      ['3']
F10      None      Read      ['4']
F11      None      Read      ['5']
X20      None      Read      ['5']
F12      None      Read      ['6']
X21      None      Read      ['6']
F20      None      Read      ['7']
F21      None      Read      ['8']
X30      None      Read      ['8']
F22      None      Read      ['9']
X31      None      Read      ['9']
Labels for mode ASAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Labels for mode ALAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 5, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4]

1. DUMPED cp:  ['1', '10', '14', '16', '17', 'y20']
   Inputs & Coords:
     1 F00 (0, 0)
     1 int0 (0, 0)
     10 1 None
     10 2 None
     14 10 None
     14 11 None
     16 14 None
     16 15 None
     17 16 None
     17 9 None
     y20 17 None
   Pre inputs: [(0, 0), (0, 0)]
   
   Inputs  [[(0, 0), 2]]
   All psbl destinations:  [(6, 6), (6, 6)]
   Closest pe coord:  (6, 6)
   All schedules generated:  [[24, 25, 26, 27, 28, 29], [24, 25, 26, 27, 28, 29]]
   Final closest pe coord and schedule  (6, 6) [24, 25, 26, 27, 28, 29]
Searching for other cps with nodes  ['2', '9', '11', '15']

2. DUMPED cp:  ['5', '12', '15']
   Inputs & Coords:
     5 F11 (0, 3)
     5 X20 (0, 4)
     12 5 None
     12 6 None
     15 12 None
     15 13 None
   Pre inputs: [(0, 3), (0, 4)]
   
   Inputs  [[(0, 3), 1], [(0, 4), 1]]
   All psbl destinations:  [(0, 8), (0, 8)]
   Closest pe coord:  (0, 8)
   All schedules generated:  [[9, 10, 11], [9, 10, 11]]
   Final closest pe coord and schedule  (0, 8) [9, 10, 11]
Searching for other cps with nodes  ['2', '6', '9', '11', '13']

3. DUMPED cp:  ['3', '11']
   Inputs & Coords:
     3 F02 (0, 2)
     3 X11 (0, 2)
     11 3 None
     11 4 None
   Pre inputs: [(0, 2), (0, 2)]
   
   Inputs  [[(0, 2), 2]]
   All psbl destinations:  [(1, 8)]
   Closest pe coord:  (1, 8)
   All schedules generated:  [[14, 15]]
   Final closest pe coord and schedule  (1, 8) [14, 15]
Searching for other cps with nodes  ['2', '4', '6', '9', '13']

4. DUMPED cp:  ['7', '13']
   Inputs & Coords:
     7 F20 (1, 0)
     7 int0 (0, 0)
     13 7 None
     13 8 None
   Pre inputs: [(1, 0), (0, 0)]
   
   Inputs  [[(1, 0), 1], [(0, 0), 1]]
   All psbl destinations:  [(7, 0), (7, 0)]
   Closest pe coord:  (7, 0)
   All schedules generated:  [[13, 14], [13, 14]]
   Final closest pe coord and schedule  (7, 0) [13, 14]
Searching for other cps with nodes  ['2', '4', '6', '8', '9']

5. DUMPED cp:  ['2']
   Inputs & Coords:
     2 F01 (0, 1)
     2 X10 (0, 1)
   Pre inputs: [(0, 1), (0, 1)]
   
   Inputs  [[(0, 1), 2]]
   All psbl destinations:  [(6, 7), (6, 7)]
   Closest pe coord:  (6, 7)
   All schedules generated:  [[24], [24]]
   Final closest pe coord and schedule  (6, 7) [24]
Searching for other cps with nodes  ['4', '6', '8', '9']

6. DUMPED cp:  ['4']
   Inputs & Coords:
     4 F10 (0, 3)
     4 int0 (0, 0)
   Pre inputs: [(0, 3), (0, 0)]
   
   Inputs  [[(0, 3), 1], [(0, 0), 1]]
   All psbl destinations:  [(2, 8)]
   Closest pe coord:  (2, 8)
   All schedules generated:  [[17]]
   Final closest pe coord and schedule  (2, 8) [17]
Searching for other cps with nodes  ['6', '8', '9']

7. DUMPED cp:  ['6']
   Inputs & Coords:
     6 F12 (0, 4)
     6 X21 (1, 0)
   Pre inputs: [(0, 4), (1, 0)]
   
   Inputs  [[(0, 4), 1], [(1, 0), 1]]
   All psbl destinations:  [(3, 8)]
   Closest pe coord:  (3, 8)
   All schedules generated:  [[17]]
   Final closest pe coord and schedule  (3, 8) [17]
Searching for other cps with nodes  ['8', '9']

8. DUMPED cp:  ['8']
   Inputs & Coords:
     8 F21 (1, 1)
     8 X30 (1, 1)
   Pre inputs: [(1, 1), (1, 1)]
   
   Inputs  [[(1, 1), 2]]
   All psbl destinations:  [(7, 1)]
   Closest pe coord:  (7, 1)
   All schedules generated:  [[12]]
   Final closest pe coord and schedule  (7, 1) [12]
Searching for other cps with nodes  ['9']

9. DUMPED cp:  ['9']
   Inputs & Coords:
     9 F22 (1, 2)
     9 X31 (1, 2)
   Pre inputs: [(1, 2), (1, 2)]
   
   Inputs  [[(1, 2), 2]]
   All psbl destinations:  [(7, 2)]
   Closest pe coord:  (7, 2)
   All schedules generated:  [[12]]
   Final closest pe coord and schedule  (7, 2) [12]
Searching for other cps with nodes  []

Input allocation by PEs:
(0, 0)  --->  ['F00', 'int0']
(0, 1)  --->  ['F01', 'X10']
(0, 2)  --->  ['F02', 'X11']
(0, 3)  --->  ['F10', 'F11']
(0, 4)  --->  ['X20', 'F12']
(1, 0)  --->  ['X21', 'F20']
(1, 1)  --->  ['F21', 'X30']
(1, 2)  --->  ['F22', 'X31']

Final results before rescheduling (node.name, node.sched) by PEs: 
(6, 6)  --->  [('1', 24), ('10', 25), ('14', 26), ('16', 27), ('17', 28), ('y20', 29)]
(0, 8)  --->  [('5', 9), ('12', 10), ('15', 11)]
(1, 8)  --->  [('3', 14), ('11', 15)]
(7, 0)  --->  [('7', 13), ('13', 14)]
(6, 7)  --->  [('2', 24)]
(2, 8)  --->  [('4', 17)]
(3, 8)  --->  [('6', 17)]
(7, 1)  --->  [('8', 12)]
(7, 2)  --->  [('9', 12)]


RESCHEDULING
###### 8
     Pred 1 entered:  F21
     Check for pred "F21" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12', 'F21', 'X20', 'F20', 'X20', 'F20', 'X21', 'F21', 'X30']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1)]
     1.0 Inputs are send from pred at step  50
     1.3 Putting inputs to DPR-X directly at node at step  58
     Pred 2 entered:  X30
     Check for pred "X30" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12', 'F21', 'X20', 'F20', 'X20', 'F20', 'X21', 'F21', 'X30']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1)]
     1.0 Inputs are send from pred at step  54
     1.3 Putting inputs to DPR-X directly at node at step  62
     3.0 Arithmetic op is done at step  63
     4.2 Saving results to own MCLM at step  66
     (7, 1) ---> [[], [65], [63], [58, 62, 64], [57, 61]]
###### 7
     Pred 1 entered:  F20
     Check for pred "F20" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11', 'X11', 'F20', 'F12', 'X12', 'F12', 'X13', 'X21', 'F20']
     Walked coords  [(1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0)]
     1.0 Inputs are send from pred at step  39
     1.3 Putting inputs to DPR-X directly at node at step  47
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0', 'F00', 'X00', 'F00', 'X01', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0)]
     1.0 Inputs are send from pred at step  65
     1.3 Putting inputs to DPR-X directly at node at step  74
     3.0 Arithmetic op is done at step  75
     4.0 ---Notification is changed for 13 1
     4.0 Saving results to DPR2 directly at step  76
     (7, 0) ---> [[], [], [75], [47, 74, 76], [46, 73]]
###### 6
     Pred 1 entered:  F12
     Check for pred "F12" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03', 'X10', 'F12', 'F11', 'X11', 'F11', 'X12', 'X20', 'F12']
     Walked coords  [(0, 4), (1, 4), (2, 4), (3, 4), (3, 5), (3, 6), (3, 7), (3, 8)]
     1.0 Inputs are send from pred at step  40
     1.3 Putting inputs to DPR-X directly at node at step  49
     Pred 2 entered:  X21
     Check for pred "X21" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11', 'X11', 'F20', 'F12', 'X12', 'F12', 'X13', 'X21', 'F20']
     Walked coords  [(1, 0), (2, 0), (3, 0), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (3, 6), (3, 7), (3, 8)]
     1.0 Inputs are send from pred at step  54
     1.3 Putting inputs to DPR-X directly at node at step  66
     3.0 Arithmetic op is done at step  67
     4.2 Saving results to own MCLM at step  70
     (3, 8) ---> [[], [69], [67], [49, 66, 68], [48, 65]]
###### 5
     Pred 1 entered:  F11
     Check for pred "F11" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02', 'F10', 'F11', 'F10', 'X10', 'F10', 'X11', 'F10', 'F11']
     Walked coords  [(0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8)]
     1.0 Inputs are send from pred at step  40
     1.3 Putting inputs to DPR-X directly at node at step  47
     Pred 2 entered:  X20
     Check for pred "X20" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03', 'X10', 'F12', 'F11', 'X11', 'F11', 'X12', 'X20', 'F12']
     Walked coords  [(0, 4), (0, 5), (0, 6), (0, 7), (0, 8)]
     1.0 Inputs are send from pred at step  33
     1.3 Putting inputs to DPR-X directly at node at step  39
     3.0 Arithmetic op is done at step  48
     4.0 ---Notification is changed for 12 1
     4.0 Saving results to DPR2 directly at step  49
     (0, 8) ---> [[], [], [48], [47, 39, 49], [46, 38]]
###### 4
     Pred 1 entered:  F10
     Check for pred "F10" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02', 'F10', 'F11', 'F10', 'X10', 'F10', 'X11', 'F10', 'F11']
     Walked coords  [(0, 3), (1, 3), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7), (2, 8)]
     1.0 Inputs are send from pred at step  42
     1.3 Putting inputs to DPR-X directly at node at step  51
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0', 'F00', 'X00', 'F00', 'X01', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7), (2, 8)]
     1.0 Inputs are send from pred at step  67
     1.3 Putting inputs to DPR-X directly at node at step  79
     3.0 Arithmetic op is done at step  80
     4.2 Saving results to own MCLM at step  83
     (2, 8) ---> [[], [82], [80], [51, 79, 81], [50, 78]]
###### 3
     Pred 1 entered:  F02
     Check for pred "F02" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01', 'F02', 'X01', 'F02', 'X02', 'F02', 'X03', 'F02', 'X11']
     Walked coords  [(0, 2), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8)]
     1.0 Inputs are send from pred at step  28
     1.3 Putting inputs to DPR-X directly at node at step  37
     Pred 2 entered:  X11
     Check for pred "X11" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01', 'F02', 'X01', 'F02', 'X02', 'F02', 'X03', 'F02', 'X11']
     Walked coords  [(0, 2), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8)]
     1.0 Inputs are send from pred at step  45
     1.3 Putting inputs to DPR-X directly at node at step  54
     3.0 Arithmetic op is done at step  55
     4.0 ---Notification is changed for 11 1
     4.0 Saving results to DPR2 directly at step  56
     (1, 8) ---> [[], [], [55], [37, 54, 56], [36, 53]]
###### 2
     Pred 1 entered:  F01
     Check for pred "F01" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02', 'F01', 'X00', 'F01', 'X01', 'F01', 'X02', 'F01', 'X10']
     Walked coords  [(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (6, 2), (6, 3), (6, 4), (6, 5), (6, 6), (6, 7)]
     1.0 Inputs are send from pred at step  55
     1.3 Putting inputs to DPR-X directly at node at step  69
     Pred 2 entered:  X10
     Check for pred "X10" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02', 'F01', 'X00', 'F01', 'X01', 'F01', 'X02', 'F01', 'X10']
     Walked coords  [(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (6, 2), (6, 3), (6, 4), (6, 5), (6, 6), (6, 7)]
     1.0 Inputs are send from pred at step  58
     1.3 Putting inputs to DPR-X directly at node at step  72
     3.0 Arithmetic op is done at step  73
     4.2 Saving results to own MCLM at step  76
     (6, 7) ---> [[], [75], [73], [69, 72, 74], [57, 67, 73, 88, 29, 68, 71]]
###### 1
     Pred 1 entered:  F00
     Check for pred "F00" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0', 'F00', 'X00', 'F00', 'X01', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (6, 1), (6, 2), (6, 3), (6, 4), (6, 5), (6, 6)]
     1.0 Inputs are send from pred at step  70
     1.3 Putting inputs to DPR-X directly at node at step  84
     Pred 2 entered:  int0
     Check for pred "int0" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0', 'F00', 'X00', 'F00', 'X01', 'F00', 'int0']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (6, 1), (6, 2), (6, 3), (6, 4), (6, 5), (6, 6)]
     1.0 Inputs are send from pred at step  72
     1.3 Putting inputs to DPR-X directly at node at step  86
     3.0 Arithmetic op is done at step  87
     4.0 ---Notification is changed for 10 1
     4.0 Saving results to DPR2 directly at step  88
     (6, 6) ---> [[], [], [87], [84, 86, 88], [56, 66, 72, 74, 89, 30, 67, 70, 83, 85]]
###### 13
     Pred 1 entered:  7
     Pred 2 entered:  8
     Check for pred "8" =====> in (7, 1) ['8']
     Walked coords  [(7, 1), (7, 0)]
     1.0 Inputs are send from pred at step  69
     1.2 Putting inputs to DPR1 directly at node at step  72
     3.0 Arithmetic op is done at step  77
     4.2 Saving results to own MCLM at step  80
     (7, 0) ---> [[], [79], [75, 77], [47, 74, 76, 72, 78], [46, 73, 71]]
###### 12
     Pred 1 entered:  5
     Pred 2 entered:  6
     Check for pred "6" =====> in (3, 8) ['6']
     Walked coords  [(3, 8), (2, 8), (1, 8), (0, 8)]
     1.0 Inputs are send from pred at step  73
     1.2 Putting inputs to DPR1 directly at node at step  78
     3.0 Arithmetic op is done at step  79
     4.0 ---Notification is changed for 15 1
     4.0 Saving results to DPR2 directly at step  80
     (0, 8) ---> [[], [], [48, 79], [47, 39, 49, 78, 80], [46, 38, 77]]
###### 11
     Pred 1 entered:  3
     Pred 2 entered:  4
     Check for pred "4" =====> in (2, 8) ['4']
     Walked coords  [(2, 8), (1, 8)]
     1.0 Inputs are send from pred at step  86
     1.2 Putting inputs to DPR1 directly at node at step  89
     3.0 Arithmetic op is done at step  90
     4.2 Saving results to own MCLM at step  93
     (1, 8) ---> [[], [92], [55, 90], [37, 54, 56, 89, 91], [36, 53, 76, 88]]
###### 10
     Pred 1 entered:  1
     Pred 2 entered:  2
     Check for pred "2" =====> in (6, 7) ['2']
     Walked coords  [(6, 7), (6, 6)]
     1.0 Inputs are send from pred at step  79
     1.2 Putting inputs to DPR1 directly at node at step  82
     3.0 Arithmetic op is done at step  89
     4.0 ---Notification is changed for 14 1
     4.0 Saving results to DPR2 directly at step  90
     (6, 6) ---> [[], [], [87, 89], [84, 86, 88, 82, 90], [56, 66, 72, 74, 89, 30, 67, 70, 83, 85, 81]]
###### 15
     Pred 1 entered:  12
     Pred 2 entered:  13
     Check for pred "13" =====> in (7, 0) ['13']
     Walked coords  [(7, 0), (7, 1), (7, 2), (7, 3), (7, 4), (7, 5), (7, 6), (7, 7), (7, 8), (6, 8), (5, 8), (4, 8), (3, 8), (2, 8), (1, 8), (0, 8)]
     1.0 Inputs are send from pred at step  83
     1.2 Putting inputs to DPR1 directly at node at step  100
     3.0 Arithmetic op is done at step  101
     4.2 Saving results to own MCLM at step  104
     (0, 8) ---> [[], [103], [48, 79, 101], [47, 39, 49, 78, 80, 100, 102], [46, 38, 77, 99]]
###### 14
     Pred 1 entered:  10
     Pred 2 entered:  11
     Check for pred "11" =====> in (1, 8) ['11']
     Walked coords  [(1, 8), (2, 8), (3, 8), (4, 8), (5, 8), (6, 8), (6, 7), (6, 6)]
     1.0 Inputs are send from pred at step  96
     1.2 Putting inputs to DPR1 directly at node at step  105
     3.0 Arithmetic op is done at step  106
     4.0 ---Notification is changed for 16 1
     4.0 Saving results to DPR2 directly at step  107
     (6, 6) ---> [[], [], [87, 89, 106], [84, 86, 88, 82, 90, 105, 107], [56, 66, 72, 74, 89, 30, 67, 70, 83, 85, 81, 104]]
###### 9
     Pred 1 entered:  F22
     Check for pred "F22" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13', 'F22', 'X21', 'F21', 'X21', 'F21', 'X22', 'F22', 'X31']
     Walked coords  [(1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (6, 2), (7, 2)]
     1.0 Inputs are send from pred at step  38
     1.3 Putting inputs to DPR-X directly at node at step  46
     Pred 2 entered:  X31
     Check for pred "X31" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13', 'F22', 'X21', 'F21', 'X21', 'F21', 'X22', 'F22', 'X31']
     Walked coords  [(1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (6, 2), (7, 2)]
     1.0 Inputs are send from pred at step  45
     1.3 Putting inputs to DPR-X directly at node at step  53
     3.0 Arithmetic op is done at step  54
     4.2 Saving results to own MCLM at step  57
     (7, 2) ---> [[], [56], [54], [46, 53, 55], [86, 45, 52]]
###### 16
     Pred 1 entered:  14
     Pred 2 entered:  15
     Check for pred "15" =====> in (0, 8) ['15']
     Walked coords  [(0, 8), (1, 8), (2, 8), (3, 8), (4, 8), (5, 8), (6, 8), (6, 7), (6, 6)]
     1.0 Inputs are send from pred at step  107
     1.2 Putting inputs to DPR1 directly at node at step  117
     3.0 Arithmetic op is done at step  118
     4.0 ---Notification is changed for 17 1
     4.0 Saving results to DPR2 directly at step  119
     (6, 6) ---> [[], [], [87, 89, 106, 118], [84, 86, 88, 82, 90, 105, 107, 117, 119], [56, 66, 72, 74, 89, 30, 67, 70, 83, 85, 81, 104, 116]]
###### 17
     Pred 1 entered:  16
     Pred 2 entered:  9
     Check for pred "9" =====> in (7, 2) ['9']
     Walked coords  [(7, 2), (7, 3), (7, 4), (7, 5), (7, 6), (6, 6)]
     1.0 Inputs are send from pred at step  62
     1.2 Putting inputs to DPR1 directly at node at step  69
     3.0 Arithmetic op is done at step  120
     4.2 Saving results to own MCLM at step  123
     (6, 6) ---> [[], [122], [87, 89, 106, 118, 120], [84, 86, 88, 82, 90, 105, 107, 117, 119, 69, 121], [56, 66, 72, 74, 89, 30, 67, 70, 83, 85, 81, 104, 116, 68]]
###### y20
     Pred 1 entered:  17
     1.4 This is actually last node at step  123

Final results after rescheduling (node.name, node.sched): by PEs
(6, 6)  --->  [('1', 88), ('10', 90), ('14', 107), ('16', 119), ('17', 123), ('y20', 123)]
(0, 8)  --->  [('5', 49), ('12', 80), ('15', 104)]
(1, 8)  --->  [('3', 56), ('11', 93)]
(7, 0)  --->  [('7', 76), ('13', 80)]
(6, 7)  --->  [('2', 76)]
(2, 8)  --->  [('4', 83)]
(3, 8)  --->  [('6', 70)]
(7, 1)  --->  [('8', 66)]
(7, 2)  --->  [('9', 57)]

PE map 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Node scheds and CCM commands:
1  --->  [(1, 0), ['CCM1', 1, 0, 'PE1'], [(0, 4), ['CCM1', 1, 1, 'PE1']], [(0, 0), ['CCM1', 1, 1, 'PE1']], [(0, 3), ['CCM1', 1, 1, 'PE1']], [(0, 2), ['CCM1', 1, 1, 'PE1']], [(0, 1), ['CCM1', 1, 1, 'PE1']], [(1, 1), ['CCM1', 1, 0, 'PE1']], [(1, 2), ['CCM1', 1, 1, 'PE1']], [(1, 3), ['CCM1', 1, 1, 'PE1']]]
2  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'DPR1']], [(0, 2), ['CCM1', 2, 0, 'PE1']], [(0, 1), ['CCM3', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
3  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(1, 0), ['CCM1', 3, 1, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 3, 0, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 3, 1, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 3, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM1', 3, 2, 'PE1']]]
6  --->  [(2, 0), ['CCM6', 'DPR1'], [(0, 3), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
4  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM1', 4, 0, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
5  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(0, 4), ['CCM3', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 5, 1, 'PE1']], [(0, 1), ['CCM1', 5, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 5, 3, 'PE1']], [(0, 2), ['CCM1', 5, 0, 'PE1']], [(1, 3), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM1', 5, 1, 'PE1']]]
8  --->  [(2, 0), ['CCM6', 'DPR2'], [(0, 3), ['CCM6', 'DPR2']], [(0, 4), ['CCM5', 'DPR3']], [(0, 2), ['CCM6', 'DPR2']], [(1, 1), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM1', 8, 3, 'PE1']], [(0, 1), ['CCM3', 'PERouter']], [(1, 3), ['CCM1', 8, 4, 'PE1']]]
9  --->  [(2, 0), ['CCM4', '*'], [(0, 3), ['CCM4', '*']], [(0, 4), ['CCM2', 'MCLM1']], [(0, 2), ['CCM4', '*']], [(1, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 9, 0, 'PE1']], [(1, 2), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM3', 'PERouter']]]
10  --->  [(2, 0), ['CCM5', 'DPR3'], [(0, 3), ['CCM5', 'DPR2']], [(0, 2), ['CCM5', 'DPR2']], [(1, 1), ['CCM4', '*']], [(0, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'DPR1']], [(0, 0), ['CCM1', 10, 1, 'PE1']], [(1, 2), ['CCM5', 'DPR3']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 10, 3, 'PE1']], [(0, 2), ['CCM1', 10, 4, 'PE1']], [(1, 2), ['CCM1', 10, 2, 'PE1']], [(2, 7), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'NodeRouter']]]
11  --->  [(2, 0), ['CCM2', 'MCLM1'], [(1, 1), ['CCM5', 'DPR3']], [(0, 1), ['CCM4', '*']], [(1, 0), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'DPR2']], [(0, 4), ['CCM1', 11, 2, 'PE1']], [(1, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM1', 11, 3, 'PE1']], [(3, 0), ['CCM6', 'DPR1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']]]
7  --->  [(0, 4), ['CCM4', '*'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 7, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 7, 1, 'PE1']], [(3, 2), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'NodeRouter']]]
12  --->  [(1, 1), ['CCM2', 'MCLM1'], [(0, 1), ['CCM5', 'DPR2']], [(1, 0), ['CCM6', 'DPR2']], [(0, 0), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 4), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 12, 0, 'PE1']], [(1, 2), ['CCM1', 12, 1, 'PE1']], [(2, 7), ['CCM6', 'DPR2']]]
13  --->  [(1, 0), ['CCM4', '*'], [(0, 0), ['CCM5', 'DPR2']], [(2, 0), ['CCM1', 13, 0, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 13, 4, 'PE1']], [(0, 3), ['CCM1', 13, 4, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(2, 7), ['CCM4', '*']]]
14  --->  [(1, 0), ['CCM5', 'DPR3'], [(2, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 14, 2, 'PE1']], [(1, 2), ['CCM1', 14, 0, 'PE1']], [(1, 0), ['CCM1', 14, 1, 'PE1']], [(2, 4), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 14, 6, 'PE1']], [(0, 0), ['CCM1', 14, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']], [(2, 7), ['CCM5', 'DPR3']]]
15  --->  [(1, 0), ['CCM2', 'MCLM1'], [(2, 0), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 15, 3, 'PE1']], [(0, 3), ['CCM1', 15, 3, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(2, 7), ['CCM2', 'MCLM1']]]
22  --->  [(0, 3), ['CCM6', 'DPR1'], [(0, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'DPR2']], [(3, 0), ['CCM5', 'DPR2']], [(2, 4), ['CCM2', 'MCLM1']], [(1, 4), ['CCM1', 22, 0, 'PE1']], [(3, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(4, 5), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(5, 7), ['CCM5', 'DPR3']]]
23  --->  [(0, 3), ['CCM4', '+'], [(0, 0), ['CCM4', '+']], [(3, 1), ['CCM4', '*']], [(1, 4), ['CCM3', 'PERouter']], [(3, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(4, 4), ['CCM6', 'DPR1']], [(3, 4), ['CCM6', 'DPR1']], [(4, 2), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 1), ['CCM6', 'DPR2']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 23, 3, 'PE1']], [(1, 0), ['CCM1', 23, 3, 'PE1']], [(0, 4), ['CCM1', 23, 3, 'PE1']], [(1, 2), ['CCM1', 23, 6, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(5, 7), ['CCM2', 'MCLM1']]]
24  --->  [(0, 3), ['CCM5', 'DPR3'], [(0, 0), ['CCM5', 'DPR2']], [(0, 1), ['CCM1', 24, 2, 'PE1']], [(3, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 24, 1, 'PE1']], [(2, 3), ['CCM6', 'DPR1']], [(2, 4), ['CCM1', 24, 0, 'PE1']], [(1, 4), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM5', 'DPR3']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM1', 24, 3, 'PE1']], [(0, 2), ['CCM1', 24, 7, 'PE1']], [(1, 2), ['CCM3', 'PERouter']]]
25  --->  [(0, 3), ['CCM2', 'MCLM1'], [(0, 1), ['CCM3', 'PERouter']], [(3, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 4), ['CCM3', 'PERouter']], [(4, 4), ['CCM6', 'DPR2']], [(3, 4), ['CCM6', 'DPR2']], [(4, 2), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'DPR2']], [(1, 5), ['CCM6', 'DPR1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 6), ['CCM6', 'DPR2']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(5, 7), ['CCM1', 25, 0, 'PE1']]]
17  --->  [(0, 2), ['CCM6', 'DPR1'], [(1, 0), ['CCM1', 17, 2, 'PE1']], [(3, 1), ['CCM6', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 4), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(3, 2), ['CCM4', '*']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 17, 6, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 17, 6, 'PE1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 7), ['CCM1', 17, 0, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(5, 7), ['CCM6', 'DPR1']]]
18  --->  [(0, 2), ['CCM4', '+'], [(1, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR2']], [(1, 4), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(3, 2), ['CCM5', 'DPR3']], [(1, 1), ['CCM1', 18, 3, 'PE1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 18, 1, 'PE1']], [(2, 7), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']]]
19  --->  [(0, 2), ['CCM5', 'DPR2'], [(0, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(2, 4), ['CCM6', 'DPR2']], [(1, 3), ['CCM4', '*']], [(1, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 19, 3, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM1', 19, 7, 'PE1']], [(0, 2), ['CCM1', 19, 7, 'PE1']], [(2, 7), ['CCM6', 'NodeRouter']]]
16  --->  [(1, 1), ['CCM6', 'NodeRouter'], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 16, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 16, 0, 'PE1']], [(3, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 16, 1, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 16, 7, 'PE1']]]
20  --->  [(0, 1), ['CCM4', '+'], [(3, 0), ['CCM6', 'DPR2']], [(2, 4), ['CCM4', '*']], [(1, 3), ['CCM5', 'DPR2']], [(1, 4), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR1']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(5, 7), ['CCM6', 'DPR2']]]
21  --->  [(0, 1), ['CCM5', 'DPR3'], [(0, 0), ['CCM6', 'DPR1']], [(3, 0), ['CCM4', '*']], [(2, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM1', 21, 0, 'PE1']], [(1, 1), ['CCM1', 21, 6, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 21, 6, 'PE1']], [(0, 1), ['CCM1', 21, 1, 'PE1']], [(1, 2), ['CCM1', 21, 4, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 21, 9, 'PE1']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 21, 10, 'PE1']], [(5, 7), ['CCM4', '*']]]
27  --->  [(0, 3), ['CCM1', 27, 2, 'PE1'], [(0, 0), ['CCM3', 'PERouter']], [(3, 1), ['CCM1', 27, 0, 'PE1']], [(2, 1), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR1']], [(4, 4), ['CCM5', 'DPR3']], [(3, 4), ['CCM5', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(4, 2), ['CCM1', 27, 0, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']], [(5, 7), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM3', 'PERouter']]]
28  --->  [(0, 3), ['CCM3', 'PERouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 1), ['CCM3', 'PERouter']], [(4, 0), ['CCM6', 'DPR2']], [(4, 4), ['CCM2', 'MCLM1']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM3', 'PERouter']], [(1, 5), ['CCM6', 'DPR2']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 28, 6, 'PE1']], [(1, 0), ['CCM1', 28, 9, 'PE1']], [(0, 7), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'NodeRouter']], [(5, 3), ['CCM6', 'DPR1']], [(6, 5), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']]]
29  --->  [(0, 3), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM6', 'DPR1']], [(4, 0), ['CCM4', '*']], [(0, 5), ['CCM6', 'DPR1']], [(4, 2), ['CCM6', 'NodeRouter']], [(1, 5), ['CCM4', '*']], [(1, 1), ['CCM1', 29, 8, 'PE1']], [(0, 3), ['CCM1', 29, 7, 'PE1']], [(0, 2), ['CCM1', 29, 6, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM1', 29, 0, 'PE1']], [(0, 4), ['CCM1', 29, 9, 'PE1']]]
32  --->  [(0, 2), ['CCM6', 'DPR1'], [(2, 2), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM6', 'DPR1']], [(1, 3), ['CCM5', 'DPR2']], [(4, 3), ['CCM5', 'DPR3']], [(4, 4), ['CCM6', 'NodeRouter']], [(5, 2), ['CCM6', 'DPR1']], [(5, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 6), ['CCM4', '*']], [(1, 1), ['CCM1', 32, 9, 'PE1']], [(0, 3), ['CCM1', 32, 7, 'PE1']], [(3, 6), ['CCM6', 'DPR2']], [(0, 4), ['CCM3', 'PERouter']]]
33  --->  [(0, 2), ['CCM4', '+'], [(2, 2), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 33, 1, 'PE1']], [(3, 0), ['CCM4', '+']], [(4, 3), ['CCM2', 'MCLM1']], [(0, 6), ['CCM5', 'DPR2']], [(2, 5), ['CCM6', 'DPR1']], [(4, 5), ['CCM6', 'DPR2']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 33, 10, 'PE1']], [(0, 7), ['CCM6', 'DPR2']], [(0, 3), ['CCM3', 'PERouter']], [(3, 6), ['CCM4', '*']], [(0, 4), ['CCM6', 'NodeRouter']]]
34  --->  [(0, 2), ['CCM5', 'DPR3'], [(2, 2), ['CCM5', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM5', 'DPR3']], [(4, 1), ['CCM6', 'DPR1']], [(1, 5), ['CCM1', 34, 0, 'PE1']], [(4, 5), ['CCM4', '*']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 7), ['CCM4', '*']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 34, 10, 'PE1']], [(3, 6), ['CCM5', 'DPR2']], [(1, 2), ['CCM1', 34, 10, 'PE1']], [(0, 2), ['CCM1', 34, 7, 'PE1']]]
35  --->  [(0, 2), ['CCM2', 'MCLM1'], [(2, 3), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 0), ['CCM2', 'MCLM1']], [(2, 2), ['CCM4', '+']], [(4, 1), ['CCM4', '*']], [(0, 0), ['CCM1', 35, 0, 'PE1']], [(4, 3), ['CCM1', 35, 0, 'PE1']], [(3, 4), ['CCM6', 'DPR1']], [(1, 5), ['CCM3', 'PERouter']], [(4, 5), ['CCM5', 'DPR3']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 7), ['CCM5', 'DPR2']], [(0, 3), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']]]
26  --->  [(0, 1), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 26, 1, 'PE1']], [(2, 4), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(4, 4), ['CCM4', '*']], [(3, 4), ['CCM4', '*']], [(0, 1), ['CCM1', 26, 0, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 26, 7, 'PE1']], [(0, 4), ['CCM1', 26, 10, 'PE1']], [(5, 7), ['CCM3', 'PERouter']], [(0, 2), ['CCM1', 26, 7, 'PE1']]]
30  --->  [(0, 0), ['CCM4', '+'], [(1, 3), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM5', 'DPR2']], [(0, 5), ['CCM4', '*']], [(4, 4), ['CCM1', 30, 0, 'PE1']], [(1, 5), ['CCM5', 'DPR3']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 30, 6, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(3, 6), ['CCM6', 'DPR1']], [(0, 1), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']]]
31  --->  [(0, 0), ['CCM5', 'DPR2'], [(0, 0), ['CCM1', 31, 0, 'PE1']], [(1, 3), ['CCM4', '+']], [(4, 3), ['CCM4', '*']], [(0, 5), ['CCM5', 'DPR2']], [(4, 4), ['CCM3', 'PERouter']], [(1, 5), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 6), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 31, 13, 'PE1']]]
37  --->  [(0, 2), ['CCM1', 37, 2, 'PE1'], [(2, 3), ['CCM5', 'DPR3']], [(2, 2), ['CCM2', 'MCLM1']], [(3, 0), ['CCM1', 37, 0, 'PE1']], [(4, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 37, 1, 'PE1']], [(4, 3), ['CCM6', 'NodeRouter']], [(3, 4), ['CCM5', 'DPR2']], [(1, 6), ['CCM6', 'DPR1']], [(4, 6), ['CCM6', 'DPR1']], [(6, 0), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 37, 3, 'PE1']], [(1, 8), ['CCM6', 'DPR1']], [(1, 2), ['CCM3', 'PERouter']]]
38  --->  [(0, 2), ['CCM3', 'PERouter'], [(2, 3), ['CCM2', 'MCLM1']], [(2, 1), ['CCM6', 'DPR1']], [(3, 0), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 5), ['CCM6', 'DPR1']], [(5, 2), ['CCM6', 'DPR2']], [(2, 5), ['CCM6', 'DPR2']], [(4, 5), ['CCM1', 38, 0, 'PE1']], [(1, 1), ['CCM1', 38, 9, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM1', 38, 3, 'PE1']], [(0, 3), ['CCM1', 38, 3, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']]]
39  --->  [(0, 2), ['CCM6', 'NodeRouter'], [(3, 0), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM1', 39, 0, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM4', '+']], [(4, 1), ['CCM1', 39, 0, 'PE1']], [(5, 2), ['CCM4', '*']], [(2, 5), ['CCM4', '*']], [(4, 5), ['CCM3', 'PERouter']], [(4, 6), ['CCM6', 'DPR2']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 39, 9, 'PE1']], [(3, 7), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 8), ['CCM6', 'DPR2']]]
43  --->  [(0, 0), ['CCM6', 'DPR1'], [(4, 0), ['CCM4', '+']], [(0, 5), ['CCM1', 43, 0, 'PE1']], [(2, 6), ['CCM5', 'DPR3']], [(0, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM1', 43, 0, 'PE1']], [(5, 4), ['CCM6', 'DPR1']], [(6, 0), ['CCM4', '*']], [(1, 7), ['CCM6', 'DPR2']], [(1, 0), ['CCM1', 43, 12, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 43, 14, 'PE1']], [(1, 2), ['CCM1', 43, 12, 'PE1']]]
44  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(4, 0), ['CCM5', 'DPR3']], [(0, 5), ['CCM3', 'PERouter']], [(2, 6), ['CCM2', 'MCLM1']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 44, 8, 'PE1']], [(5, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 44, 8, 'PE1']], [(6, 0), ['CCM5', 'DPR3']], [(1, 7), ['CCM4', '*']], [(4, 6), ['CCM1', 44, 0, 'PE1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']]]
45  --->  [(0, 0), ['CCM5', 'DPR2'], [(3, 3), ['CCM6', 'DPR1']], [(4, 0), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(6, 0), ['CCM2', 'MCLM1']], [(1, 7), ['CCM5', 'DPR3']], [(4, 6), ['CCM3', 'PERouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']]]
46  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM1', 46, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 7), ['CCM2', 'MCLM1']], [(0, 1), ['CCM1', 46, 10, 'PE1']], [(4, 6), ['CCM6', 'NodeRouter']], [(6, 5), ['CCM6', 'DPR2']], [(1, 1), ['CCM1', 46, 12, 'PE1']], [(3, 7), ['CCM6', 'DPR2']], [(7, 2), ['CCM6', 'DPR1']]]
47  --->  [(0, 0), ['CCM5', 'DPR3'], [(2, 1), ['CCM4', '+']], [(1, 3), ['CCM4', '+']], [(3, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM1', 47, 0, 'PE1']], [(2, 6), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(6, 0), ['CCM1', 47, 0, 'PE1']], [(6, 5), ['CCM4', '*']], [(1, 1), ['CCM3', 'PERouter']], [(3, 7), ['CCM4', '*']], [(5, 6), ['CCM6', 'DPR1']], [(7, 0), ['CCM6', 'DPR1']], [(0, 8), ['CCM6', 'DPR1']]]
48  --->  [(0, 0), ['CCM2', 'MCLM1'], [(2, 1), ['CCM5', 'DPR2']], [(1, 3), ['CCM5', 'DPR3']], [(3, 3), ['CCM4', '*']], [(4, 0), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 48, 1, 'PE1']], [(5, 1), ['CCM6', 'DPR1']], [(2, 6), ['CCM6', 'NodeRouter']], [(5, 0), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(6, 0), ['CCM3', 'PERouter']], [(1, 7), ['CCM1', 48, 0, 'PE1']], [(6, 5), ['CCM5', 'DPR3']], [(6, 2), ['CCM6', 'DPR1']], [(1, 1), ['CCM6', 'NodeRouter']], [(3, 7), ['CCM5', 'DPR2']], [(4, 7), ['CCM6', 'DPR1']], [(0, 1), ['CCM1', 48, 0, 'PE1']], [(1, 1), ['CCM1', 48, 3, 'PE1']], [(0, 8), ['CCM4', '*']]]
36  --->  [(2, 3), ['CCM4', '*'], [(2, 2), ['CCM5', 'DPR3']], [(4, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM3', 'PERouter']], [(4, 3), ['CCM3', 'PERouter']], [(3, 4), ['CCM4', '+']], [(1, 5), ['CCM6', 'NodeRouter']], [(4, 5), ['CCM2', 'MCLM1']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 36, 12, 'PE1']], [(0, 3), ['CCM1', 36, 7, 'PE1']], [(0, 2), ['CCM6', 'NodeRouter']], [(6, 1), ['CCM6', 'DPR1']], [(1, 2), ['CCM1', 36, 1, 'PE1']]]
40  --->  [(2, 1), ['CCM6', 'DPR2'], [(2, 3), ['CCM1', 40, 0, 'PE1']], [(2, 2), ['CCM3', 'PERouter']], [(0, 5), ['CCM5', 'DPR3']], [(4, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 40, 1, 'PE1']], [(2, 5), ['CCM5', 'DPR2']], [(4, 5), ['CCM6', 'NodeRouter']], [(4, 6), ['CCM4', '*']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 40, 7, 'PE1']]]
41  --->  [(2, 1), ['CCM4', '*'], [(2, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM2', 'MCLM1']], [(4, 1), ['CCM6', 'NodeRouter']], [(5, 2), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 6), ['CCM6', 'DPR2']], [(4, 6), ['CCM5', 'DPR3']], [(1, 7), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 41, 12, 'PE1']], [(0, 3), ['CCM3', 'PERouter']]]
42  --->  [(2, 1), ['CCM5', 'DPR2'], [(2, 3), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']], [(0, 0), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM4', '*']], [(0, 1), ['CCM1', 42, 0, 'PE1']], [(4, 6), ['CCM2', 'MCLM1']], [(6, 0), ['CCM6', 'DPR2']], [(5, 5), ['CCM6', 'DPR1']], [(0, 3), ['CCM1', 42, 12, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']]]
49  --->  [(1, 3), ['CCM2', 'MCLM1'], [(2, 1), ['CCM4', '+']], [(3, 3), ['CCM5', 'DPR2']], [(4, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(6, 0), ['CCM6', 'NodeRouter']], [(1, 7), ['CCM3', 'PERouter']], [(6, 5), ['CCM2', 'MCLM1']], [(0, 1), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(3, 8), ['CCM6', 'DPR1']], [(0, 8), ['CCM5', 'DPR2']]]
50  --->  [(2, 1), ['CCM5', 'DPR2'], [(3, 3), ['CCM4', '+']], [(5, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 50, 0, 'PE1']], [(1, 7), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 50, 12, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']]]
51  --->  [(1, 3), ['CCM1', 51, 0, 'PE1'], [(3, 3), ['CCM5', 'DPR2']], [(5, 1), ['CCM4', '*']], [(0, 0), ['CCM3', 'PERouter']], [(5, 4), ['CCM6', 'DPR1']], [(0, 1), ['CCM3', 'PERouter']], [(2, 8), ['CCM6', 'DPR1']]]
52  --->  [(1, 3), ['CCM3', 'PERouter'], [(3, 3), ['CCM6', 'DPR1']], [(5, 1), ['CCM5', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 52, 1, 'PE1']], [(0, 6), ['CCM6', 'DPR1']], [(6, 4), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 52, 14, 'PE1']], [(1, 0), ['CCM1', 52, 13, 'PE1']]]
53  --->  [(1, 3), ['CCM6', 'NodeRouter'], [(3, 3), ['CCM4', '+']], [(3, 5), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(5, 1), ['CCM4', '+']], [(0, 6), ['CCM4', '+']], [(6, 5), ['CCM1', 53, 0, 'PE1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM1', 53, 0, 'PE1']], [(7, 2), ['CCM6', 'DPR2']]]
58  --->  [(2, 1), ['CCM6', 'DPR1'], [(3, 4), ['CCM5', 'DPR3']], [(3, 5), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(5, 4), ['CCM4', '+']], [(3, 6), ['CCM2', 'MCLM1']], [(6, 2), ['CCM5', 'DPR2']], [(6, 4), ['CCM5', 'DPR3']], [(7, 1), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']]]
59  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM2', 'MCLM1']], [(1, 6), ['CCM6', 'DPR2']], [(5, 0), ['CCM6', 'DPR1']], [(5, 1), ['CCM1', 59, 0, 'PE1']], [(5, 5), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(5, 4), ['CCM5', 'DPR3']], [(6, 4), ['CCM2', 'MCLM1']], [(0, 0), ['CCM1', 59, 0, 'PE1']], [(4, 7), ['CCM1', 59, 0, 'PE1']]]
60  --->  [(2, 1), ['CCM5', 'DPR2'], [(1, 6), ['CCM4', '*']], [(3, 5), ['CCM1', 60, 0, 'PE1']], [(5, 1), ['CCM3', 'PERouter']], [(5, 5), ['CCM4', '*']], [(5, 4), ['CCM2', 'MCLM1']], [(6, 3), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(6, 2), ['CCM6', 'DPR1']], [(4, 7), ['CCM3', 'PERouter']], [(7, 2), ['CCM1', 60, 0, 'PE1']]]
61  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM1', 61, 0, 'PE1']], [(1, 6), ['CCM5', 'DPR3']], [(5, 0), ['CCM6', 'DPR2']], [(3, 5), ['CCM3', 'PERouter']], [(5, 1), ['CCM6', 'NodeRouter']], [(5, 5), ['CCM5', 'DPR3']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 61, 12, 'PE1']], [(6, 2), ['CCM4', '+']], [(6, 4), ['CCM1', 61, 0, 'PE1']], [(4, 7), ['CCM6', 'NodeRouter']], [(7, 2), ['CCM3', 'PERouter']]]
62  --->  [(2, 1), ['CCM5', 'DPR3'], [(3, 4), ['CCM3', 'PERouter']], [(1, 6), ['CCM2', 'MCLM1']], [(5, 0), ['CCM4', '*']], [(3, 5), ['CCM6', 'NodeRouter']], [(5, 5), ['CCM2', 'MCLM1']], [(6, 3), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(6, 2), ['CCM5', 'DPR3']], [(6, 4), ['CCM3', 'PERouter']], [(7, 1), ['CCM6', 'DPR2']], [(7, 2), ['CCM6', 'NodeRouter']]]
63  --->  [(2, 1), ['CCM2', 'MCLM1'], [(3, 4), ['CCM6', 'NodeRouter']], [(5, 0), ['CCM5', 'DPR2']], [(3, 6), ['CCM1', 63, 0, 'PE1']], [(6, 3), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(6, 2), ['CCM2', 'MCLM1']], [(6, 4), ['CCM6', 'NodeRouter']], [(7, 1), ['CCM4', '*']], [(0, 0), ['CCM1', 63, 1, 'PE1']]]
56  --->  [(3, 4), ['CCM6', 'DPR1'], [(3, 5), ['CCM4', '*']], [(5, 4), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 6), ['CCM4', '+']], [(6, 2), ['CCM6', 'DPR2']], [(6, 4), ['CCM6', 'DPR2']], [(4, 7), ['CCM5', 'DPR3']], [(5, 6), ['CCM5', 'DPR2']], [(1, 8), ['CCM5', 'DPR2']], [(0, 1), ['CCM1', 56, 14, 'PE1']], [(7, 2), ['CCM2', 'MCLM1']]]
57  --->  [(3, 4), ['CCM4', '+'], [(3, 5), ['CCM5', 'DPR3']], [(5, 4), ['CCM5', 'DPR2']], [(0, 0), ['CCM1', 57, 10, 'PE1']], [(3, 6), ['CCM5', 'DPR3']], [(6, 2), ['CCM4', '*']], [(6, 4), ['CCM4', '*']], [(4, 7), ['CCM2', 'MCLM1']], [(0, 1), ['CCM3', 'PERouter']]]
54  --->  [(3, 3), ['CCM5', 'DPR2'], [(0, 0), ['CCM6', 'NodeRouter']], [(5, 1), ['CCM5', 'DPR3']], [(0, 6), ['CCM5', 'DPR2']], [(0, 0), ['CCM1', 54, 0, 'PE1']], [(4, 7), ['CCM6', 'DPR2']], [(5, 6), ['CCM6', 'DPR2']], [(6, 5), ['CCM3', 'PERouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(1, 8), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(7, 2), ['CCM4', '*']]]
66  --->  [(3, 3), ['CCM6', 'DPR1'], [(1, 6), ['CCM6', 'NodeRouter']], [(5, 3), ['CCM6', 'DPR1']], [(0, 7), ['CCM5', 'DPR2']], [(5, 5), ['CCM6', 'NodeRouter']], [(5, 4), ['CCM6', 'NodeRouter']], [(5, 6), ['CCM4', '+']], [(6, 2), ['CCM3', 'PERouter']], [(3, 8), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']]]
67  --->  [(3, 3), ['CCM4', '+'], [(5, 6), ['CCM5', 'DPR3']], [(6, 3), ['CCM1', 67, 0, 'PE1']], [(6, 2), ['CCM6', 'NodeRouter']], [(3, 8), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(7, 1), ['CCM1', 67, 0, 'PE1']]]
68  --->  [(3, 3), ['CCM5', 'DPR2'], [(5, 6), ['CCM2', 'MCLM1']], [(6, 3), ['CCM3', 'PERouter']], [(3, 8), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 68, 0, 'PE1']], [(7, 1), ['CCM3', 'PERouter']]]
69  --->  [(3, 3), ['CCM4', '+'], [(5, 3), ['CCM6', 'DPR2']], [(6, 3), ['CCM6', 'NodeRouter']], [(3, 8), ['CCM2', 'MCLM1']], [(6, 7), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(7, 1), ['CCM6', 'NodeRouter']], [(6, 6), ['CCM6', 'DPR1']]]
70  --->  [(3, 3), ['CCM5', 'DPR3'], [(2, 5), ['CCM6', 'DPR1']], [(5, 3), ['CCM4', '*']], [(5, 3), ['CCM6', 'DPR1']], [(6, 1), ['CCM6', 'DPR1']], [(5, 6), ['CCM1', 70, 0, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 70, 1, 'PE1']]]
71  --->  [(3, 3), ['CCM2', 'MCLM1'], [(2, 5), ['CCM4', '+']], [(5, 0), ['CCM6', 'DPR1']], [(5, 3), ['CCM5', 'DPR2']], [(3, 7), ['CCM6', 'DPR1']], [(5, 6), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(3, 8), ['CCM1', 71, 0, 'PE1']]]
55  --->  [(3, 5), ['CCM6', 'DPR2'], [(5, 1), ['CCM2', 'MCLM1']], [(5, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 6), ['CCM6', 'DPR1']], [(4, 7), ['CCM4', '*']], [(5, 6), ['CCM4', '*']], [(6, 5), ['CCM6', 'NodeRouter']], [(1, 8), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(7, 2), ['CCM5', 'DPR3']]]
64  --->  [(1, 6), ['CCM1', 64, 0, 'PE1'], [(0, 7), ['CCM6', 'DPR1']], [(5, 5), ['CCM1', 64, 0, 'PE1']], [(5, 4), ['CCM1', 64, 0, 'PE1']], [(3, 6), ['CCM3', 'PERouter']], [(6, 3), ['CCM5', 'DPR3']], [(7, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM3', 'PERouter']]]
65  --->  [(1, 6), ['CCM3', 'PERouter'], [(0, 7), ['CCM4', '+']], [(5, 5), ['CCM3', 'PERouter']], [(5, 4), ['CCM3', 'PERouter']], [(3, 6), ['CCM6', 'NodeRouter']], [(6, 3), ['CCM2', 'MCLM1']], [(5, 6), ['CCM6', 'DPR1']], [(6, 2), ['CCM1', 65, 0, 'PE1']], [(7, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 65, 1, 'PE1']]]
72  --->  [(2, 5), ['CCM5', 'DPR3'], [(5, 0), ['CCM4', '+']], [(5, 3), ['CCM4', '+']], [(5, 3), ['CCM6', 'DPR1']], [(6, 1), ['CCM6', 'DPR2']], [(3, 7), ['CCM4', '+']], [(5, 6), ['CCM6', 'NodeRouter']], [(6, 7), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(7, 0), ['CCM6', 'DPR1']], [(3, 8), ['CCM3', 'PERouter']]]
73  --->  [(2, 5), ['CCM2', 'MCLM1'], [(5, 0), ['CCM5', 'DPR2']], [(0, 6), ['CCM6', 'DPR1']], [(5, 3), ['CCM5', 'DPR2']], [(6, 1), ['CCM4', '*']], [(3, 7), ['CCM5', 'DPR2']], [(6, 1), ['CCM6', 'DPR1']], [(6, 7), ['CCM4', '*']], [(3, 8), ['CCM6', 'NodeRouter']]]
74  --->  [(0, 6), ['CCM4', '+'], [(5, 3), ['CCM4', '+']], [(6, 1), ['CCM5', 'DPR2']], [(7, 0), ['CCM6', 'DPR2']], [(6, 7), ['CCM5', 'DPR3']]]
75  --->  [(0, 6), ['CCM5', 'DPR3'], [(2, 5), ['CCM1', 75, 0, 'PE1']], [(5, 3), ['CCM5', 'DPR2']], [(6, 1), ['CCM4', '+']], [(7, 0), ['CCM4', '*']], [(6, 7), ['CCM2', 'MCLM1']]]
76  --->  [(0, 6), ['CCM2', 'MCLM1'], [(2, 5), ['CCM3', 'PERouter']], [(0, 7), ['CCM6', 'DPR1']], [(6, 1), ['CCM5', 'DPR2']], [(7, 0), ['CCM5', 'DPR2']]]
77  --->  [(2, 5), ['CCM6', 'NodeRouter'], [(0, 7), ['CCM4', '+']], [(3, 7), ['CCM6', 'DPR1']], [(7, 0), ['CCM4', '+']], [(6, 7), ['CCM1', 77, 0, 'PE1']]]
87  --->  [(5, 0), ['CCM6', 'DPR1'], [(6, 6), ['CCM4', '*']]]
88  --->  [(5, 0), ['CCM4', '+'], [(6, 6), ['CCM5', 'DPR2']]]
89  --->  [(5, 0), ['CCM5', 'DPR2'], [(1, 8), ['CCM6', 'DPR1']], [(6, 6), ['CCM4', '+']]]
78  --->  [(0, 6), ['CCM1', 78, 0, 'PE1'], [(0, 7), ['CCM5', 'DPR3']], [(3, 7), ['CCM4', '+']], [(7, 0), ['CCM5', 'DPR3']], [(0, 8), ['CCM6', 'DPR1']], [(6, 7), ['CCM3', 'PERouter']]]
79  --->  [(0, 6), ['CCM3', 'PERouter'], [(0, 7), ['CCM2', 'MCLM1']], [(3, 7), ['CCM5', 'DPR3']], [(2, 8), ['CCM6', 'DPR2']], [(7, 0), ['CCM2', 'MCLM1']], [(0, 8), ['CCM4', '+']], [(6, 7), ['CCM6', 'NodeRouter']]]
80  --->  [(0, 6), ['CCM6', 'NodeRouter'], [(3, 7), ['CCM2', 'MCLM1']], [(6, 1), ['CCM6', 'DPR1']], [(2, 8), ['CCM4', '*']], [(0, 8), ['CCM5', 'DPR2']]]
93  --->  [(5, 0), ['CCM6', 'DPR1']]
94  --->  [(5, 0), ['CCM4', '+'], [(5, 3), ['CCM6', 'DPR1']], [(1, 8), ['CCM1', 94, 0, 'PE1']]]
95  --->  [(5, 0), ['CCM5', 'DPR2'], [(5, 3), ['CCM4', '+']], [(6, 1), ['CCM6', 'DPR1']], [(1, 8), ['CCM3', 'PERouter']]]
96  --->  [(5, 0), ['CCM4', '+'], [(5, 3), ['CCM5', 'DPR2']], [(6, 1), ['CCM4', '+']], [(1, 8), ['CCM6', 'NodeRouter']]]
97  --->  [(5, 0), ['CCM5', 'DPR3'], [(5, 3), ['CCM4', '+']], [(6, 1), ['CCM5', 'DPR2']]]
98  --->  [(5, 0), ['CCM2', 'MCLM1'], [(5, 3), ['CCM5', 'DPR3']], [(6, 1), ['CCM4', '+']]]
81  --->  [(0, 7), ['CCM1', 81, 0, 'PE1'], [(6, 1), ['CCM4', '+']], [(2, 8), ['CCM5', 'DPR3']], [(7, 0), ['CCM1', 81, 0, 'PE1']]]
82  --->  [(0, 7), ['CCM3', 'PERouter'], [(6, 1), ['CCM5', 'DPR2']], [(3, 7), ['CCM1', 82, 0, 'PE1']], [(2, 8), ['CCM2', 'MCLM1']], [(6, 6), ['CCM6', 'DPR1']], [(7, 0), ['CCM3', 'PERouter']]]
83  --->  [(0, 7), ['CCM6', 'NodeRouter'], [(3, 7), ['CCM3', 'PERouter']], [(7, 0), ['CCM6', 'NodeRouter']]]
99  --->  [(5, 3), ['CCM2', 'MCLM1'], [(6, 1), ['CCM5', 'DPR3']]]
84  --->  [(3, 7), ['CCM6', 'NodeRouter'], [(6, 6), ['CCM6', 'DPR1']], [(2, 8), ['CCM1', 84, 0, 'PE1']]]
100  --->  [(6, 1), ['CCM2', 'MCLM1'], [(0, 8), ['CCM6', 'DPR1']]]
86  --->  [(6, 6), ['CCM6', 'DPR2'], [(2, 8), ['CCM6', 'NodeRouter']]]
85  --->  [(2, 8), ['CCM3', 'PERouter']]
90  --->  [(1, 8), ['CCM4', '+'], [(6, 6), ['CCM5', 'DPR2']]]
91  --->  [(1, 8), ['CCM5', 'DPR3']]
92  --->  [(1, 8), ['CCM2', 'MCLM1']]
101  --->  [(0, 8), ['CCM4', '+']]
102  --->  [(0, 8), ['CCM5', 'DPR3']]
103  --->  [(0, 8), ['CCM2', 'MCLM1']]
105  --->  [(6, 6), ['CCM6', 'DPR1'], [(0, 8), ['CCM1', 105, 0, 'PE1']]]
106  --->  [(6, 6), ['CCM4', '+'], [(0, 8), ['CCM3', 'PERouter']]]
107  --->  [(6, 6), ['CCM5', 'DPR2'], [(0, 8), ['CCM6', 'NodeRouter']]]
117  --->  [(6, 6), ['CCM6', 'DPR1']]
118  --->  [(6, 6), ['CCM4', '+']]
119  --->  [(6, 6), ['CCM5', 'DPR2']]
120  --->  [(6, 6), ['CCM4', '+']]
121  --->  [(6, 6), ['CCM5', 'DPR3']]
122  --->  [(6, 6), ['CCM2', 'MCLM1']]

Router scheds and CCM commands:
4  --->  [(0, 1), (0, 2), [(2, 2), (3, 2)], [(2, 3), (2, 4)]]
5  --->  [(0, 1), (0, 3), [(1, 2), (1, 1)], [(2, 3), (2, 5)]]
6  --->  [(1, 0), (1, 1), [(2, 3), (2, 6)], [(2, 3), (2, 4)]]
8  --->  [(1, 1), (1, 0), [(2, 0), (3, 0)], [(1, 2), (1, 3)], [(2, 3), (2, 6)], [(2, 3), (3, 3)]]
16  --->  [(2, 1), (2, 2), [(1, 4), (2, 4)], [(1, 2), (3, 2)], [(2, 2), (4, 2)], [(2, 3), (5, 6)]]
17  --->  [(2, 1), (2, 3), [(1, 1), (1, 0)], [(2, 0), (3, 0)], [(1, 2), (4, 2)], [(1, 2), (2, 2)], [(1, 0), (2, 0)], [(2, 2), (4, 3)], [(2, 3), (5, 7)]]
18  --->  [(2, 1), (1, 3), [(1, 1), (0, 0)], [(1, 4), (2, 4)], [(1, 3), (2, 3)], [(1, 2), (3, 2)], [(1, 0), (3, 0)], [(2, 2), (4, 4)]]
19  --->  [(2, 1), (0, 3), [(2, 1), (3, 1)], [(1, 1), (2, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(1, 2), (4, 2)], [(0, 1), (0, 2)], [(1, 0), (4, 0)], [(2, 2), (4, 5)], [(2, 2), (3, 2)]]
14  --->  [(0, 3), (0, 2), [(2, 1), (3, 1)], [(1, 2), (1, 4)], [(2, 3), (5, 7)], [(2, 3), (5, 4)]]
40  --->  [(0, 1), (0, 0), [(3, 1), (3, 2)], [(1, 0), (3, 1)], [(1, 0), (2, 0)], [(2, 1), (5, 4)], [(1, 3), (1, 7)], [(2, 2), (6, 2)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(1, 2), (5, 2)], [(2, 0), (3, 0)], [(2, 2), (4, 2)]]
11  --->  [(1, 4), (2, 4), [(1, 1), (2, 2)], [(2, 3), (5, 4)], [(2, 3), (3, 3)]]
9  --->  [(1, 2), (1, 4), [(2, 3), (2, 7)], [(2, 3), (4, 3)]]
13  --->  [(1, 2), (1, 3), [(2, 2), (3, 2)], [(2, 3), (5, 6)], [(2, 3), (5, 3)]]
10  --->  [(1, 1), (2, 1), [(2, 3), (5, 3)]]
27  --->  [(1, 0), (2, 0), [(2, 3), (1, 3)], [(2, 1), (4, 3)], [(2, 1), (4, 1)], [(2, 0), (4, 0)], [(1, 4), (2, 5)], [(0, 4), (0, 5)], [(1, 2), (2, 2)], [(2, 2), (4, 2)], [(1, 2), (3, 6)], [(1, 2), (3, 4)]]
28  --->  [(1, 0), (2, 1), [(2, 1), (5, 1)], [(2, 0), (5, 0)], [(1, 4), (2, 6)], [(0, 4), (0, 6)], [(1, 2), (2, 3)], [(2, 2), (4, 3)], [(1, 2), (3, 5)], [(6, 7), (6, 6)]]
29  --->  [(1, 0), (2, 2), [(1, 0), (2, 0)], [(1, 1), (2, 1)], [(2, 1), (5, 2)], [(2, 0), (5, 1)], [(1, 2), (2, 4)], [(2, 2), (4, 4)], [(2, 2), (3, 2)], [(0, 5), (0, 6)], [(1, 2), (3, 6)], [(6, 7), (6, 5)], [(1, 2), (1, 3)]]
20  --->  [(1, 1), (2, 2), [(1, 4), (4, 4)], [(1, 4), (2, 4)], [(1, 3), (3, 4)], [(1, 3), (2, 3)], [(0, 1), (0, 3)], [(1, 0), (4, 1)], [(3, 7), (4, 7)], [(2, 2), (4, 2)]]
21  --->  [(1, 1), (2, 3), [(2, 1), (3, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(0, 1), (0, 4)], [(1, 3), (1, 4)], [(3, 7), (5, 7)], [(2, 2), (5, 2)]]
30  --->  [(1, 0), (2, 1), [(1, 1), (3, 1)], [(4, 3), (4, 4)], [(1, 2), (2, 5)], [(2, 2), (4, 5)], [(2, 2), (4, 2)], [(0, 5), (0, 7)], [(6, 7), (6, 4)], [(1, 2), (1, 4)]]
31  --->  [(1, 0), (2, 2), [(1, 1), (4, 1)], [(4, 3), (4, 5)], [(2, 2), (4, 3)], [(2, 2), (3, 2)], [(2, 0), (3, 0)], [(6, 7), (6, 3)], [(1, 2), (1, 5)]]
32  --->  [(1, 0), (2, 3), [(4, 3), (3, 5)], [(2, 1), (3, 1)], [(1, 3), (1, 4)], [(1, 2), (2, 2)], [(2, 2), (4, 4)], [(2, 2), (4, 2)], [(2, 0), (4, 0)], [(1, 1), (2, 1)], [(1, 4), (2, 4)], [(6, 7), (6, 2)], [(1, 2), (1, 6)]]
34  --->  [(1, 0), (2, 0), [(4, 3), (1, 5)], [(2, 1), (5, 1)], [(2, 0), (2, 2)], [(1, 3), (1, 6)], [(1, 2), (2, 4)], [(2, 2), (4, 6)], [(2, 2), (4, 4)], [(2, 0), (6, 0)], [(1, 1), (4, 1)], [(1, 4), (3, 5)], [(0, 5), (0, 6)], [(1, 2), (1, 8)]]
35  --->  [(1, 0), (2, 1), [(4, 3), (0, 5)], [(2, 1), (5, 2)], [(2, 0), (2, 3)], [(1, 2), (2, 5)], [(2, 2), (4, 5)], [(2, 1), (3, 1)], [(1, 3), (1, 4)], [(1, 1), (5, 1)], [(1, 4), (3, 6)], [(0, 5), (0, 7)]]
36  --->  [(1, 0), (2, 0), [(2, 0), (2, 4)], [(2, 2), (4, 6)], [(2, 1), (4, 1)], [(2, 0), (3, 0)], [(1, 3), (1, 5)], [(1, 1), (5, 2)], [(1, 4), (3, 7)], [(0, 5), (0, 8)]]
37  --->  [(1, 0), (2, 1), [(2, 5), (3, 5)], [(2, 0), (2, 5)], [(2, 1), (5, 1)], [(2, 0), (4, 0)], [(1, 3), (1, 6)], [(1, 3), (1, 4)], [(1, 1), (5, 3)], [(2, 2), (3, 2)], [(1, 2), (2, 2)]]
25  --->  [(2, 4), (2, 3), [(2, 1), (4, 1)], [(2, 0), (4, 0)], [(0, 2), (0, 4)], [(1, 3), (1, 5)], [(0, 5), (0, 7)], [(1, 2), (3, 4)], [(1, 2), (3, 2)], [(3, 7), (5, 3)], [(2, 2), (6, 5)]]
26  --->  [(2, 4), (2, 2), [(2, 1), (4, 2)], [(0, 2), (0, 5)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(1, 4), (2, 4)], [(2, 2), (3, 2)], [(1, 2), (3, 5)], [(1, 2), (3, 3)]]
43  --->  [(2, 2), (2, 1), [(3, 1), (1, 3)], [(1, 0), (3, 2)], [(4, 2), (3, 3)], [(1, 0), (2, 0)], [(5, 5), (5, 2)], [(2, 2), (6, 5)], [(2, 1), (5, 1)], [(2, 0), (4, 0)], [(1, 4), (3, 7)], [(1, 3), (4, 5)], [(1, 2), (5, 5)], [(2, 0), (6, 0)], [(1, 4), (3, 5)], [(0, 4), (0, 7)], [(1, 3), (2, 3)], [(2, 2), (7, 2)]]
41  --->  [(3, 1), (3, 3), [(1, 0), (3, 2)], [(1, 0), (3, 0)], [(5, 5), (5, 4)], [(2, 2), (6, 3)], [(2, 1), (3, 1)], [(1, 4), (3, 5)], [(1, 3), (4, 3)], [(1, 2), (5, 3)], [(2, 0), (4, 0)], [(1, 4), (2, 4)], [(0, 4), (0, 5)], [(2, 2), (5, 2)]]
42  --->  [(3, 1), (2, 3), [(1, 0), (3, 3)], [(1, 0), (3, 1)], [(4, 2), (4, 3)], [(5, 5), (5, 3)], [(2, 2), (6, 4)], [(2, 1), (4, 1)], [(2, 0), (3, 0)], [(1, 4), (3, 6)], [(1, 3), (4, 4)], [(1, 2), (5, 4)], [(2, 0), (5, 0)], [(1, 4), (3, 4)], [(0, 4), (0, 6)], [(2, 2), (6, 2)]]
54  --->  [(2, 3), (2, 2), [(1, 0), (1, 4)], [(1, 0), (3, 0)], [(1, 1), (5, 3)], [(6, 1), (6, 6)], [(1, 1), (5, 1)], [(1, 1), (3, 1)], [(2, 1), (6, 1)]]
55  --->  [(2, 3), (2, 1), [(1, 0), (1, 5)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(1, 1), (5, 4)], [(6, 1), (6, 7)], [(1, 1), (6, 1)], [(1, 1), (4, 1)], [(2, 1), (7, 1)], [(2, 1), (3, 1)], [(2, 0), (3, 0)]]
24  --->  [(3, 1), (2, 1), [(2, 1), (4, 3)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(0, 2), (0, 3)], [(1, 3), (1, 4)], [(0, 5), (0, 6)], [(1, 2), (3, 3)], [(1, 2), (2, 2)], [(3, 7), (5, 4)], [(2, 2), (6, 4)]]
22  --->  [(2, 1), (4, 1), [(2, 0), (3, 0)], [(1, 4), (4, 4)], [(1, 3), (3, 4)], [(0, 1), (0, 5)], [(1, 3), (1, 5)], [(0, 5), (0, 6)], [(1, 2), (2, 2)], [(3, 7), (5, 6)], [(2, 2), (6, 2)]]
23  --->  [(2, 1), (4, 2), [(2, 0), (4, 0)], [(1, 2), (3, 2)], [(3, 7), (5, 5)], [(2, 2), (6, 3)]]
15  --->  [(1, 2), (2, 2), [(2, 2), (3, 2)], [(2, 3), (5, 5)]]
38  --->  [(1, 0), (2, 0), [(4, 2), (4, 1)], [(2, 5), (3, 4)], [(2, 0), (2, 6)], [(2, 1), (5, 2)], [(2, 0), (5, 0)], [(1, 3), (1, 7)], [(1, 3), (1, 5)], [(1, 1), (5, 4)], [(2, 2), (4, 2)], [(1, 2), (3, 2)]]
39  --->  [(1, 0), (3, 0), [(4, 2), (4, 0)], [(2, 5), (3, 3)], [(2, 1), (5, 3)], [(2, 0), (6, 0)], [(1, 3), (1, 6)], [(1, 1), (5, 5)], [(2, 2), (5, 2)], [(1, 4), (2, 4)], [(1, 3), (2, 3)], [(1, 2), (4, 2)], [(2, 2), (3, 2)]]
44  --->  [(1, 0), (3, 3), [(1, 0), (3, 0)], [(5, 5), (5, 1)], [(2, 1), (6, 1)], [(2, 0), (5, 0)], [(1, 3), (4, 6)], [(1, 2), (5, 6)], [(1, 2), (2, 2)], [(2, 0), (7, 0)], [(1, 4), (3, 6)], [(0, 4), (0, 8)], [(1, 3), (2, 4)]]
33  --->  [(4, 3), (2, 5), [(2, 1), (4, 1)], [(2, 0), (2, 1)], [(1, 3), (1, 5)], [(1, 2), (2, 3)], [(2, 2), (4, 5)], [(2, 2), (4, 3)], [(2, 0), (5, 0)], [(1, 1), (3, 1)], [(1, 4), (3, 4)], [(6, 7), (6, 1)], [(1, 2), (1, 7)]]
50  --->  [(4, 1), (4, 2), [(1, 1), (3, 5)], [(1, 1), (3, 3)], [(2, 1), (5, 2)], [(1, 1), (3, 1)], [(6, 1), (6, 2)], [(2, 1), (4, 1)], [(2, 0), (6, 1)], [(1, 3), (4, 6)], [(1, 2), (5, 5)], [(1, 2), (1, 7)], [(2, 2), (7, 2)]]
51  --->  [(4, 1), (4, 3), [(1, 0), (1, 1)], [(1, 1), (3, 4)], [(2, 1), (5, 3)], [(1, 1), (4, 1)], [(6, 1), (6, 3)], [(2, 7), (3, 7)], [(2, 1), (5, 1)], [(2, 0), (6, 2)], [(1, 3), (4, 7)], [(1, 2), (5, 6)], [(1, 1), (2, 1)], [(2, 1), (3, 1)], [(1, 2), (1, 8)]]
52  --->  [(4, 1), (4, 4), [(1, 0), (1, 2)], [(1, 1), (3, 5)], [(2, 1), (5, 4)], [(1, 1), (5, 1)], [(6, 1), (6, 4)], [(2, 7), (3, 6)], [(2, 1), (6, 1)], [(2, 0), (6, 3)], [(1, 1), (3, 1)], [(2, 1), (4, 1)]]
53  --->  [(4, 1), (3, 4), [(1, 0), (1, 3)], [(1, 0), (2, 0)], [(1, 1), (5, 2)], [(6, 1), (6, 5)], [(2, 1), (6, 2)], [(2, 0), (6, 4)], [(1, 1), (4, 1)], [(1, 1), (2, 1)], [(2, 1), (5, 1)]]
46  --->  [(1, 5), (2, 5), [(1, 0), (5, 0)], [(1, 1), (3, 1)], [(2, 0), (6, 1)], [(2, 0), (3, 0)], [(1, 3), (3, 3)], [(1, 2), (4, 2)], [(1, 4), (3, 8)], [(1, 3), (2, 6)], [(1, 2), (1, 3)], [(2, 2), (3, 2)]]
47  --->  [(1, 5), (3, 5), [(1, 0), (5, 1)], [(1, 1), (3, 2)], [(1, 1), (2, 1)], [(2, 1), (3, 1)], [(5, 6), (5, 5)], [(2, 0), (6, 2)], [(2, 0), (4, 0)], [(1, 3), (4, 3)], [(1, 2), (5, 2)], [(1, 3), (2, 7)], [(1, 2), (1, 4)], [(2, 2), (4, 2)]]
48  --->  [(1, 5), (3, 4), [(1, 1), (3, 3)], [(1, 1), (3, 1)], [(2, 1), (4, 1)], [(5, 6), (5, 4)], [(2, 0), (6, 3)], [(2, 0), (5, 0)], [(1, 3), (4, 4)], [(1, 2), (5, 3)], [(1, 3), (2, 8)], [(1, 2), (1, 5)], [(2, 2), (5, 2)]]
49  --->  [(1, 5), (3, 3), [(1, 1), (3, 4)], [(1, 1), (3, 2)], [(1, 6), (0, 6)], [(2, 1), (5, 1)], [(1, 1), (2, 1)], [(2, 1), (3, 1)], [(2, 0), (6, 4)], [(2, 0), (6, 0)], [(1, 3), (4, 5)], [(1, 2), (5, 4)], [(1, 2), (1, 6)], [(2, 2), (6, 2)]]
45  --->  [(1, 0), (4, 0), [(1, 1), (2, 1)], [(5, 5), (5, 0)], [(2, 1), (6, 2)], [(2, 0), (6, 0)], [(1, 3), (4, 7)], [(1, 3), (2, 3)], [(1, 2), (3, 2)], [(1, 4), (3, 7)], [(1, 3), (2, 5)]]
56  --->  [(1, 0), (1, 6), [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(1, 1), (5, 5)], [(6, 1), (5, 7)], [(1, 1), (6, 2)], [(1, 1), (5, 1)], [(6, 4), (6, 3)], [(2, 1), (4, 1)], [(2, 0), (3, 1)], [(1, 1), (2, 1)]]
57  --->  [(1, 0), (4, 0), [(1, 0), (2, 0)], [(6, 1), (4, 7)], [(1, 1), (6, 3)], [(1, 1), (6, 1)], [(6, 4), (6, 2)], [(2, 1), (5, 1)], [(2, 0), (3, 2)], [(1, 1), (3, 1)]]
58  --->  [(1, 0), (5, 0), [(1, 0), (3, 0)], [(6, 1), (3, 7)], [(1, 1), (6, 2)], [(2, 1), (6, 1)], [(2, 0), (3, 3)], [(1, 1), (4, 1)]]
67  --->  [(2, 6), (2, 5), [(4, 5), (5, 1)], [(5, 2), (3, 6)], [(5, 4), (5, 3)], [(5, 5), (5, 6)], [(4, 6), (5, 5)], [(1, 0), (6, 1)], [(1, 0), (5, 0)], [(6, 5), (4, 7)], [(1, 0), (3, 0)], [(1, 1), (6, 5)]]
63  --->  [(4, 5), (5, 5), [(5, 2), (5, 4)], [(1, 0), (5, 3)], [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(2, 0), (3, 8)], [(1, 1), (6, 4)], [(1, 1), (6, 1)], [(7, 3), (7, 4)]]
64  --->  [(4, 5), (5, 4), [(5, 2), (5, 5)], [(1, 0), (5, 1)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(6, 5), (6, 6)], [(1, 1), (6, 5)], [(1, 1), (6, 2)], [(7, 3), (7, 5)]]
65  --->  [(4, 5), (5, 3), [(5, 2), (5, 6)], [(1, 0), (5, 2)], [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(6, 5), (6, 7)], [(1, 1), (6, 6)], [(1, 1), (6, 3)], [(7, 3), (7, 6)]]
66  --->  [(4, 5), (5, 2), [(5, 2), (4, 6)], [(1, 0), (5, 3)], [(4, 6), (5, 6)], [(1, 0), (6, 0)], [(1, 0), (4, 0)], [(6, 5), (5, 7)], [(1, 0), (2, 0)], [(1, 1), (6, 7)], [(1, 1), (6, 4)], [(7, 3), (6, 6)]]
68  --->  [(4, 5), (5, 0), [(5, 2), (2, 6)], [(5, 5), (5, 7)], [(4, 6), (5, 4)], [(1, 0), (6, 0)], [(6, 5), (3, 7)], [(6, 3), (6, 4)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(1, 1), (6, 6)]]
62  --->  [(5, 2), (5, 3), [(1, 0), (5, 2)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(5, 7), (5, 6)], [(2, 0), (3, 7)], [(1, 1), (6, 3)], [(1, 1), (5, 1)]]
69  --->  [(5, 2), (1, 6), [(5, 5), (4, 7)], [(4, 6), (5, 3)], [(1, 0), (6, 1)], [(6, 3), (6, 5)], [(1, 0), (5, 0)], [(1, 0), (2, 1)], [(1, 1), (6, 7)]]
70  --->  [(5, 2), (0, 6), [(5, 5), (3, 7)], [(6, 2), (6, 1)], [(6, 3), (6, 6)], [(1, 0), (6, 0)], [(1, 0), (2, 2)]]
78  --->  [(3, 5), (4, 5), [(1, 0), (6, 3)], [(1, 0), (6, 1)]]
79  --->  [(3, 5), (5, 5), [(1, 0), (6, 4)], [(1, 0), (6, 2)]]
80  --->  [(3, 5), (5, 4), [(1, 0), (6, 5)], [(1, 0), (6, 3)]]
81  --->  [(3, 5), (5, 3), [(1, 6), (2, 6)], [(1, 0), (6, 6)], [(1, 0), (6, 4)]]
82  --->  [(3, 5), (5, 2), [(1, 6), (3, 6)], [(1, 0), (6, 5)]]
83  --->  [(3, 5), (5, 1), [(1, 6), (4, 6)], [(1, 0), (6, 6)]]
84  --->  [(3, 5), (5, 0), [(1, 6), (5, 6)], [(1, 7), (2, 7)], [(7, 1), (7, 2)]]
85  --->  [(1, 6), (5, 5), [(1, 7), (3, 7)], [(4, 7), (5, 7)], [(7, 1), (7, 3)]]
86  --->  [(1, 6), (5, 4), [(1, 7), (4, 7)], [(4, 7), (6, 7)], [(7, 1), (7, 4)]]
87  --->  [(1, 6), (5, 3), [(1, 7), (5, 7)], [(4, 7), (6, 6)], [(7, 1), (7, 5)]]
88  --->  [(1, 6), (5, 2), [(1, 7), (5, 6)], [(4, 7), (6, 5)], [(7, 1), (7, 6)]]
89  --->  [(1, 6), (5, 1), [(1, 7), (5, 5)], [(4, 7), (6, 4)], [(7, 1), (7, 7)]]
90  --->  [(1, 6), (5, 0), [(1, 7), (5, 4)], [(4, 7), (6, 3)], [(7, 1), (7, 8)]]
59  --->  [(1, 0), (4, 0), [(6, 1), (2, 7)], [(1, 1), (6, 3)], [(2, 1), (7, 1)], [(2, 0), (3, 4)], [(1, 1), (5, 1)], [(1, 1), (2, 1)]]
60  --->  [(1, 0), (5, 0), [(1, 0), (2, 0)], [(6, 1), (1, 7)], [(2, 0), (3, 5)], [(1, 1), (6, 1)], [(1, 1), (3, 1)]]
61  --->  [(1, 0), (5, 1), [(1, 0), (3, 0)], [(6, 1), (0, 7)], [(2, 0), (3, 6)], [(1, 1), (6, 2)], [(1, 1), (4, 1)]]
71  --->  [(5, 5), (2, 7), [(6, 3), (6, 7)], [(1, 0), (7, 0)], [(1, 0), (2, 3)], [(1, 0), (2, 0)]]
72  --->  [(5, 5), (1, 7), [(6, 3), (5, 7)], [(1, 0), (2, 4)], [(1, 0), (3, 0)]]
73  --->  [(5, 5), (0, 7), [(6, 3), (4, 7)], [(6, 6), (6, 5)], [(1, 0), (2, 5)], [(1, 0), (4, 0)], [(1, 0), (2, 0)]]
7  --->  [(2, 3), (2, 7), [(2, 3), (2, 5)]]
91  --->  [(1, 7), (5, 3), [(4, 7), (6, 2)], [(7, 1), (6, 8)]]
74  --->  [(6, 3), (3, 7), [(6, 6), (6, 4)], [(1, 0), (2, 6)], [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(2, 8), (1, 8)]]
75  --->  [(6, 6), (6, 3), [(1, 0), (2, 7)], [(1, 0), (6, 0)], [(1, 0), (4, 0)], [(2, 8), (0, 8)]]
76  --->  [(6, 6), (6, 2), [(1, 0), (2, 8)], [(1, 0), (6, 1)], [(1, 0), (5, 0)]]
77  --->  [(6, 6), (6, 1), [(1, 0), (6, 2)], [(1, 0), (6, 0)]]
12  --->  [(2, 3), (5, 5), [(2, 3), (4, 3)]]
92  --->  [(4, 7), (6, 1), [(7, 1), (5, 8)]]
93  --->  [(7, 1), (4, 8)]
94  --->  [(7, 1), (3, 8)]
95  --->  [(7, 1), (2, 8)]
96  --->  [(7, 1), (1, 8)]
97  --->  [(7, 1), (0, 8), [(2, 8), (3, 8)]]
98  --->  [(2, 8), (4, 8)]
99  --->  [(2, 8), (5, 8)]
100  --->  [(2, 8), (6, 8)]
101  --->  [(2, 8), (6, 7)]
102  --->  [(2, 8), (6, 6)]
108  --->  [(1, 8), (2, 8)]
109  --->  [(1, 8), (3, 8)]
110  --->  [(1, 8), (4, 8)]
111  --->  [(1, 8), (5, 8)]
112  --->  [(1, 8), (6, 8)]
113  --->  [(1, 8), (6, 7)]
114  --->  [(1, 8), (6, 6)]

Rescheduler marker:
(0, 0)  --->  [[1, 3, 5, 7, 9, 10, 24, 26, 31, 33, 16, 14, 35, 37, 40, 48, 50, 52, 54, 57, 59, 61, 63, 65, 68, 70], [48], [12, 23, 30, 44, 46], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 24, 29, 31, 43, 45, 21, 47, 25, 26, 27, 28, 32, 33, 34, 35, 17, 18, 15, 16, 36, 37, 38, 39, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72], [4, 6, 8, 10, 21, 28, 42, 20, 27, 29, 34, 36, 19, 17, 38, 40, 43, 51, 53, 55, 57, 60, 62, 64, 66, 68, 71, 73]]
(0, 1)  --->  [[1, 5, 24, 7, 16, 21, 26, 42, 44, 29, 46, 48, 50, 53, 56], [22], [11, 20], [10, 2, 12, 6, 7, 19, 21, 25, 26, 8, 9, 17, 18, 22, 23, 27, 28, 43, 44, 45, 46, 30, 31, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58], [5, 9, 8, 18, 27, 41, 10, 19, 24, 20, 29, 45, 47, 32, 49, 51, 53, 56, 59]]
(0, 2)  --->  [[1, 2, 37, 5, 10, 12, 14, 24, 29, 19, 21, 34, 41, 26, 43], [35], [9, 18, 33], [8, 2, 10, 3, 4, 17, 19, 32, 34, 38, 39, 6, 7, 11, 12, 13, 14, 15, 16, 25, 26, 30, 31, 20, 21, 22, 23, 35, 36, 42, 43, 27, 28, 44, 45], [6, 7, 5, 16, 31, 40, 8, 13, 15, 17, 25, 21, 27, 32, 22, 24, 37, 44, 29, 46]]
(0, 3)  --->  [[1, 3, 27, 10, 13, 15, 17, 24, 29, 32, 34, 36, 42, 38, 40], [25], [9, 23], [6, 8, 10, 2, 3, 4, 5, 22, 24, 28, 29, 11, 12, 14, 15, 16, 17, 18, 19, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 43, 44, 39, 40, 41, 42], [5, 7, 4, 6, 21, 15, 30, 13, 16, 18, 20, 26, 22, 27, 32, 35, 37, 39, 45, 41, 43]]
(0, 4)  --->  [[1, 4, 11, 8, 13, 15, 17, 23, 19, 21, 26, 29, 36, 38, 31], [9], [7], [2, 3, 6, 5, 8, 12, 13, 9, 10, 14, 15, 16, 17, 18, 19, 24, 25, 20, 21, 22, 23, 27, 28, 30, 31, 37, 38, 39, 40, 32, 33], [4, 5, 14, 11, 16, 18, 20, 27, 23, 26, 28, 22, 24, 29, 32, 39, 41, 42, 34]]
(0, 5)  --->  [[43], [41], [30, 39], [29, 25, 31, 38, 40, 44, 45], [28, 24, 37, 46, 29, 23, 25, 30, 43, 35]]
(0, 6)  --->  [[78], [76], [32, 53, 74], [31, 25, 33, 52, 54, 73, 75, 79, 80], [30, 24, 51, 72, 81, 26, 31, 44, 36]]
(0, 7)  --->  [[81], [79], [34, 65, 77], [28, 33, 35, 64, 66, 76, 78, 82, 83], [27, 32, 63, 75, 84, 45, 37]]
(0, 8)  --->  [[105], [103], [48, 79, 101], [47, 39, 49, 78, 80, 100, 102, 106, 107], [46, 38, 77, 99, 108]]
(0, 9)  --->  [[], [], [], [], []]
(1, 0)  --->  [[1, 3, 17, 5, 14, 19, 21, 23, 30, 28, 33, 39, 43, 37, 52], [15], [13], [2, 3, 4, 5, 11, 12, 14, 18, 19, 6, 7, 15, 16, 20, 21, 22, 23, 24, 25, 31, 32, 29, 30, 34, 35, 40, 41, 44, 45, 38, 39, 53, 54], [4, 6, 7, 10, 11, 20, 19, 8, 17, 28, 30, 35, 37, 22, 24, 18, 39, 41, 26, 44, 33, 52, 54, 56, 31, 36, 58, 61, 42, 46, 63, 65, 40, 67, 55, 69, 72, 74]]
(1, 1)  --->  [[14, 1, 3, 11, 16, 18, 21, 23, 29, 32, 44, 38, 46, 48, 52], [12], [10], [8, 9, 11, 15, 16, 2, 3, 4, 5, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 30, 31, 33, 34, 45, 46, 39, 40, 47, 48, 49, 50, 53, 54], [7, 8, 9, 17, 4, 6, 18, 14, 19, 11, 20, 21, 24, 30, 26, 32, 53, 46, 48, 35, 47, 33, 50, 41, 49, 52, 54, 51, 55, 57, 60]]
(1, 2)  --->  [[14, 1, 10, 18, 21, 12, 23, 26, 28, 16, 34, 36, 43], [11], [9], [6, 8, 10, 15, 16, 2, 3, 11, 12, 19, 20, 22, 23, 13, 14, 24, 25, 27, 28, 29, 30, 17, 18, 35, 36, 37, 38, 44, 45], [6, 5, 7, 17, 9, 14, 4, 13, 16, 18, 21, 24, 54, 28, 33, 15, 26, 29, 31, 23, 25, 19, 37, 38, 45, 30, 47, 39, 46]]
(1, 3)  --->  [[51, 1, 3, 5, 8], [49], [19, 31, 47], [15, 18, 20, 30, 32, 46, 48, 52, 53, 2, 3, 4, 5, 6, 7, 9, 10], [20, 14, 17, 10, 15, 29, 45, 54, 19, 21, 22, 25, 33, 55, 36, 38, 4, 6, 40, 46, 8, 11, 44, 31, 48]]
(1, 4)  --->  [[22], [20], [18], [12, 17, 19, 23, 24], [12, 17, 11, 16, 25, 19, 21, 23, 26, 27, 34, 56, 37, 39, 33, 40, 42, 32, 49]]
(1, 5)  --->  [[34], [31], [29], [25, 28, 30, 35, 36], [36, 47, 24, 27, 37, 35, 57, 38, 40, 33, 50]]
(1, 6)  --->  [[64], [62], [60], [37, 59, 61, 65, 66], [36, 58, 50, 67, 71, 82, 39, 41, 34, 51]]
(1, 7)  --->  [[48], [46], [44], [41, 43, 45, 49, 50], [40, 42, 62, 51, 74, 85, 35, 52]]
(1, 8)  --->  [[94], [92], [55, 90], [37, 54, 56, 89, 91, 95, 96], [36, 53, 76, 88, 98, 97, 109]]
(1, 9)  --->  [[], [], [], [], []]
(2, 0)  --->  [[13], [11], [9], [6, 8, 10, 14, 15], [5, 7, 16, 9, 18, 29, 31, 36, 38, 23, 25, 19, 40, 42, 27, 45, 34, 55, 57, 32, 37, 59, 62, 43, 47, 64, 66, 41, 68, 56, 70, 73, 75]]
(2, 1)  --->  [[], [63], [41, 47, 49, 59, 61], [38, 40, 42, 46, 48, 44, 50, 58, 60, 27, 62], [17, 15, 20, 12, 30, 21, 32, 37, 39, 45, 43, 57, 26, 22, 25, 31, 27, 33, 35, 47, 49, 36, 48, 34, 51, 42, 50, 53, 55, 52, 56, 71, 58, 61]]
(2, 2)  --->  [[39], [37], [33, 35], [14, 32, 34, 29, 36, 40, 41], [18, 13, 31, 22, 33, 28, 44, 42, 5, 14, 56, 17, 19, 36, 29, 34, 16, 27, 30, 32, 24, 26, 20, 38, 39, 46, 72, 40, 47]]
(2, 3)  --->  [[40], [38], [36], [24, 35, 37, 41, 42], [19, 23, 34, 28, 27, 43, 44, 55, 20, 22, 37, 30, 35, 5, 7, 41, 47, 9, 12, 45, 73]]
(2, 4)  --->  [[24], [22], [20], [14, 19, 21, 25, 26], [13, 18, 27, 26, 20, 22, 28, 38, 31, 36, 6, 8, 34, 41, 43, 46, 74]]
(2, 5)  --->  [[75], [73], [39, 71], [33, 38, 40, 70, 72, 76, 77], [35, 48, 38, 29, 39, 32, 37, 69, 78, 7, 9, 47, 75]]
(2, 6)  --->  [[46], [44], [42], [31, 41, 43, 47, 48], [30, 40, 49, 68, 70, 83, 8, 10, 48, 76]]
(2, 7)  --->  [[17], [15], [13], [10, 12, 14, 18, 19], [61, 52, 73, 9, 11, 86, 20, 49, 77]]
(2, 8)  --->  [[84], [82], [80], [51, 79, 81, 85, 86], [50, 78, 75, 87, 97, 98, 110]]
(2, 9)  --->  [[], [], [], [], []]
(3, 0)  --->  [[37], [35], [21, 33], [11, 20, 22, 32, 34, 38, 39], [10, 19, 31, 40, 24, 26, 20, 41, 43, 28, 46, 56, 58, 33, 38, 60, 63, 44, 48, 65, 67, 42, 69, 57, 74, 76]]
(3, 1)  --->  [[27], [25], [23], [17, 22, 24, 28, 29], [16, 21, 30, 41, 25, 23, 26, 32, 42, 44, 28, 34, 48, 50, 37, 49, 35, 52, 43, 51, 54, 56, 53, 57, 58, 59, 62]]
(3, 2)  --->  [[21], [19], [17], [7, 16, 18, 22, 23], [42, 6, 15, 24, 18, 20, 43, 45, 49, 51, 17, 28, 31, 33, 25, 27, 21, 39, 40, 47, 59, 41, 48]]
(3, 3)  --->  [[], [71], [48, 50, 53, 67, 69], [45, 47, 49, 46, 51, 52, 54, 66, 68, 42, 70], [43, 21, 23, 44, 46, 45, 51, 65, 41, 50, 52, 26, 28, 42, 48, 10, 13, 60]]
(3, 4)  --->  [[61], [59], [26, 36, 57], [23, 25, 27, 35, 37, 56, 58, 62, 63], [21, 23, 22, 24, 34, 55, 50, 64, 40, 51, 53, 27, 29, 35, 42, 44, 61]]
(3, 5)  --->  [[60], [58], [56], [53, 55, 57, 61, 62], [34, 49, 39, 52, 54, 63, 79, 28, 30, 36, 43, 45, 62]]
(3, 6)  --->  [[63], [58], [33, 56], [30, 32, 34, 55, 57, 64, 65], [69, 84, 29, 31, 54, 66, 37, 44, 46, 63]]
(3, 7)  --->  [[82], [80], [47, 72, 78], [39, 46, 48, 71, 73, 77, 79, 83, 84], [60, 53, 72, 87, 21, 38, 45, 70, 76, 85, 47, 64]]
(3, 8)  --->  [[71], [69], [67], [49, 66, 68, 72, 73], [48, 65, 74, 96, 99, 111]]
(3, 9)  --->  [[], [], [], [], []]
(4, 0)  --->  [[47], [45], [29, 43], [26, 28, 30, 42, 44, 48, 49], [25, 27, 21, 41, 50, 29, 47, 57, 59, 34, 39, 61, 64, 45, 49, 66, 68, 43, 70, 75, 77]]
(4, 1)  --->  [[39], [37], [35], [34, 23, 36, 40, 41], [24, 27, 33, 22, 40, 42, 51, 29, 35, 38, 50, 36, 53, 44, 52, 55, 57, 54, 58, 60, 63]]
(4, 2)  --->  [[27], [25], [23], [20, 22, 24, 28, 29], [25, 28, 19, 21, 39, 30, 43, 52, 18, 29, 32, 34, 22, 40, 41, 48, 42, 49]]
(4, 3)  --->  [[35], [33], [31], [27, 30, 32, 36, 37], [26, 29, 38, 31, 44, 53, 19, 30, 33, 35, 43, 49, 11, 14]]
(4, 4)  --->  [[30], [28], [26], [23, 25, 27, 31, 32], [22, 24, 33, 32, 54, 20, 31, 34, 36, 44, 50]]
(4, 5)  --->  [[38], [36], [34], [22, 33, 35, 39, 40], [33, 64, 80, 21, 32, 41, 35, 37, 45, 51]]
(4, 6)  --->  [[44], [42], [40], [37, 39, 41, 45, 46], [68, 85, 36, 38, 47, 67, 46, 52]]
(4, 7)  --->  [[59], [57], [55], [48, 54, 56, 60, 61], [59, 71, 88, 22, 47, 53, 69, 62, 75, 86]]
(4, 8)  --->  [[], [], [], [], [95, 100, 112]]
(4, 9)  --->  [[], [], [], [], []]
(5, 0)  --->  [[], [98], [62, 72, 88, 94, 96], [59, 61, 63, 71, 73, 87, 89, 93, 95, 48, 97], [30, 48, 58, 60, 70, 86, 92, 47, 35, 40, 62, 65, 46, 50, 67, 69, 44, 71, 76, 78]]
(5, 1)  --->  [[59], [55], [51, 53], [32, 50, 52, 48, 54, 60, 61], [30, 36, 31, 49, 47, 69, 62, 85, 91, 46, 39, 51, 37, 54, 63, 66, 45, 53, 56, 58, 55, 59, 61, 64]]
(5, 2)  --->  [[43], [41], [39], [32, 38, 40, 44, 45], [31, 37, 46, 68, 63, 84, 90, 45, 40, 52, 38, 55, 64, 67, 23, 41, 42, 49, 43, 50]]
(5, 3)  --->  [[], [99], [70, 72, 74, 95, 97], [66, 69, 71, 70, 73, 72, 75, 94, 96, 28, 98], [67, 64, 83, 89, 44, 41, 53, 39, 56, 65, 68, 69, 71, 93, 27, 43, 50, 12, 15]]
(5, 4)  --->  [[64], [60], [56, 58], [43, 55, 57, 51, 59, 65, 66], [66, 65, 82, 88, 43, 42, 54, 40, 57, 50, 68, 67, 70, 92, 26, 44, 51, 13, 16]]
(5, 5)  --->  [[64], [62], [60], [42, 59, 61, 65, 66], [65, 66, 81, 87, 42, 41, 58, 49, 67, 68, 69, 91, 25, 45, 52, 14, 17]]
(5, 6)  --->  [[70], [68], [55, 66], [47, 54, 56, 65, 67, 71, 72], [67, 86, 48, 69, 68, 90, 24, 46, 53, 64, 73, 15, 18]]
(5, 7)  --->  [[25], [23], [21], [17, 20, 22, 26, 27], [58, 70, 89, 23, 68, 63, 74, 16, 19, 87, 28]]
(5, 8)  --->  [[], [], [], [], [94, 101, 113]]
(5, 9)  --->  [[], [], [], [], []]
(6, 0)  --->  [[47], [45], [43], [37, 42, 44, 48, 49], [36, 41, 50, 47, 51, 68, 70, 45, 72, 77, 79]]
(6, 1)  --->  [[], [100], [73, 75, 81, 96, 98], [70, 72, 74, 73, 76, 80, 82, 95, 97, 36, 99], [51, 46, 54, 48, 52, 57, 59, 69, 71, 72, 79, 94, 35, 56, 60, 62, 65, 78, 80]]
(6, 2)  --->  [[65], [63], [57, 61], [48, 56, 58, 60, 62, 66, 67], [52, 24, 42, 47, 55, 49, 53, 58, 60, 59, 71, 68, 78, 93, 34, 63, 66, 79, 81, 44, 51]]
(6, 3)  --->  [[67], [65], [63], [60, 62, 64, 68, 69], [53, 25, 43, 50, 54, 59, 61, 58, 70, 69, 77, 92, 33, 64, 67, 80, 82]]
(6, 4)  --->  [[61], [59], [57], [52, 56, 58, 62, 63], [54, 26, 44, 51, 55, 57, 64, 70, 76, 91, 32, 65, 68, 81, 83]]
(6, 5)  --->  [[53], [49], [47], [28, 46, 48, 54, 55], [55, 27, 45, 56, 65, 71, 75, 90, 31, 66, 69, 82, 84]]
(6, 6)  --->  [[], [122], [87, 89, 106, 118, 120], [84, 86, 88, 82, 90, 105, 107, 117, 119, 69, 121], [56, 66, 72, 74, 89, 30, 67, 70, 83, 85, 81, 104, 116, 68]]
(6, 7)  --->  [[77], [75], [73], [69, 72, 74, 78, 79], [57, 67, 73, 88, 29, 68, 71, 80, 103, 115]]
(6, 8)  --->  [[], [], [], [], [93, 102, 114]]
(6, 9)  --->  [[], [], [], [], []]
(7, 0)  --->  [[81], [79], [75, 77], [47, 74, 76, 72, 78, 82, 83], [46, 73, 71, 84]]
(7, 1)  --->  [[67], [65], [63], [58, 62, 64, 68, 69], [57, 61, 70, 85]]
(7, 2)  --->  [[60], [56], [54], [46, 53, 55, 61, 62], [86, 45, 52, 63]]
(7, 3)  --->  [[], [], [], [], [87, 64]]
(7, 4)  --->  [[], [], [], [], [88, 65]]
(7, 5)  --->  [[], [], [], [], [89, 66]]
(7, 6)  --->  [[], [], [], [], [90, 67]]
(7, 7)  --->  [[], [], [], [], [91]]
(7, 8)  --->  [[], [], [], [], [92]]
(7, 9)  --->  [[], [], [], [], []]
(8, 0)  --->  [[], [], [], [], []]
(8, 1)  --->  [[], [], [], [], []]
(8, 2)  --->  [[], [], [], [], []]
(8, 3)  --->  [[], [], [], [], []]
(8, 4)  --->  [[], [], [], [], []]
(8, 5)  --->  [[], [], [], [], []]
(8, 6)  --->  [[], [], [], [], []]
(8, 7)  --->  [[], [], [], [], []]
(8, 8)  --->  [[], [], [], [], []]
(8, 9)  --->  [[], [], [], [], []]
(9, 0)  --->  [[], [], [], [], []]
(9, 1)  --->  [[], [], [], [], []]
(9, 2)  --->  [[], [], [], [], []]
(9, 3)  --->  [[], [], [], [], []]
(9, 4)  --->  [[], [], [], [], []]
(9, 5)  --->  [[], [], [], [], []]
(9, 6)  --->  [[], [], [], [], []]
(9, 7)  --->  [[], [], [], [], []]
(9, 8)  --->  [[], [], [], [], []]
(9, 9)  --->  [[], [], [], [], []]

Scheduling duration in clocks:  123

CCM Size in bits:  5914

CCM Size in bytes:  740

------------------Synthesys of equation 8 has started!---------------

[('1', 'F00*X10'), ('2', 'F01*X11'), ('3', 'F02*X12'), ('4', 'F10*X20'), ('5', 'F11*X21'), ('6', 'F12*X22'), ('7', 'F20*X30'), ('8', 'F21*X31'), ('9', 'F22*X32'), ('10', '1+2'), ('11', '3+4'), ('12', '5+6'), ('13', '7+8'), ('14', '10+11'), ('15', '12+13'), ('16', '14+15'), ('17', '16+9')]

Graph nodes:
Name   Value   Op_Type   Conn
y21      None      Write      []
1      None      *      ['10']
2      None      *      ['10']
3      None      *      ['11']
4      None      *      ['11']
5      None      *      ['12']
6      None      *      ['12']
7      None      *      ['13']
8      None      *      ['13']
9      None      *      ['17']
10      None      +      ['14']
11      None      +      ['14']
12      None      +      ['15']
13      None      +      ['15']
14      None      +      ['16']
15      None      +      ['16']
16      None      +      ['17']
17      None      +      ['y21']
F00      None      Read      ['1']
X10      None      Read      ['1']
F01      None      Read      ['2']
X11      None      Read      ['2']
F02      None      Read      ['3']
X12      None      Read      ['3']
F10      None      Read      ['4']
X20      None      Read      ['4']
F11      None      Read      ['5']
X21      None      Read      ['5']
F12      None      Read      ['6']
X22      None      Read      ['6']
F20      None      Read      ['7']
X30      None      Read      ['7']
F21      None      Read      ['8']
X31      None      Read      ['8']
F22      None      Read      ['9']
X32      None      Read      ['9']
Labels for mode ASAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Labels for mode ALAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 5, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4]

1. DUMPED cp:  ['1', '10', '14', '16', '17', 'y21']
   Inputs & Coords:
     1 F00 (0, 0)
     1 X10 (0, 0)
     10 1 None
     10 2 None
     14 10 None
     14 11 None
     16 14 None
     16 15 None
     17 16 None
     17 9 None
     y21 17 None
   Pre inputs: [(0, 0), (0, 0)]
   
   Inputs  [[(0, 0), 2]]
   All psbl destinations:  [(7, 3)]
   Closest pe coord:  (7, 3)
   All schedules generated:  [[20, 21, 22, 23, 24, 25]]
   Final closest pe coord and schedule  (7, 3) [20, 21, 22, 23, 24, 25]
Searching for other cps with nodes  ['2', '9', '11', '15']

2. DUMPED cp:  ['5', '12', '15']
   Inputs & Coords:
     5 F11 (0, 4)
     5 X21 (0, 4)
     12 5 None
     12 6 None
     15 12 None
     15 13 None
   Pre inputs: [(0, 4), (0, 4)]
   
   Inputs  [[(0, 4), 2]]
   All psbl destinations:  [(4, 8), (4, 8)]
   Closest pe coord:  (4, 8)
   All schedules generated:  [[16, 17, 18], [16, 17, 18]]
   Final closest pe coord and schedule  (4, 8) [16, 17, 18]
Searching for other cps with nodes  ['2', '6', '9', '11', '13']

3. DUMPED cp:  ['3', '11']
   Inputs & Coords:
     3 F02 (0, 2)
     3 X12 (0, 2)
     11 3 None
     11 4 None
   Pre inputs: [(0, 2), (0, 2)]
   
   Inputs  [[(0, 2), 2]]
   All psbl destinations:  [(5, 8)]
   Closest pe coord:  (5, 8)
   All schedules generated:  [[22, 23]]
   Final closest pe coord and schedule  (5, 8) [22, 23]
Searching for other cps with nodes  ['2', '4', '6', '9', '13']

4. DUMPED cp:  ['7', '13']
   Inputs & Coords:
     7 F20 (1, 1)
     7 X30 (1, 1)
     13 7 None
     13 8 None
   Pre inputs: [(1, 1), (1, 1)]
   
   Inputs  [[(1, 1), 2]]
   All psbl destinations:  [(7, 4)]
   Closest pe coord:  (7, 4)
   All schedules generated:  [[18, 19]]
   Final closest pe coord and schedule  (7, 4) [18, 19]
Searching for other cps with nodes  ['2', '4', '6', '8', '9']

5. DUMPED cp:  ['2']
   Inputs & Coords:
     2 F01 (0, 1)
     2 X11 (0, 1)
   Pre inputs: [(0, 1), (0, 1)]
   
   Inputs  [[(0, 1), 2]]
   All psbl destinations:  [(7, 5)]
   Closest pe coord:  (7, 5)
   All schedules generated:  [[22]]
   Final closest pe coord and schedule  (7, 5) [22]
Searching for other cps with nodes  ['4', '6', '8', '9']

6. DUMPED cp:  ['4']
   Inputs & Coords:
     4 F10 (0, 3)
     4 X20 (0, 3)
   Pre inputs: [(0, 3), (0, 3)]
   
   Inputs  [[(0, 3), 2]]
   All psbl destinations:  [(0, 9), (0, 9)]
   Closest pe coord:  (0, 9)
   All schedules generated:  [[12], [12]]
   Final closest pe coord and schedule  (0, 9) [12]
Searching for other cps with nodes  ['6', '8', '9']

7. DUMPED cp:  ['6']
   Inputs & Coords:
     6 F12 (1, 0)
     6 X22 (1, 0)
   Pre inputs: [(1, 0), (1, 0)]
   
   Inputs  [[(1, 0), 2]]
   All psbl destinations:  [(7, 6), (7, 6)]
   Closest pe coord:  (7, 6)
   All schedules generated:  [[24], [24]]
   Final closest pe coord and schedule  (7, 6) [24]
Searching for other cps with nodes  ['8', '9']

8. DUMPED cp:  ['8']
   Inputs & Coords:
     8 F21 (1, 2)
     8 X31 (1, 2)
   Pre inputs: [(1, 2), (1, 2)]
   
   Inputs  [[(1, 2), 2]]
   All psbl destinations:  [(7, 7), (6, 8)]
   Closest pe coord:  (7, 7)
   All schedules generated:  [[22], [22]]
   Final closest pe coord and schedule  (7, 7) [22]
Searching for other cps with nodes  ['9']

9. DUMPED cp:  ['9']
   Inputs & Coords:
     9 F22 (1, 3)
     9 X32 (1, 3)
   Pre inputs: [(1, 3), (1, 3)]
   
   Inputs  [[(1, 3), 2]]
   All psbl destinations:  [(6, 8), (6, 8)]
   Closest pe coord:  (6, 8)
   All schedules generated:  [[20], [20]]
   Final closest pe coord and schedule  (6, 8) [20]
Searching for other cps with nodes  []

Input allocation by PEs:
(0, 0)  --->  ['F00', 'X10']
(0, 1)  --->  ['F01', 'X11']
(0, 2)  --->  ['F02', 'X12']
(0, 3)  --->  ['F10', 'X20']
(0, 4)  --->  ['F11', 'X21']
(1, 0)  --->  ['F12', 'X22']
(1, 1)  --->  ['F20', 'X30']
(1, 2)  --->  ['F21', 'X31']
(1, 3)  --->  ['F22', 'X32']

Final results before rescheduling (node.name, node.sched) by PEs: 
(7, 3)  --->  [('1', 20), ('10', 21), ('14', 22), ('16', 23), ('17', 24), ('y21', 25)]
(4, 8)  --->  [('5', 16), ('12', 17), ('15', 18)]
(5, 8)  --->  [('3', 22), ('11', 23)]
(7, 4)  --->  [('7', 18), ('13', 19)]
(7, 5)  --->  [('2', 22)]
(0, 9)  --->  [('4', 12)]
(7, 6)  --->  [('6', 24)]
(7, 7)  --->  [('8', 22)]
(6, 8)  --->  [('9', 20)]


RESCHEDULING
###### 8
     Pred 1 entered:  F21
     Check for pred "F21" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13', 'F22', 'X21', 'F21', 'X21', 'F21', 'X22', 'F22', 'X31', 'F21', 'X31']
     Walked coords  [(1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (6, 2), (7, 2), (7, 3), (7, 4), (7, 5), (7, 6), (7, 7)]
     1.0 Inputs are send from pred at step  51
     1.3 Putting inputs to DPR-X directly at node at step  64
     Pred 2 entered:  X31
     Check for pred "X31" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13', 'F22', 'X21', 'F21', 'X21', 'F21', 'X22', 'F22', 'X31', 'F21', 'X31']
     Walked coords  [(1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (6, 2), (7, 2), (7, 3), (7, 4), (7, 5), (7, 6), (7, 7)]
     1.0 Inputs are send from pred at step  55
     1.3 Putting inputs to DPR-X directly at node at step  68
     3.0 Arithmetic op is done at step  69
     4.2 Saving results to own MCLM at step  72
     (7, 7) ---> [[], [71], [69], [64, 68, 70], [91, 63, 67]]
###### 7
     Pred 1 entered:  F20
     Check for pred "F20" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12', 'F21', 'X20', 'F20', 'X20', 'F20', 'X21', 'F21', 'X30', 'F20', 'X30']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (7, 2), (7, 3), (7, 4)]
     1.0 Inputs are send from pred at step  60
     1.3 Putting inputs to DPR-X directly at node at step  71
     Pred 2 entered:  X30
     Check for pred "X30" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12', 'F21', 'X20', 'F20', 'X20', 'F20', 'X21', 'F21', 'X30', 'F20', 'X30']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (7, 2), (7, 3), (7, 4)]
     1.0 Inputs are send from pred at step  62
     1.3 Putting inputs to DPR-X directly at node at step  73
     3.0 Arithmetic op is done at step  74
     4.0 ---Notification is changed for 13 1
     4.0 Saving results to DPR2 directly at step  75
     (7, 4) ---> [[], [], [74], [71, 73, 75], [88, 65, 60, 64, 70, 72]]
###### 6
     Pred 1 entered:  F12
     Check for pred "F12" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11', 'X11', 'F20', 'F12', 'X12', 'F12', 'X13', 'X21', 'F20', 'F12', 'X22']
     Walked coords  [(1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (7, 1), (7, 2), (7, 3), (7, 4), (7, 5), (7, 6)]
     1.0 Inputs are send from pred at step  47
     1.3 Putting inputs to DPR-X directly at node at step  61
     Pred 2 entered:  X22
     Check for pred "X22" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11', 'X11', 'F20', 'F12', 'X12', 'F12', 'X13', 'X21', 'F20', 'F12', 'X22']
     Walked coords  [(1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (7, 1), (7, 2), (7, 3), (7, 4), (7, 5), (7, 6)]
     1.0 Inputs are send from pred at step  50
     1.3 Putting inputs to DPR-X directly at node at step  64
     3.0 Arithmetic op is done at step  65
     4.2 Saving results to own MCLM at step  68
     (7, 6) ---> [[], [67], [65], [61, 64, 66], [90, 67, 62, 66, 60, 63]]
###### 5
     Pred 1 entered:  F11
     Check for pred "F11" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03', 'X10', 'F12', 'F11', 'X11', 'F11', 'X12', 'X20', 'F12', 'F11', 'X21']
     Walked coords  [(0, 4), (1, 4), (2, 4), (3, 4), (4, 4), (4, 5), (4, 6), (4, 7), (4, 8)]
     1.0 Inputs are send from pred at step  42
     1.3 Putting inputs to DPR-X directly at node at step  52
     Pred 2 entered:  X21
     Check for pred "X21" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03', 'X10', 'F12', 'F11', 'X11', 'F11', 'X12', 'X20', 'F12', 'F11', 'X21']
     Walked coords  [(0, 4), (1, 4), (2, 4), (3, 4), (4, 4), (4, 5), (4, 6), (4, 7), (4, 8)]
     1.0 Inputs are send from pred at step  44
     1.3 Putting inputs to DPR-X directly at node at step  54
     3.0 Arithmetic op is done at step  55
     4.0 ---Notification is changed for 12 1
     4.0 Saving results to DPR2 directly at step  56
     (4, 8) ---> [[], [], [55], [52, 54, 56], [95, 100, 112, 51, 53]]
###### 4
     Pred 1 entered:  F10
     Check for pred "F10" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02', 'F10', 'F11', 'F10', 'X10', 'F10', 'X11', 'F10', 'F11', 'F10', 'X20']
     Walked coords  [(0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)]
     1.0 Inputs are send from pred at step  46
     1.3 Putting inputs to DPR-X directly at node at step  54
     Pred 2 entered:  X20
     Check for pred "X20" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02', 'F10', 'F11', 'F10', 'X10', 'F10', 'X11', 'F10', 'F11', 'F10', 'X20']
     Walked coords  [(0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)]
     1.0 Inputs are send from pred at step  48
     1.3 Putting inputs to DPR-X directly at node at step  56
     3.0 Arithmetic op is done at step  57
     4.2 Saving results to own MCLM at step  60
     (0, 9) ---> [[], [59], [57], [54, 56, 58], [53, 55]]
###### 3
     Pred 1 entered:  F02
     Check for pred "F02" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01', 'F02', 'X01', 'F02', 'X02', 'F02', 'X03', 'F02', 'X11', 'F02', 'X12']
     Walked coords  [(0, 2), (1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (5, 3), (5, 4), (5, 5), (5, 6), (5, 7), (5, 8)]
     1.0 Inputs are send from pred at step  48
     1.3 Putting inputs to DPR-X directly at node at step  61
     Pred 2 entered:  X12
     Check for pred "X12" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01', 'F02', 'X01', 'F02', 'X02', 'F02', 'X03', 'F02', 'X11', 'F02', 'X12']
     Walked coords  [(0, 2), (1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (5, 3), (5, 4), (5, 5), (5, 6), (5, 7), (5, 8)]
     1.0 Inputs are send from pred at step  51
     1.3 Putting inputs to DPR-X directly at node at step  64
     3.0 Arithmetic op is done at step  65
     4.0 ---Notification is changed for 11 1
     4.0 Saving results to DPR2 directly at step  66
     (5, 8) ---> [[], [], [65], [61, 64, 66], [94, 101, 113, 60, 63]]
###### 2
     Pred 1 entered:  F01
     Check for pred "F01" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02', 'F01', 'X00', 'F01', 'X01', 'F01', 'X02', 'F01', 'X10', 'F01', 'X11']
     Walked coords  [(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (7, 2), (7, 3), (7, 4), (7, 5)]
     1.0 Inputs are send from pred at step  66
     1.3 Putting inputs to DPR-X directly at node at step  79
     Pred 2 entered:  X11
     Check for pred "X11" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02', 'F01', 'X00', 'F01', 'X01', 'F01', 'X02', 'F01', 'X10', 'F01', 'X11']
     Walked coords  [(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (7, 2), (7, 3), (7, 4), (7, 5)]
     1.0 Inputs are send from pred at step  69
     1.3 Putting inputs to DPR-X directly at node at step  82
     3.0 Arithmetic op is done at step  83
     4.2 Saving results to own MCLM at step  86
     (7, 5) ---> [[], [85], [83], [79, 82, 84], [89, 66, 61, 65, 59, 62, 78, 81]]
###### 1
     Pred 1 entered:  F00
     Check for pred "F00" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0', 'F00', 'X00', 'F00', 'X01', 'F00', 'int0', 'F00', 'X10']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (7, 1), (7, 2), (7, 3)]
     1.0 Inputs are send from pred at step  74
     1.3 Putting inputs to DPR-X directly at node at step  86
     Pred 2 entered:  X10
     Check for pred "X10" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0', 'F00', 'X00', 'F00', 'X01', 'F00', 'int0', 'F00', 'X10']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (7, 1), (7, 2), (7, 3)]
     1.0 Inputs are send from pred at step  77
     1.3 Putting inputs to DPR-X directly at node at step  89
     3.0 Arithmetic op is done at step  90
     4.0 ---Notification is changed for 10 1
     4.0 Saving results to DPR2 directly at step  91
     (7, 3) ---> [[], [], [90], [86, 89, 91], [87, 64, 59, 63, 69, 71, 57, 60, 76, 79, 85, 88]]
###### 13
     Pred 1 entered:  7
     Pred 2 entered:  8
     Check for pred "8" =====> in (7, 7) ['8']
     Walked coords  [(7, 7), (7, 6), (7, 5), (7, 4)]
     1.0 Inputs are send from pred at step  77
     1.2 Putting inputs to DPR1 directly at node at step  82
     3.0 Arithmetic op is done at step  83
     4.2 Saving results to own MCLM at step  86
     (7, 4) ---> [[], [85], [74, 83], [71, 73, 75, 82, 84], [88, 65, 60, 64, 70, 72, 58, 61, 77, 80, 81]]
###### 12
     Pred 1 entered:  5
     Pred 2 entered:  6
     Check for pred "6" =====> in (7, 6) ['6']
     Walked coords  [(7, 6), (7, 7), (7, 8), (6, 8), (5, 8), (4, 8)]
     1.0 Inputs are send from pred at step  71
     1.2 Putting inputs to DPR1 directly at node at step  78
     3.0 Arithmetic op is done at step  79
     4.0 ---Notification is changed for 15 1
     4.0 Saving results to DPR2 directly at step  80
     (4, 8) ---> [[], [], [55, 79], [52, 54, 56, 78, 80], [95, 100, 112, 51, 53, 77]]
###### 11
     Pred 1 entered:  3
     Pred 2 entered:  4
     Check for pred "4" =====> in (0, 9) ['4']
     Walked coords  [(0, 9), (1, 9), (2, 9), (3, 9), (4, 9), (5, 9), (5, 8)]
     1.0 Inputs are send from pred at step  63
     1.2 Putting inputs to DPR1 directly at node at step  71
     3.0 Arithmetic op is done at step  72
     4.2 Saving results to own MCLM at step  75
     (5, 8) ---> [[], [74], [65, 72], [61, 64, 66, 71, 73], [94, 101, 113, 60, 63, 76, 70]]
###### 10
     Pred 1 entered:  1
     Pred 2 entered:  2
     Check for pred "2" =====> in (7, 5) ['2']
     Walked coords  [(7, 5), (7, 4), (7, 3)]
     1.0 Inputs are send from pred at step  89
     1.2 Putting inputs to DPR1 directly at node at step  93
     3.0 Arithmetic op is done at step  94
     4.0 ---Notification is changed for 14 1
     4.0 Saving results to DPR2 directly at step  95
     (7, 3) ---> [[], [], [90, 94], [86, 89, 91, 93, 95], [87, 64, 59, 63, 69, 71, 57, 60, 76, 79, 85, 88, 92]]
###### 15
     Pred 1 entered:  12
     Pred 2 entered:  13
     Check for pred "13" =====> in (7, 4) ['13']
     Walked coords  [(7, 4), (7, 5), (7, 6), (7, 7), (7, 8), (6, 8), (5, 8), (4, 8)]
     1.0 Inputs are send from pred at step  89
     1.2 Putting inputs to DPR1 directly at node at step  98
     3.0 Arithmetic op is done at step  99
     4.2 Saving results to own MCLM at step  102
     (4, 8) ---> [[], [101], [55, 79, 99], [52, 54, 56, 78, 80, 98, 100], [95, 100, 112, 51, 53, 77, 97]]
###### 14
     Pred 1 entered:  10
     Pred 2 entered:  11
     Check for pred "11" =====> in (5, 8) ['11']
     Walked coords  [(5, 8), (6, 8), (7, 8), (7, 7), (7, 6), (7, 5), (7, 4), (7, 3)]
     1.0 Inputs are send from pred at step  78
     1.2 Putting inputs to DPR1 directly at node at step  87
     3.0 Arithmetic op is done at step  96
     4.0 ---Notification is changed for 16 1
     4.0 Saving results to DPR2 directly at step  97
     (7, 3) ---> [[], [], [90, 94, 96], [86, 89, 91, 93, 95, 87, 97], [87, 64, 59, 63, 69, 71, 57, 60, 76, 79, 85, 88, 92, 86]]
###### 9
     Pred 1 entered:  F22
     Check for pred "F22" =====> in (1, 3) ['15', 'F22', 'X22', 'F22', 'X23', 'F22', 'X32']
     Walked coords  [(1, 3), (2, 3), (3, 3), (4, 3), (5, 3), (6, 3), (6, 4), (6, 5), (6, 6), (6, 7), (6, 8)]
     1.0 Inputs are send from pred at step  12
     1.3 Putting inputs to DPR-X directly at node at step  24
     Pred 2 entered:  X32
     Check for pred "X32" =====> in (1, 3) ['15', 'F22', 'X22', 'F22', 'X23', 'F22', 'X32']
     Walked coords  [(1, 3), (2, 3), (3, 3), (4, 3), (5, 3), (6, 3), (6, 4), (6, 5), (6, 6), (6, 7), (6, 8)]
     1.0 Inputs are send from pred at step  56
     1.3 Putting inputs to DPR-X directly at node at step  68
     3.0 Arithmetic op is done at step  69
     4.2 Saving results to own MCLM at step  72
     (6, 8) ---> [[], [71], [69], [24, 68, 70], [93, 102, 114, 75, 95, 80, 23, 67]]
###### 16
     Pred 1 entered:  14
     Pred 2 entered:  15
     Check for pred "15" =====> in (4, 8) ['15']
     Walked coords  [(4, 8), (5, 8), (6, 8), (7, 8), (7, 7), (7, 6), (7, 5), (7, 4), (7, 3)]
     1.0 Inputs are send from pred at step  105
     1.2 Putting inputs to DPR1 directly at node at step  115
     3.0 Arithmetic op is done at step  116
     4.0 ---Notification is changed for 17 1
     4.0 Saving results to DPR2 directly at step  117
     (7, 3) ---> [[], [], [90, 94, 96, 116], [86, 89, 91, 93, 95, 87, 97, 115, 117], [87, 64, 59, 63, 69, 71, 57, 60, 76, 79, 85, 88, 92, 86, 114]]
###### 17
     Pred 1 entered:  16
     Pred 2 entered:  9
     Check for pred "9" =====> in (6, 8) ['9']
     Walked coords  [(6, 8), (7, 8), (7, 7), (7, 6), (7, 5), (7, 4), (7, 3)]
     1.0 Inputs are send from pred at step  77
     1.2 Putting inputs to DPR1 directly at node at step  85
     3.0 Arithmetic op is done at step  118
     4.2 Saving results to own MCLM at step  121
     (7, 3) ---> [[], [120], [90, 94, 96, 116, 118], [86, 89, 91, 93, 95, 87, 97, 115, 117, 85, 119], [87, 64, 59, 63, 69, 71, 57, 60, 76, 79, 85, 88, 92, 86, 114, 84]]
###### y21
     Pred 1 entered:  17
     1.4 This is actually last node at step  121

Final results after rescheduling (node.name, node.sched): by PEs
(7, 3)  --->  [('1', 91), ('10', 95), ('14', 97), ('16', 117), ('17', 121), ('y21', 121)]
(4, 8)  --->  [('5', 56), ('12', 80), ('15', 102)]
(5, 8)  --->  [('3', 66), ('11', 75)]
(7, 4)  --->  [('7', 75), ('13', 86)]
(7, 5)  --->  [('2', 86)]
(0, 9)  --->  [('4', 60)]
(7, 6)  --->  [('6', 68)]
(7, 7)  --->  [('8', 72)]
(6, 8)  --->  [('9', 72)]

PE map 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Node scheds and CCM commands:
1  --->  [(1, 0), ['CCM1', 1, 0, 'PE1'], [(0, 4), ['CCM1', 1, 1, 'PE1']], [(0, 0), ['CCM1', 1, 1, 'PE1']], [(0, 3), ['CCM1', 1, 1, 'PE1']], [(0, 2), ['CCM1', 1, 1, 'PE1']], [(0, 1), ['CCM1', 1, 1, 'PE1']], [(1, 1), ['CCM1', 1, 0, 'PE1']], [(1, 2), ['CCM1', 1, 1, 'PE1']], [(1, 3), ['CCM1', 1, 1, 'PE1']]]
2  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'DPR1']], [(0, 2), ['CCM1', 2, 0, 'PE1']], [(0, 1), ['CCM3', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
3  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(1, 0), ['CCM1', 3, 1, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 3, 0, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 3, 1, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 3, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM1', 3, 2, 'PE1']]]
6  --->  [(2, 0), ['CCM6', 'DPR1'], [(0, 3), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
4  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM1', 4, 0, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
5  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(0, 4), ['CCM3', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 5, 1, 'PE1']], [(0, 1), ['CCM1', 5, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 5, 3, 'PE1']], [(0, 2), ['CCM1', 5, 0, 'PE1']], [(1, 3), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM1', 5, 1, 'PE1']]]
8  --->  [(2, 0), ['CCM6', 'DPR2'], [(0, 3), ['CCM6', 'DPR2']], [(0, 4), ['CCM5', 'DPR3']], [(0, 2), ['CCM6', 'DPR2']], [(1, 1), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM1', 8, 3, 'PE1']], [(0, 1), ['CCM3', 'PERouter']], [(1, 3), ['CCM1', 8, 4, 'PE1']]]
9  --->  [(2, 0), ['CCM4', '*'], [(0, 3), ['CCM4', '*']], [(0, 4), ['CCM2', 'MCLM1']], [(0, 2), ['CCM4', '*']], [(1, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 9, 0, 'PE1']], [(1, 2), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM3', 'PERouter']]]
10  --->  [(2, 0), ['CCM5', 'DPR3'], [(0, 3), ['CCM5', 'DPR2']], [(0, 2), ['CCM5', 'DPR2']], [(1, 1), ['CCM4', '*']], [(0, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'DPR1']], [(0, 0), ['CCM1', 10, 1, 'PE1']], [(1, 2), ['CCM5', 'DPR3']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 10, 3, 'PE1']], [(0, 2), ['CCM1', 10, 4, 'PE1']], [(1, 2), ['CCM1', 10, 2, 'PE1']], [(2, 7), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM1', 10, 1, 'PE1']]]
11  --->  [(2, 0), ['CCM2', 'MCLM1'], [(1, 1), ['CCM5', 'DPR3']], [(0, 1), ['CCM4', '*']], [(1, 0), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'DPR2']], [(0, 4), ['CCM1', 11, 2, 'PE1']], [(1, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM1', 11, 3, 'PE1']], [(3, 0), ['CCM6', 'DPR1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
7  --->  [(0, 4), ['CCM4', '*'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 7, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 7, 1, 'PE1']], [(3, 2), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'NodeRouter']]]
12  --->  [(1, 1), ['CCM2', 'MCLM1'], [(0, 1), ['CCM5', 'DPR2']], [(1, 0), ['CCM6', 'DPR2']], [(0, 0), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 4), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 12, 0, 'PE1']], [(1, 2), ['CCM1', 12, 1, 'PE1']], [(2, 7), ['CCM6', 'DPR2']], [(1, 3), ['CCM6', 'NodeRouter']]]
13  --->  [(1, 0), ['CCM4', '*'], [(0, 0), ['CCM5', 'DPR2']], [(2, 0), ['CCM1', 13, 0, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 13, 4, 'PE1']], [(0, 3), ['CCM1', 13, 4, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(2, 7), ['CCM4', '*']]]
14  --->  [(1, 0), ['CCM5', 'DPR3'], [(2, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 14, 2, 'PE1']], [(1, 2), ['CCM1', 14, 0, 'PE1']], [(1, 0), ['CCM1', 14, 1, 'PE1']], [(2, 4), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 14, 6, 'PE1']], [(0, 0), ['CCM1', 14, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']], [(2, 7), ['CCM5', 'DPR3']]]
15  --->  [(1, 0), ['CCM2', 'MCLM1'], [(2, 0), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 15, 3, 'PE1']], [(0, 3), ['CCM1', 15, 3, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(2, 7), ['CCM2', 'MCLM1']]]
22  --->  [(0, 3), ['CCM6', 'DPR1'], [(0, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'DPR2']], [(3, 0), ['CCM5', 'DPR2']], [(2, 4), ['CCM2', 'MCLM1']], [(1, 4), ['CCM1', 22, 0, 'PE1']], [(3, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(4, 5), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(5, 7), ['CCM5', 'DPR3']]]
23  --->  [(0, 3), ['CCM4', '+'], [(0, 0), ['CCM4', '+']], [(3, 1), ['CCM4', '*']], [(1, 4), ['CCM3', 'PERouter']], [(3, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(4, 4), ['CCM6', 'DPR1']], [(3, 4), ['CCM6', 'DPR1']], [(4, 2), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 1), ['CCM6', 'DPR2']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 23, 3, 'PE1']], [(1, 0), ['CCM1', 23, 3, 'PE1']], [(0, 4), ['CCM1', 23, 3, 'PE1']], [(1, 2), ['CCM1', 23, 6, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(5, 7), ['CCM2', 'MCLM1']]]
24  --->  [(0, 3), ['CCM5', 'DPR3'], [(0, 0), ['CCM5', 'DPR2']], [(0, 1), ['CCM1', 24, 2, 'PE1']], [(3, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 24, 1, 'PE1']], [(2, 3), ['CCM6', 'DPR1']], [(2, 4), ['CCM1', 24, 0, 'PE1']], [(1, 4), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM5', 'DPR3']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM1', 24, 3, 'PE1']], [(0, 2), ['CCM1', 24, 7, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(6, 8), ['CCM6', 'DPR1']]]
25  --->  [(0, 3), ['CCM2', 'MCLM1'], [(0, 1), ['CCM3', 'PERouter']], [(3, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 4), ['CCM3', 'PERouter']], [(4, 4), ['CCM6', 'DPR2']], [(3, 4), ['CCM6', 'DPR2']], [(4, 2), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'DPR2']], [(1, 5), ['CCM6', 'DPR1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 6), ['CCM6', 'DPR2']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(5, 7), ['CCM1', 25, 0, 'PE1']]]
17  --->  [(0, 2), ['CCM6', 'DPR1'], [(1, 0), ['CCM1', 17, 2, 'PE1']], [(3, 1), ['CCM6', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 4), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(3, 2), ['CCM4', '*']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 17, 6, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 17, 6, 'PE1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 7), ['CCM1', 17, 0, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(5, 7), ['CCM6', 'DPR1']]]
18  --->  [(0, 2), ['CCM4', '+'], [(1, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR2']], [(1, 4), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(3, 2), ['CCM5', 'DPR3']], [(1, 1), ['CCM1', 18, 3, 'PE1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 18, 1, 'PE1']], [(2, 7), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']]]
19  --->  [(0, 2), ['CCM5', 'DPR2'], [(0, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(2, 4), ['CCM6', 'DPR2']], [(1, 3), ['CCM4', '*']], [(1, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 19, 3, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM1', 19, 7, 'PE1']], [(0, 2), ['CCM1', 19, 7, 'PE1']], [(2, 7), ['CCM6', 'NodeRouter']]]
16  --->  [(1, 1), ['CCM6', 'NodeRouter'], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 16, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 16, 0, 'PE1']], [(3, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 16, 1, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 16, 7, 'PE1']]]
20  --->  [(0, 1), ['CCM4', '+'], [(3, 0), ['CCM6', 'DPR2']], [(2, 4), ['CCM4', '*']], [(1, 3), ['CCM5', 'DPR2']], [(1, 4), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR1']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(5, 7), ['CCM6', 'DPR2']]]
21  --->  [(0, 1), ['CCM5', 'DPR3'], [(0, 0), ['CCM6', 'DPR1']], [(3, 0), ['CCM4', '*']], [(2, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM1', 21, 0, 'PE1']], [(1, 1), ['CCM1', 21, 6, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 21, 6, 'PE1']], [(0, 1), ['CCM1', 21, 1, 'PE1']], [(1, 2), ['CCM1', 21, 4, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 21, 9, 'PE1']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 21, 10, 'PE1']], [(5, 7), ['CCM4', '*']]]
27  --->  [(0, 3), ['CCM1', 27, 2, 'PE1'], [(0, 0), ['CCM3', 'PERouter']], [(3, 1), ['CCM1', 27, 0, 'PE1']], [(2, 1), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR1']], [(4, 4), ['CCM5', 'DPR3']], [(3, 4), ['CCM5', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(4, 2), ['CCM1', 27, 0, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']], [(5, 7), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM3', 'PERouter']]]
28  --->  [(0, 3), ['CCM3', 'PERouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 1), ['CCM3', 'PERouter']], [(4, 0), ['CCM6', 'DPR2']], [(4, 4), ['CCM2', 'MCLM1']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM3', 'PERouter']], [(1, 5), ['CCM6', 'DPR2']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 28, 6, 'PE1']], [(1, 0), ['CCM1', 28, 9, 'PE1']], [(0, 7), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'NodeRouter']], [(5, 3), ['CCM6', 'DPR1']], [(6, 5), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']]]
29  --->  [(0, 3), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM6', 'DPR1']], [(4, 0), ['CCM4', '*']], [(0, 5), ['CCM6', 'DPR1']], [(4, 2), ['CCM6', 'NodeRouter']], [(1, 5), ['CCM4', '*']], [(1, 1), ['CCM1', 29, 8, 'PE1']], [(0, 3), ['CCM1', 29, 7, 'PE1']], [(0, 2), ['CCM1', 29, 6, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM1', 29, 0, 'PE1']], [(0, 4), ['CCM1', 29, 9, 'PE1']]]
32  --->  [(0, 2), ['CCM6', 'DPR1'], [(2, 2), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM6', 'DPR1']], [(1, 3), ['CCM5', 'DPR2']], [(4, 3), ['CCM5', 'DPR3']], [(4, 4), ['CCM6', 'NodeRouter']], [(5, 2), ['CCM6', 'DPR1']], [(5, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 6), ['CCM4', '*']], [(1, 1), ['CCM1', 32, 9, 'PE1']], [(0, 3), ['CCM1', 32, 7, 'PE1']], [(3, 6), ['CCM6', 'DPR2']], [(0, 4), ['CCM3', 'PERouter']]]
33  --->  [(0, 2), ['CCM4', '+'], [(2, 2), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 33, 1, 'PE1']], [(3, 0), ['CCM4', '+']], [(4, 3), ['CCM2', 'MCLM1']], [(0, 6), ['CCM5', 'DPR2']], [(2, 5), ['CCM6', 'DPR1']], [(4, 5), ['CCM6', 'DPR2']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 33, 10, 'PE1']], [(0, 7), ['CCM6', 'DPR2']], [(0, 3), ['CCM3', 'PERouter']], [(3, 6), ['CCM4', '*']], [(0, 4), ['CCM6', 'NodeRouter']]]
34  --->  [(0, 2), ['CCM5', 'DPR3'], [(2, 2), ['CCM5', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM5', 'DPR3']], [(4, 1), ['CCM6', 'DPR1']], [(1, 5), ['CCM1', 34, 0, 'PE1']], [(4, 5), ['CCM4', '*']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 7), ['CCM4', '*']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 34, 10, 'PE1']], [(3, 6), ['CCM5', 'DPR2']], [(1, 2), ['CCM1', 34, 10, 'PE1']], [(0, 2), ['CCM1', 34, 7, 'PE1']]]
35  --->  [(0, 2), ['CCM2', 'MCLM1'], [(2, 3), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 0), ['CCM2', 'MCLM1']], [(2, 2), ['CCM4', '+']], [(4, 1), ['CCM4', '*']], [(0, 0), ['CCM1', 35, 0, 'PE1']], [(4, 3), ['CCM1', 35, 0, 'PE1']], [(3, 4), ['CCM6', 'DPR1']], [(1, 5), ['CCM3', 'PERouter']], [(4, 5), ['CCM5', 'DPR3']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 7), ['CCM5', 'DPR2']], [(0, 3), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']]]
26  --->  [(0, 1), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 26, 1, 'PE1']], [(2, 4), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(4, 4), ['CCM4', '*']], [(3, 4), ['CCM4', '*']], [(0, 1), ['CCM1', 26, 0, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 26, 7, 'PE1']], [(0, 4), ['CCM1', 26, 10, 'PE1']], [(5, 7), ['CCM3', 'PERouter']], [(0, 2), ['CCM1', 26, 7, 'PE1']]]
30  --->  [(0, 0), ['CCM4', '+'], [(1, 3), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM5', 'DPR2']], [(0, 5), ['CCM4', '*']], [(4, 4), ['CCM1', 30, 0, 'PE1']], [(1, 5), ['CCM5', 'DPR3']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 30, 6, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(3, 6), ['CCM6', 'DPR1']], [(0, 1), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']]]
31  --->  [(0, 0), ['CCM5', 'DPR2'], [(0, 0), ['CCM1', 31, 0, 'PE1']], [(1, 3), ['CCM4', '+']], [(4, 3), ['CCM4', '*']], [(0, 5), ['CCM5', 'DPR2']], [(4, 4), ['CCM3', 'PERouter']], [(1, 5), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 6), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 31, 13, 'PE1']]]
37  --->  [(0, 2), ['CCM1', 37, 2, 'PE1'], [(2, 3), ['CCM5', 'DPR3']], [(2, 2), ['CCM2', 'MCLM1']], [(3, 0), ['CCM1', 37, 0, 'PE1']], [(4, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 37, 1, 'PE1']], [(4, 3), ['CCM6', 'NodeRouter']], [(3, 4), ['CCM5', 'DPR2']], [(1, 6), ['CCM6', 'DPR1']], [(4, 6), ['CCM6', 'DPR1']], [(6, 0), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 37, 3, 'PE1']], [(1, 8), ['CCM6', 'DPR1']], [(1, 2), ['CCM3', 'PERouter']]]
38  --->  [(0, 2), ['CCM3', 'PERouter'], [(2, 3), ['CCM2', 'MCLM1']], [(2, 1), ['CCM6', 'DPR1']], [(3, 0), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 5), ['CCM6', 'DPR1']], [(5, 2), ['CCM6', 'DPR2']], [(2, 5), ['CCM6', 'DPR2']], [(4, 5), ['CCM1', 38, 0, 'PE1']], [(1, 1), ['CCM1', 38, 9, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM1', 38, 3, 'PE1']], [(0, 3), ['CCM1', 38, 3, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']]]
39  --->  [(0, 2), ['CCM6', 'NodeRouter'], [(3, 0), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM1', 39, 0, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM4', '+']], [(4, 1), ['CCM1', 39, 0, 'PE1']], [(5, 2), ['CCM4', '*']], [(2, 5), ['CCM4', '*']], [(4, 5), ['CCM3', 'PERouter']], [(4, 6), ['CCM6', 'DPR2']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 39, 9, 'PE1']], [(3, 7), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 8), ['CCM6', 'DPR2']]]
43  --->  [(0, 0), ['CCM6', 'DPR1'], [(4, 0), ['CCM4', '+']], [(0, 5), ['CCM1', 43, 0, 'PE1']], [(2, 6), ['CCM5', 'DPR3']], [(0, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM1', 43, 0, 'PE1']], [(5, 4), ['CCM6', 'DPR1']], [(6, 0), ['CCM4', '*']], [(1, 7), ['CCM6', 'DPR2']], [(1, 0), ['CCM1', 43, 12, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 43, 14, 'PE1']], [(1, 2), ['CCM1', 43, 12, 'PE1']], [(0, 4), ['CCM3', 'PERouter']]]
44  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(4, 0), ['CCM5', 'DPR3']], [(0, 5), ['CCM3', 'PERouter']], [(2, 6), ['CCM2', 'MCLM1']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 44, 8, 'PE1']], [(5, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 44, 8, 'PE1']], [(6, 0), ['CCM5', 'DPR3']], [(1, 7), ['CCM4', '*']], [(4, 6), ['CCM1', 44, 0, 'PE1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 44, 7, 'PE1']]]
45  --->  [(0, 0), ['CCM5', 'DPR2'], [(3, 3), ['CCM6', 'DPR1']], [(4, 0), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(6, 0), ['CCM2', 'MCLM1']], [(1, 7), ['CCM5', 'DPR3']], [(4, 6), ['CCM3', 'PERouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 45, 9, 'PE1']], [(0, 3), ['CCM3', 'PERouter']]]
46  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM1', 46, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 7), ['CCM2', 'MCLM1']], [(0, 1), ['CCM1', 46, 10, 'PE1']], [(4, 6), ['CCM6', 'NodeRouter']], [(6, 5), ['CCM6', 'DPR2']], [(1, 1), ['CCM1', 46, 12, 'PE1']], [(3, 7), ['CCM6', 'DPR2']], [(7, 2), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 46, 16, 'PE1']], [(0, 2), ['CCM1', 46, 7, 'PE1']]]
47  --->  [(0, 0), ['CCM5', 'DPR3'], [(2, 1), ['CCM4', '+']], [(1, 3), ['CCM4', '+']], [(3, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM1', 47, 0, 'PE1']], [(2, 6), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(6, 0), ['CCM1', 47, 0, 'PE1']], [(6, 5), ['CCM4', '*']], [(1, 1), ['CCM3', 'PERouter']], [(3, 7), ['CCM4', '*']], [(5, 6), ['CCM6', 'DPR1']], [(7, 0), ['CCM6', 'DPR1']], [(0, 8), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']]]
48  --->  [(0, 0), ['CCM2', 'MCLM1'], [(2, 1), ['CCM5', 'DPR2']], [(1, 3), ['CCM5', 'DPR3']], [(3, 3), ['CCM4', '*']], [(4, 0), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 48, 1, 'PE1']], [(5, 1), ['CCM6', 'DPR1']], [(2, 6), ['CCM6', 'NodeRouter']], [(5, 0), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(6, 0), ['CCM3', 'PERouter']], [(1, 7), ['CCM1', 48, 0, 'PE1']], [(6, 5), ['CCM5', 'DPR3']], [(6, 2), ['CCM6', 'DPR1']], [(1, 1), ['CCM6', 'NodeRouter']], [(3, 7), ['CCM5', 'DPR2']], [(4, 7), ['CCM6', 'DPR1']], [(0, 1), ['CCM1', 48, 0, 'PE1']], [(1, 1), ['CCM1', 48, 3, 'PE1']], [(0, 8), ['CCM4', '*']], [(1, 0), ['CCM1', 48, 16, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']]]
36  --->  [(2, 3), ['CCM4', '*'], [(2, 2), ['CCM5', 'DPR3']], [(4, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM3', 'PERouter']], [(4, 3), ['CCM3', 'PERouter']], [(3, 4), ['CCM4', '+']], [(1, 5), ['CCM6', 'NodeRouter']], [(4, 5), ['CCM2', 'MCLM1']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 36, 12, 'PE1']], [(0, 3), ['CCM1', 36, 7, 'PE1']], [(0, 2), ['CCM6', 'NodeRouter']], [(6, 1), ['CCM6', 'DPR1']], [(1, 2), ['CCM1', 36, 1, 'PE1']]]
40  --->  [(2, 1), ['CCM6', 'DPR2'], [(2, 3), ['CCM1', 40, 0, 'PE1']], [(2, 2), ['CCM3', 'PERouter']], [(0, 5), ['CCM5', 'DPR3']], [(4, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 40, 1, 'PE1']], [(2, 5), ['CCM5', 'DPR2']], [(4, 5), ['CCM6', 'NodeRouter']], [(4, 6), ['CCM4', '*']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 40, 7, 'PE1']], [(0, 4), ['CCM1', 40, 9, 'PE1']]]
41  --->  [(2, 1), ['CCM4', '*'], [(2, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM2', 'MCLM1']], [(4, 1), ['CCM6', 'NodeRouter']], [(5, 2), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 6), ['CCM6', 'DPR2']], [(4, 6), ['CCM5', 'DPR3']], [(1, 7), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 41, 12, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']]]
42  --->  [(2, 1), ['CCM5', 'DPR2'], [(2, 3), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']], [(0, 0), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM4', '*']], [(0, 1), ['CCM1', 42, 0, 'PE1']], [(4, 6), ['CCM2', 'MCLM1']], [(6, 0), ['CCM6', 'DPR2']], [(5, 5), ['CCM6', 'DPR1']], [(0, 3), ['CCM1', 42, 12, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 42, 16, 'PE1']]]
49  --->  [(1, 3), ['CCM2', 'MCLM1'], [(2, 1), ['CCM4', '+']], [(3, 3), ['CCM5', 'DPR2']], [(4, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(6, 0), ['CCM6', 'NodeRouter']], [(1, 7), ['CCM3', 'PERouter']], [(6, 5), ['CCM2', 'MCLM1']], [(0, 1), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(3, 8), ['CCM6', 'DPR1']], [(0, 8), ['CCM5', 'DPR2']], [(1, 2), ['CCM1', 49, 7, 'PE1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 2), ['CCM1', 49, 16, 'PE1']]]
50  --->  [(2, 1), ['CCM5', 'DPR2'], [(3, 3), ['CCM4', '+']], [(5, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 50, 0, 'PE1']], [(1, 7), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 50, 12, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM3', 'PERouter']]]
51  --->  [(1, 3), ['CCM1', 51, 0, 'PE1'], [(3, 3), ['CCM5', 'DPR2']], [(5, 1), ['CCM4', '*']], [(0, 0), ['CCM3', 'PERouter']], [(5, 4), ['CCM6', 'DPR1']], [(0, 1), ['CCM3', 'PERouter']], [(2, 8), ['CCM6', 'DPR1']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']]]
52  --->  [(1, 3), ['CCM3', 'PERouter'], [(3, 3), ['CCM6', 'DPR1']], [(5, 1), ['CCM5', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 52, 1, 'PE1']], [(0, 6), ['CCM6', 'DPR1']], [(6, 4), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 52, 14, 'PE1']], [(1, 0), ['CCM1', 52, 13, 'PE1']], [(4, 8), ['CCM6', 'DPR1']]]
53  --->  [(1, 3), ['CCM6', 'NodeRouter'], [(3, 3), ['CCM4', '+']], [(3, 5), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(5, 1), ['CCM4', '+']], [(0, 6), ['CCM4', '+']], [(6, 5), ['CCM1', 53, 0, 'PE1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM1', 53, 0, 'PE1']], [(7, 2), ['CCM6', 'DPR2']], [(1, 2), ['CCM1', 53, 12, 'PE1']]]
58  --->  [(2, 1), ['CCM6', 'DPR1'], [(3, 4), ['CCM5', 'DPR3']], [(3, 5), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(5, 4), ['CCM4', '+']], [(3, 6), ['CCM2', 'MCLM1']], [(6, 2), ['CCM5', 'DPR2']], [(6, 4), ['CCM5', 'DPR3']], [(7, 1), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 58, 9, 'PE1']], [(0, 9), ['CCM5', 'DPR3']]]
59  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM2', 'MCLM1']], [(1, 6), ['CCM6', 'DPR2']], [(5, 0), ['CCM6', 'DPR1']], [(5, 1), ['CCM1', 59, 0, 'PE1']], [(5, 5), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(5, 4), ['CCM5', 'DPR3']], [(6, 4), ['CCM2', 'MCLM1']], [(0, 0), ['CCM1', 59, 0, 'PE1']], [(4, 7), ['CCM1', 59, 0, 'PE1']], [(1, 1), ['CCM3', 'PERouter']], [(0, 9), ['CCM2', 'MCLM1']]]
60  --->  [(2, 1), ['CCM5', 'DPR2'], [(1, 6), ['CCM4', '*']], [(3, 5), ['CCM1', 60, 0, 'PE1']], [(5, 1), ['CCM3', 'PERouter']], [(5, 5), ['CCM4', '*']], [(5, 4), ['CCM2', 'MCLM1']], [(6, 3), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(6, 2), ['CCM6', 'DPR1']], [(4, 7), ['CCM3', 'PERouter']], [(7, 2), ['CCM1', 60, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 60, 14, 'PE1']]]
61  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM1', 61, 0, 'PE1']], [(1, 6), ['CCM5', 'DPR3']], [(5, 0), ['CCM6', 'DPR2']], [(3, 5), ['CCM3', 'PERouter']], [(5, 1), ['CCM6', 'NodeRouter']], [(5, 5), ['CCM5', 'DPR3']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 61, 12, 'PE1']], [(6, 2), ['CCM4', '+']], [(6, 4), ['CCM1', 61, 0, 'PE1']], [(4, 7), ['CCM6', 'NodeRouter']], [(7, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(7, 6), ['CCM6', 'DPR1']], [(5, 8), ['CCM6', 'DPR1']], [(0, 9), ['CCM1', 61, 0, 'PE1']]]
62  --->  [(2, 1), ['CCM5', 'DPR3'], [(3, 4), ['CCM3', 'PERouter']], [(1, 6), ['CCM2', 'MCLM1']], [(5, 0), ['CCM4', '*']], [(3, 5), ['CCM6', 'NodeRouter']], [(5, 5), ['CCM2', 'MCLM1']], [(6, 3), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(6, 2), ['CCM5', 'DPR3']], [(6, 4), ['CCM3', 'PERouter']], [(7, 1), ['CCM6', 'DPR2']], [(7, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(0, 9), ['CCM3', 'PERouter']]]
63  --->  [(2, 1), ['CCM2', 'MCLM1'], [(3, 4), ['CCM6', 'NodeRouter']], [(5, 0), ['CCM5', 'DPR2']], [(3, 6), ['CCM1', 63, 0, 'PE1']], [(6, 3), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(6, 2), ['CCM2', 'MCLM1']], [(6, 4), ['CCM6', 'NodeRouter']], [(7, 1), ['CCM4', '*']], [(0, 0), ['CCM1', 63, 1, 'PE1']], [(0, 9), ['CCM6', 'NodeRouter']]]
56  --->  [(3, 4), ['CCM6', 'DPR1'], [(3, 5), ['CCM4', '*']], [(5, 4), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 6), ['CCM4', '+']], [(6, 2), ['CCM6', 'DPR2']], [(6, 4), ['CCM6', 'DPR2']], [(4, 7), ['CCM5', 'DPR3']], [(5, 6), ['CCM5', 'DPR2']], [(1, 8), ['CCM5', 'DPR2']], [(0, 1), ['CCM1', 56, 14, 'PE1']], [(7, 2), ['CCM2', 'MCLM1']], [(4, 8), ['CCM5', 'DPR2']], [(0, 9), ['CCM6', 'DPR2']], [(1, 3), ['CCM6', 'NodeRouter']]]
57  --->  [(3, 4), ['CCM4', '+'], [(3, 5), ['CCM5', 'DPR3']], [(5, 4), ['CCM5', 'DPR2']], [(0, 0), ['CCM1', 57, 10, 'PE1']], [(3, 6), ['CCM5', 'DPR3']], [(6, 2), ['CCM4', '*']], [(6, 4), ['CCM4', '*']], [(4, 7), ['CCM2', 'MCLM1']], [(0, 1), ['CCM3', 'PERouter']], [(0, 9), ['CCM4', '*']]]
54  --->  [(3, 3), ['CCM5', 'DPR2'], [(0, 0), ['CCM6', 'NodeRouter']], [(5, 1), ['CCM5', 'DPR3']], [(0, 6), ['CCM5', 'DPR2']], [(0, 0), ['CCM1', 54, 0, 'PE1']], [(4, 7), ['CCM6', 'DPR2']], [(5, 6), ['CCM6', 'DPR2']], [(6, 5), ['CCM3', 'PERouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(1, 8), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(7, 2), ['CCM4', '*']], [(1, 2), ['CCM3', 'PERouter']], [(4, 8), ['CCM6', 'DPR2']], [(0, 9), ['CCM6', 'DPR1']], [(1, 3), ['CCM1', 54, 6, 'PE1']]]
66  --->  [(3, 3), ['CCM6', 'DPR1'], [(1, 6), ['CCM6', 'NodeRouter']], [(5, 3), ['CCM6', 'DPR1']], [(0, 7), ['CCM5', 'DPR2']], [(5, 5), ['CCM6', 'NodeRouter']], [(5, 4), ['CCM6', 'NodeRouter']], [(5, 6), ['CCM4', '+']], [(6, 2), ['CCM3', 'PERouter']], [(3, 8), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(7, 6), ['CCM5', 'DPR3']], [(5, 8), ['CCM5', 'DPR2']], [(0, 1), ['CCM6', 'NodeRouter']]]
67  --->  [(3, 3), ['CCM4', '+'], [(5, 6), ['CCM5', 'DPR3']], [(6, 3), ['CCM1', 67, 0, 'PE1']], [(6, 2), ['CCM6', 'NodeRouter']], [(3, 8), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(7, 1), ['CCM1', 67, 0, 'PE1']], [(7, 6), ['CCM2', 'MCLM1']], [(0, 1), ['CCM1', 67, 16, 'PE1']]]
68  --->  [(3, 3), ['CCM5', 'DPR2'], [(5, 6), ['CCM2', 'MCLM1']], [(6, 3), ['CCM3', 'PERouter']], [(3, 8), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 68, 0, 'PE1']], [(7, 1), ['CCM3', 'PERouter']], [(7, 7), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(6, 8), ['CCM6', 'DPR2']]]
69  --->  [(3, 3), ['CCM4', '+'], [(5, 3), ['CCM6', 'DPR2']], [(6, 3), ['CCM6', 'NodeRouter']], [(3, 8), ['CCM2', 'MCLM1']], [(6, 7), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(7, 1), ['CCM6', 'NodeRouter']], [(6, 6), ['CCM6', 'DPR1']], [(7, 7), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(7, 6), ['CCM1', 69, 0, 'PE1']], [(6, 8), ['CCM4', '*']]]
70  --->  [(3, 3), ['CCM5', 'DPR3'], [(2, 5), ['CCM6', 'DPR1']], [(5, 3), ['CCM4', '*']], [(5, 3), ['CCM6', 'DPR1']], [(6, 1), ['CCM6', 'DPR1']], [(5, 6), ['CCM1', 70, 0, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 70, 1, 'PE1']], [(7, 7), ['CCM5', 'DPR3']], [(7, 6), ['CCM3', 'PERouter']], [(6, 8), ['CCM5', 'DPR3']]]
71  --->  [(3, 3), ['CCM2', 'MCLM1'], [(2, 5), ['CCM4', '+']], [(5, 0), ['CCM6', 'DPR1']], [(5, 3), ['CCM5', 'DPR2']], [(3, 7), ['CCM6', 'DPR1']], [(5, 6), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(3, 8), ['CCM1', 71, 0, 'PE1']], [(7, 7), ['CCM2', 'MCLM1']], [(7, 4), ['CCM6', 'DPR1']], [(7, 6), ['CCM6', 'NodeRouter']], [(5, 8), ['CCM6', 'DPR1']], [(6, 8), ['CCM2', 'MCLM1']]]
55  --->  [(3, 5), ['CCM6', 'DPR2'], [(5, 1), ['CCM2', 'MCLM1']], [(5, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 6), ['CCM6', 'DPR1']], [(4, 7), ['CCM4', '*']], [(5, 6), ['CCM4', '*']], [(6, 5), ['CCM6', 'NodeRouter']], [(1, 8), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(7, 2), ['CCM5', 'DPR3']], [(1, 2), ['CCM6', 'NodeRouter']], [(4, 8), ['CCM4', '*']], [(1, 3), ['CCM3', 'PERouter']]]
64  --->  [(1, 6), ['CCM1', 64, 0, 'PE1'], [(0, 7), ['CCM6', 'DPR1']], [(5, 5), ['CCM1', 64, 0, 'PE1']], [(5, 4), ['CCM1', 64, 0, 'PE1']], [(3, 6), ['CCM3', 'PERouter']], [(6, 3), ['CCM5', 'DPR3']], [(7, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM3', 'PERouter']], [(7, 7), ['CCM6', 'DPR1']], [(7, 6), ['CCM6', 'DPR2']], [(5, 8), ['CCM6', 'DPR2']], [(0, 1), ['CCM1', 64, 0, 'PE1']]]
65  --->  [(1, 6), ['CCM3', 'PERouter'], [(0, 7), ['CCM4', '+']], [(5, 5), ['CCM3', 'PERouter']], [(5, 4), ['CCM3', 'PERouter']], [(3, 6), ['CCM6', 'NodeRouter']], [(6, 3), ['CCM2', 'MCLM1']], [(5, 6), ['CCM6', 'DPR1']], [(6, 2), ['CCM1', 65, 0, 'PE1']], [(7, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 65, 1, 'PE1']], [(7, 6), ['CCM4', '*']], [(5, 8), ['CCM4', '*']], [(0, 1), ['CCM3', 'PERouter']]]
72  --->  [(2, 5), ['CCM5', 'DPR3'], [(5, 0), ['CCM4', '+']], [(5, 3), ['CCM4', '+']], [(5, 3), ['CCM6', 'DPR1']], [(6, 1), ['CCM6', 'DPR2']], [(3, 7), ['CCM4', '+']], [(5, 6), ['CCM6', 'NodeRouter']], [(6, 7), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(7, 0), ['CCM6', 'DPR1']], [(3, 8), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 72, 0, 'PE1']], [(5, 8), ['CCM4', '+']]]
73  --->  [(2, 5), ['CCM2', 'MCLM1'], [(5, 0), ['CCM5', 'DPR2']], [(0, 6), ['CCM6', 'DPR1']], [(5, 3), ['CCM5', 'DPR2']], [(6, 1), ['CCM4', '*']], [(3, 7), ['CCM5', 'DPR2']], [(6, 1), ['CCM6', 'DPR1']], [(6, 7), ['CCM4', '*']], [(3, 8), ['CCM6', 'NodeRouter']], [(7, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(5, 8), ['CCM5', 'DPR3']]]
74  --->  [(0, 6), ['CCM4', '+'], [(5, 3), ['CCM4', '+']], [(6, 1), ['CCM5', 'DPR2']], [(7, 0), ['CCM6', 'DPR2']], [(6, 7), ['CCM5', 'DPR3']], [(7, 4), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(5, 8), ['CCM2', 'MCLM1']]]
75  --->  [(0, 6), ['CCM5', 'DPR3'], [(2, 5), ['CCM1', 75, 0, 'PE1']], [(5, 3), ['CCM5', 'DPR2']], [(6, 1), ['CCM4', '+']], [(7, 0), ['CCM4', '*']], [(6, 7), ['CCM2', 'MCLM1']], [(7, 4), ['CCM5', 'DPR2']], [(0, 0), ['CCM1', 75, 16, 'PE1']], [(7, 7), ['CCM1', 75, 0, 'PE1']], [(6, 8), ['CCM1', 75, 0, 'PE1']]]
76  --->  [(0, 6), ['CCM2', 'MCLM1'], [(2, 5), ['CCM3', 'PERouter']], [(0, 7), ['CCM6', 'DPR1']], [(6, 1), ['CCM5', 'DPR2']], [(7, 0), ['CCM5', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(7, 7), ['CCM3', 'PERouter']], [(5, 8), ['CCM1', 76, 0, 'PE1']], [(6, 8), ['CCM3', 'PERouter']]]
77  --->  [(2, 5), ['CCM6', 'NodeRouter'], [(0, 7), ['CCM4', '+']], [(3, 7), ['CCM6', 'DPR1']], [(7, 0), ['CCM4', '+']], [(6, 7), ['CCM1', 77, 0, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(7, 7), ['CCM6', 'NodeRouter']], [(5, 8), ['CCM3', 'PERouter']], [(6, 8), ['CCM6', 'NodeRouter']]]
87  --->  [(5, 0), ['CCM6', 'DPR1'], [(6, 6), ['CCM4', '*']], [(7, 5), ['CCM1', 87, 0, 'PE1']], [(7, 4), ['CCM1', 87, 0, 'PE1']], [(7, 3), ['CCM6', 'DPR1']]]
88  --->  [(5, 0), ['CCM4', '+'], [(6, 6), ['CCM5', 'DPR2']], [(7, 5), ['CCM3', 'PERouter']], [(7, 4), ['CCM3', 'PERouter']]]
89  --->  [(5, 0), ['CCM5', 'DPR2'], [(1, 8), ['CCM6', 'DPR1']], [(6, 6), ['CCM4', '+']], [(7, 3), ['CCM6', 'DPR2']], [(7, 5), ['CCM6', 'NodeRouter']], [(7, 4), ['CCM6', 'NodeRouter']]]
78  --->  [(0, 6), ['CCM1', 78, 0, 'PE1'], [(0, 7), ['CCM5', 'DPR3']], [(3, 7), ['CCM4', '+']], [(7, 0), ['CCM5', 'DPR3']], [(0, 8), ['CCM6', 'DPR1']], [(6, 7), ['CCM3', 'PERouter']], [(4, 8), ['CCM6', 'DPR1']], [(5, 8), ['CCM6', 'NodeRouter']]]
79  --->  [(0, 6), ['CCM3', 'PERouter'], [(0, 7), ['CCM2', 'MCLM1']], [(3, 7), ['CCM5', 'DPR3']], [(2, 8), ['CCM6', 'DPR2']], [(7, 0), ['CCM2', 'MCLM1']], [(0, 8), ['CCM4', '+']], [(6, 7), ['CCM6', 'NodeRouter']], [(7, 5), ['CCM6', 'DPR1']], [(4, 8), ['CCM4', '+']]]
80  --->  [(0, 6), ['CCM6', 'NodeRouter'], [(3, 7), ['CCM2', 'MCLM1']], [(6, 1), ['CCM6', 'DPR1']], [(2, 8), ['CCM4', '*']], [(0, 8), ['CCM5', 'DPR2']], [(4, 8), ['CCM5', 'DPR2']]]
93  --->  [(5, 0), ['CCM6', 'DPR1'], [(7, 3), ['CCM6', 'DPR1']]]
94  --->  [(5, 0), ['CCM4', '+'], [(5, 3), ['CCM6', 'DPR1']], [(1, 8), ['CCM1', 94, 0, 'PE1']], [(7, 3), ['CCM4', '+']]]
95  --->  [(5, 0), ['CCM5', 'DPR2'], [(5, 3), ['CCM4', '+']], [(6, 1), ['CCM6', 'DPR1']], [(1, 8), ['CCM3', 'PERouter']], [(7, 3), ['CCM5', 'DPR2']]]
96  --->  [(5, 0), ['CCM4', '+'], [(5, 3), ['CCM5', 'DPR2']], [(6, 1), ['CCM4', '+']], [(1, 8), ['CCM6', 'NodeRouter']], [(7, 3), ['CCM4', '+']]]
97  --->  [(5, 0), ['CCM5', 'DPR3'], [(5, 3), ['CCM4', '+']], [(6, 1), ['CCM5', 'DPR2']], [(7, 3), ['CCM5', 'DPR2']]]
98  --->  [(5, 0), ['CCM2', 'MCLM1'], [(5, 3), ['CCM5', 'DPR3']], [(6, 1), ['CCM4', '+']], [(4, 8), ['CCM6', 'DPR1']]]
81  --->  [(0, 7), ['CCM1', 81, 0, 'PE1'], [(6, 1), ['CCM4', '+']], [(2, 8), ['CCM5', 'DPR3']], [(7, 0), ['CCM1', 81, 0, 'PE1']]]
82  --->  [(0, 7), ['CCM3', 'PERouter'], [(6, 1), ['CCM5', 'DPR2']], [(3, 7), ['CCM1', 82, 0, 'PE1']], [(2, 8), ['CCM2', 'MCLM1']], [(6, 6), ['CCM6', 'DPR1']], [(7, 0), ['CCM3', 'PERouter']], [(7, 5), ['CCM6', 'DPR2']], [(7, 4), ['CCM6', 'DPR1']]]
83  --->  [(0, 7), ['CCM6', 'NodeRouter'], [(3, 7), ['CCM3', 'PERouter']], [(7, 0), ['CCM6', 'NodeRouter']], [(7, 5), ['CCM4', '*']], [(7, 4), ['CCM4', '+']]]
99  --->  [(5, 3), ['CCM2', 'MCLM1'], [(6, 1), ['CCM5', 'DPR3']], [(4, 8), ['CCM4', '+']]]
84  --->  [(3, 7), ['CCM6', 'NodeRouter'], [(6, 6), ['CCM6', 'DPR1']], [(2, 8), ['CCM1', 84, 0, 'PE1']], [(7, 5), ['CCM5', 'DPR3']], [(7, 4), ['CCM5', 'DPR3']]]
100  --->  [(6, 1), ['CCM2', 'MCLM1'], [(0, 8), ['CCM6', 'DPR1']], [(4, 8), ['CCM5', 'DPR3']]]
86  --->  [(6, 6), ['CCM6', 'DPR2'], [(2, 8), ['CCM6', 'NodeRouter']], [(7, 3), ['CCM6', 'DPR1']]]
85  --->  [(2, 8), ['CCM3', 'PERouter'], [(7, 5), ['CCM2', 'MCLM1']], [(7, 4), ['CCM2', 'MCLM1']], [(7, 3), ['CCM6', 'DPR1']]]
90  --->  [(1, 8), ['CCM4', '+'], [(6, 6), ['CCM5', 'DPR2']], [(7, 3), ['CCM4', '*']]]
91  --->  [(1, 8), ['CCM5', 'DPR3'], [(7, 3), ['CCM5', 'DPR2']]]
92  --->  [(1, 8), ['CCM2', 'MCLM1']]
101  --->  [(0, 8), ['CCM4', '+'], [(4, 8), ['CCM2', 'MCLM1']]]
102  --->  [(0, 8), ['CCM5', 'DPR3']]
103  --->  [(0, 8), ['CCM2', 'MCLM1'], [(4, 8), ['CCM1', 103, 0, 'PE1']]]
105  --->  [(6, 6), ['CCM6', 'DPR1'], [(0, 8), ['CCM1', 105, 0, 'PE1']], [(4, 8), ['CCM6', 'NodeRouter']]]
106  --->  [(6, 6), ['CCM4', '+'], [(0, 8), ['CCM3', 'PERouter']]]
107  --->  [(6, 6), ['CCM5', 'DPR2'], [(0, 8), ['CCM6', 'NodeRouter']]]
117  --->  [(6, 6), ['CCM6', 'DPR1'], [(7, 3), ['CCM5', 'DPR2']]]
118  --->  [(6, 6), ['CCM4', '+'], [(7, 3), ['CCM4', '+']]]
119  --->  [(6, 6), ['CCM5', 'DPR2'], [(7, 3), ['CCM5', 'DPR3']]]
120  --->  [(6, 6), ['CCM4', '+'], [(7, 3), ['CCM2', 'MCLM1']]]
121  --->  [(6, 6), ['CCM5', 'DPR3']]
122  --->  [(6, 6), ['CCM2', 'MCLM1']]
104  --->  [(4, 8), ['CCM3', 'PERouter']]
115  --->  [(7, 3), ['CCM6', 'DPR1']]
116  --->  [(7, 3), ['CCM4', '+']]

Router scheds and CCM commands:
4  --->  [(0, 1), (0, 2), [(2, 2), (3, 2)], [(2, 3), (2, 4)]]
5  --->  [(0, 1), (0, 3), [(1, 2), (1, 1)], [(2, 3), (2, 5)]]
6  --->  [(1, 0), (1, 1), [(2, 3), (2, 6)], [(2, 3), (2, 4)]]
8  --->  [(1, 1), (1, 0), [(2, 0), (3, 0)], [(1, 2), (1, 3)], [(2, 3), (2, 6)], [(2, 3), (3, 3)]]
16  --->  [(2, 1), (2, 2), [(1, 4), (2, 4)], [(1, 2), (3, 2)], [(2, 2), (4, 2)], [(2, 3), (5, 6)], [(2, 3), (6, 3)]]
17  --->  [(2, 1), (2, 3), [(1, 1), (1, 0)], [(2, 0), (3, 0)], [(1, 2), (4, 2)], [(1, 2), (2, 2)], [(1, 0), (2, 0)], [(2, 2), (4, 3)], [(2, 3), (5, 7)], [(2, 3), (6, 4)]]
18  --->  [(2, 1), (1, 3), [(1, 1), (0, 0)], [(1, 4), (2, 4)], [(1, 3), (2, 3)], [(1, 2), (3, 2)], [(1, 0), (3, 0)], [(2, 2), (4, 4)], [(2, 3), (6, 5)]]
19  --->  [(2, 1), (0, 3), [(2, 1), (3, 1)], [(1, 1), (2, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(1, 2), (4, 2)], [(0, 1), (0, 2)], [(1, 0), (4, 0)], [(2, 2), (4, 5)], [(2, 2), (3, 2)], [(2, 3), (6, 6)]]
14  --->  [(0, 3), (0, 2), [(2, 1), (3, 1)], [(1, 2), (1, 4)], [(2, 3), (5, 7)], [(2, 3), (5, 4)], [(2, 3), (4, 3)]]
40  --->  [(0, 1), (0, 0), [(3, 1), (3, 2)], [(1, 0), (3, 1)], [(1, 0), (2, 0)], [(2, 1), (5, 4)], [(1, 3), (1, 7)], [(2, 2), (6, 2)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(1, 2), (5, 2)], [(2, 0), (3, 0)], [(2, 2), (4, 2)]]
11  --->  [(1, 4), (2, 4), [(1, 1), (2, 2)], [(2, 3), (5, 4)], [(2, 3), (3, 3)]]
9  --->  [(1, 2), (1, 4), [(2, 3), (2, 7)], [(2, 3), (4, 3)]]
13  --->  [(1, 2), (1, 3), [(2, 2), (3, 2)], [(2, 3), (5, 6)], [(2, 3), (5, 3)], [(2, 3), (3, 3)]]
10  --->  [(1, 1), (2, 1), [(2, 3), (5, 3)]]
27  --->  [(1, 0), (2, 0), [(2, 3), (1, 3)], [(2, 1), (4, 3)], [(2, 1), (4, 1)], [(2, 0), (4, 0)], [(1, 4), (2, 5)], [(0, 4), (0, 5)], [(1, 2), (2, 2)], [(2, 2), (4, 2)], [(1, 2), (3, 6)], [(1, 2), (3, 4)]]
28  --->  [(1, 0), (2, 1), [(2, 1), (5, 1)], [(2, 0), (5, 0)], [(1, 4), (2, 6)], [(0, 4), (0, 6)], [(1, 2), (2, 3)], [(2, 2), (4, 3)], [(1, 2), (3, 5)], [(6, 7), (6, 6)]]
29  --->  [(1, 0), (2, 2), [(1, 0), (2, 0)], [(1, 1), (2, 1)], [(2, 1), (5, 2)], [(2, 0), (5, 1)], [(1, 2), (2, 4)], [(2, 2), (4, 4)], [(2, 2), (3, 2)], [(0, 5), (0, 6)], [(1, 2), (3, 6)], [(6, 7), (6, 5)], [(1, 2), (1, 3)]]
20  --->  [(1, 1), (2, 2), [(1, 4), (4, 4)], [(1, 4), (2, 4)], [(1, 3), (3, 4)], [(1, 3), (2, 3)], [(0, 1), (0, 3)], [(1, 0), (4, 1)], [(3, 7), (4, 7)], [(2, 2), (4, 2)], [(2, 3), (6, 7)]]
21  --->  [(1, 1), (2, 3), [(2, 1), (3, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(0, 1), (0, 4)], [(1, 3), (1, 4)], [(3, 7), (5, 7)], [(2, 2), (5, 2)], [(2, 3), (6, 8)]]
30  --->  [(1, 0), (2, 1), [(1, 1), (3, 1)], [(4, 3), (4, 4)], [(1, 2), (2, 5)], [(2, 2), (4, 5)], [(2, 2), (4, 2)], [(0, 5), (0, 7)], [(6, 7), (6, 4)], [(1, 2), (1, 4)]]
31  --->  [(1, 0), (2, 2), [(1, 1), (4, 1)], [(4, 3), (4, 5)], [(2, 2), (4, 3)], [(2, 2), (3, 2)], [(2, 0), (3, 0)], [(6, 7), (6, 3)], [(1, 2), (1, 5)]]
32  --->  [(1, 0), (2, 3), [(4, 3), (3, 5)], [(2, 1), (3, 1)], [(1, 3), (1, 4)], [(1, 2), (2, 2)], [(2, 2), (4, 4)], [(2, 2), (4, 2)], [(2, 0), (4, 0)], [(1, 1), (2, 1)], [(1, 4), (2, 4)], [(6, 7), (6, 2)], [(1, 2), (1, 6)]]
34  --->  [(1, 0), (2, 0), [(4, 3), (1, 5)], [(2, 1), (5, 1)], [(2, 0), (2, 2)], [(1, 3), (1, 6)], [(1, 2), (2, 4)], [(2, 2), (4, 6)], [(2, 2), (4, 4)], [(2, 0), (6, 0)], [(1, 1), (4, 1)], [(1, 4), (3, 5)], [(0, 5), (0, 6)], [(1, 2), (1, 8)]]
35  --->  [(1, 0), (2, 1), [(4, 3), (0, 5)], [(2, 1), (5, 2)], [(2, 0), (2, 3)], [(1, 2), (2, 5)], [(2, 2), (4, 5)], [(2, 1), (3, 1)], [(1, 3), (1, 4)], [(1, 1), (5, 1)], [(1, 4), (3, 6)], [(0, 5), (0, 7)]]
36  --->  [(1, 0), (2, 0), [(2, 0), (2, 4)], [(2, 2), (4, 6)], [(2, 1), (4, 1)], [(2, 0), (3, 0)], [(1, 3), (1, 5)], [(1, 1), (5, 2)], [(1, 4), (3, 7)], [(0, 5), (0, 8)]]
37  --->  [(1, 0), (2, 1), [(2, 5), (3, 5)], [(2, 0), (2, 5)], [(2, 1), (5, 1)], [(2, 0), (4, 0)], [(1, 3), (1, 6)], [(1, 3), (1, 4)], [(1, 1), (5, 3)], [(2, 2), (3, 2)], [(1, 2), (2, 2)]]
25  --->  [(2, 4), (2, 3), [(2, 1), (4, 1)], [(2, 0), (4, 0)], [(0, 2), (0, 4)], [(1, 3), (1, 5)], [(0, 5), (0, 7)], [(1, 2), (3, 4)], [(1, 2), (3, 2)], [(3, 7), (5, 3)], [(2, 2), (6, 5)]]
26  --->  [(2, 4), (2, 2), [(2, 1), (4, 2)], [(0, 2), (0, 5)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(1, 4), (2, 4)], [(2, 2), (3, 2)], [(1, 2), (3, 5)], [(1, 2), (3, 3)]]
43  --->  [(2, 2), (2, 1), [(3, 1), (1, 3)], [(1, 0), (3, 2)], [(4, 2), (3, 3)], [(1, 0), (2, 0)], [(5, 5), (5, 2)], [(2, 2), (6, 5)], [(2, 1), (5, 1)], [(2, 0), (4, 0)], [(1, 4), (3, 7)], [(1, 3), (4, 5)], [(1, 2), (5, 5)], [(2, 0), (6, 0)], [(1, 4), (3, 5)], [(0, 4), (0, 7)], [(1, 3), (2, 3)], [(2, 2), (7, 2)], [(1, 4), (2, 4)]]
41  --->  [(3, 1), (3, 3), [(1, 0), (3, 2)], [(1, 0), (3, 0)], [(5, 5), (5, 4)], [(2, 2), (6, 3)], [(2, 1), (3, 1)], [(1, 4), (3, 5)], [(1, 3), (4, 3)], [(1, 2), (5, 3)], [(2, 0), (4, 0)], [(1, 4), (2, 4)], [(0, 4), (0, 5)], [(2, 2), (5, 2)]]
42  --->  [(3, 1), (2, 3), [(1, 0), (3, 3)], [(1, 0), (3, 1)], [(4, 2), (4, 3)], [(5, 5), (5, 3)], [(2, 2), (6, 4)], [(2, 1), (4, 1)], [(2, 0), (3, 0)], [(1, 4), (3, 6)], [(1, 3), (4, 4)], [(1, 2), (5, 4)], [(2, 0), (5, 0)], [(1, 4), (3, 4)], [(0, 4), (0, 6)], [(2, 2), (6, 2)]]
54  --->  [(2, 3), (2, 2), [(1, 0), (1, 4)], [(1, 0), (3, 0)], [(1, 1), (5, 3)], [(6, 1), (6, 6)], [(1, 1), (5, 1)], [(1, 1), (3, 1)], [(2, 1), (6, 1)], [(2, 2), (5, 2)], [(2, 0), (7, 2)], [(2, 0), (6, 0)], [(1, 2), (5, 4)], [(1, 2), (4, 2)]]
55  --->  [(2, 3), (2, 1), [(1, 0), (1, 5)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(1, 1), (5, 4)], [(6, 1), (6, 7)], [(1, 1), (6, 1)], [(1, 1), (4, 1)], [(2, 1), (7, 1)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(2, 2), (6, 2)], [(2, 0), (7, 3)], [(2, 0), (7, 0)], [(1, 2), (5, 5)], [(1, 2), (5, 2)]]
24  --->  [(3, 1), (2, 1), [(2, 1), (4, 3)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(0, 2), (0, 3)], [(1, 3), (1, 4)], [(0, 5), (0, 6)], [(1, 2), (3, 3)], [(1, 2), (2, 2)], [(3, 7), (5, 4)], [(2, 2), (6, 4)]]
22  --->  [(2, 1), (4, 1), [(2, 0), (3, 0)], [(1, 4), (4, 4)], [(1, 3), (3, 4)], [(0, 1), (0, 5)], [(1, 3), (1, 5)], [(0, 5), (0, 6)], [(1, 2), (2, 2)], [(3, 7), (5, 6)], [(2, 2), (6, 2)]]
23  --->  [(2, 1), (4, 2), [(2, 0), (4, 0)], [(1, 2), (3, 2)], [(3, 7), (5, 5)], [(2, 2), (6, 3)]]
15  --->  [(1, 2), (2, 2), [(2, 2), (3, 2)], [(2, 3), (5, 5)], [(2, 3), (5, 3)]]
38  --->  [(1, 0), (2, 0), [(4, 2), (4, 1)], [(2, 5), (3, 4)], [(2, 0), (2, 6)], [(2, 1), (5, 2)], [(2, 0), (5, 0)], [(1, 3), (1, 7)], [(1, 3), (1, 5)], [(1, 1), (5, 4)], [(2, 2), (4, 2)], [(1, 2), (3, 2)]]
39  --->  [(1, 0), (3, 0), [(4, 2), (4, 0)], [(2, 5), (3, 3)], [(2, 1), (5, 3)], [(2, 0), (6, 0)], [(1, 3), (1, 6)], [(1, 1), (5, 5)], [(2, 2), (5, 2)], [(1, 4), (2, 4)], [(1, 3), (2, 3)], [(1, 2), (4, 2)], [(2, 2), (3, 2)]]
44  --->  [(1, 0), (3, 3), [(1, 0), (3, 0)], [(5, 5), (5, 1)], [(2, 1), (6, 1)], [(2, 0), (5, 0)], [(1, 3), (4, 6)], [(1, 2), (5, 6)], [(1, 2), (2, 2)], [(2, 0), (7, 0)], [(1, 4), (3, 6)], [(0, 4), (0, 8)], [(1, 3), (2, 4)], [(1, 4), (3, 4)]]
33  --->  [(4, 3), (2, 5), [(2, 1), (4, 1)], [(2, 0), (2, 1)], [(1, 3), (1, 5)], [(1, 2), (2, 3)], [(2, 2), (4, 5)], [(2, 2), (4, 3)], [(2, 0), (5, 0)], [(1, 1), (3, 1)], [(1, 4), (3, 4)], [(6, 7), (6, 1)], [(1, 2), (1, 7)]]
50  --->  [(4, 1), (4, 2), [(1, 1), (3, 5)], [(1, 1), (3, 3)], [(2, 1), (5, 2)], [(1, 1), (3, 1)], [(6, 1), (6, 2)], [(2, 1), (4, 1)], [(2, 0), (6, 1)], [(1, 3), (4, 6)], [(1, 2), (5, 5)], [(1, 2), (1, 7)], [(2, 2), (7, 2)], [(2, 0), (5, 0)], [(1, 4), (4, 7)], [(0, 4), (0, 8)], [(0, 4), (0, 6)], [(1, 2), (3, 2)]]
51  --->  [(4, 1), (4, 3), [(1, 0), (1, 1)], [(1, 1), (3, 4)], [(2, 1), (5, 3)], [(1, 1), (4, 1)], [(6, 1), (6, 3)], [(2, 7), (3, 7)], [(2, 1), (5, 1)], [(2, 0), (6, 2)], [(1, 3), (4, 7)], [(1, 2), (5, 6)], [(1, 1), (2, 1)], [(2, 1), (3, 1)], [(1, 2), (1, 8)], [(2, 0), (6, 0)], [(2, 0), (3, 0)], [(1, 4), (4, 8)], [(0, 4), (0, 9)], [(0, 4), (0, 7)], [(1, 2), (4, 2)]]
52  --->  [(4, 1), (4, 4), [(1, 0), (1, 2)], [(1, 1), (3, 5)], [(2, 1), (5, 4)], [(1, 1), (5, 1)], [(6, 1), (6, 4)], [(2, 7), (3, 6)], [(2, 1), (6, 1)], [(2, 0), (6, 3)], [(1, 1), (3, 1)], [(2, 1), (4, 1)], [(2, 2), (3, 2)], [(2, 0), (7, 0)], [(2, 0), (4, 0)], [(0, 4), (0, 8)], [(1, 2), (5, 2)], [(1, 2), (2, 2)]]
53  --->  [(4, 1), (3, 4), [(1, 0), (1, 3)], [(1, 0), (2, 0)], [(1, 1), (5, 2)], [(6, 1), (6, 5)], [(2, 1), (6, 2)], [(2, 0), (6, 4)], [(1, 1), (4, 1)], [(1, 1), (2, 1)], [(2, 1), (5, 1)], [(2, 2), (4, 2)], [(2, 0), (7, 1)], [(2, 0), (5, 0)], [(0, 4), (0, 9)], [(1, 2), (5, 3)], [(1, 2), (3, 2)]]
46  --->  [(1, 5), (2, 5), [(1, 0), (5, 0)], [(1, 1), (3, 1)], [(2, 0), (6, 1)], [(2, 0), (3, 0)], [(1, 3), (3, 3)], [(1, 2), (4, 2)], [(1, 4), (3, 8)], [(1, 3), (2, 6)], [(1, 2), (1, 3)], [(2, 2), (3, 2)], [(1, 4), (4, 5)], [(1, 4), (3, 4)]]
47  --->  [(1, 5), (3, 5), [(1, 0), (5, 1)], [(1, 1), (3, 2)], [(1, 1), (2, 1)], [(2, 1), (3, 1)], [(5, 6), (5, 5)], [(2, 0), (6, 2)], [(2, 0), (4, 0)], [(1, 3), (4, 3)], [(1, 2), (5, 2)], [(1, 3), (2, 7)], [(1, 2), (1, 4)], [(2, 2), (4, 2)], [(1, 4), (4, 6)], [(1, 4), (4, 4)], [(0, 4), (0, 5)]]
48  --->  [(1, 5), (3, 4), [(1, 1), (3, 3)], [(1, 1), (3, 1)], [(2, 1), (4, 1)], [(5, 6), (5, 4)], [(2, 0), (6, 3)], [(2, 0), (5, 0)], [(1, 3), (4, 4)], [(1, 2), (5, 3)], [(1, 3), (2, 8)], [(1, 2), (1, 5)], [(2, 2), (5, 2)], [(2, 0), (3, 0)], [(1, 4), (4, 7)], [(1, 4), (4, 5)], [(0, 4), (0, 6)]]
49  --->  [(1, 5), (3, 3), [(1, 1), (3, 4)], [(1, 1), (3, 2)], [(1, 6), (0, 6)], [(2, 1), (5, 1)], [(1, 1), (2, 1)], [(2, 1), (3, 1)], [(2, 0), (6, 4)], [(2, 0), (6, 0)], [(1, 3), (4, 5)], [(1, 2), (5, 4)], [(1, 2), (1, 6)], [(2, 2), (6, 2)], [(2, 0), (4, 0)], [(1, 4), (4, 8)], [(1, 4), (4, 6)], [(0, 4), (0, 7)], [(0, 4), (0, 5)], [(1, 2), (2, 2)]]
45  --->  [(1, 0), (4, 0), [(1, 1), (2, 1)], [(5, 5), (5, 0)], [(2, 1), (6, 2)], [(2, 0), (6, 0)], [(1, 3), (4, 7)], [(1, 3), (2, 3)], [(1, 2), (3, 2)], [(1, 4), (3, 7)], [(1, 3), (2, 5)], [(1, 4), (4, 4)], [(1, 4), (2, 4)]]
56  --->  [(1, 0), (1, 6), [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(1, 1), (5, 5)], [(6, 1), (5, 7)], [(1, 1), (6, 2)], [(1, 1), (5, 1)], [(6, 4), (6, 3)], [(2, 1), (4, 1)], [(2, 0), (3, 1)], [(1, 1), (2, 1)], [(2, 2), (7, 2)], [(2, 2), (3, 2)], [(2, 0), (7, 4)], [(2, 0), (7, 1)], [(1, 2), (5, 6)], [(1, 2), (5, 3)]]
57  --->  [(1, 0), (4, 0), [(1, 0), (2, 0)], [(6, 1), (4, 7)], [(1, 1), (6, 3)], [(1, 1), (6, 1)], [(6, 4), (6, 2)], [(2, 1), (5, 1)], [(2, 0), (3, 2)], [(1, 1), (3, 1)], [(2, 2), (7, 3)], [(2, 2), (4, 2)], [(2, 0), (7, 5)], [(2, 0), (7, 2)], [(1, 2), (5, 7)], [(1, 2), (5, 4)], [(2, 3), (3, 3)]]
58  --->  [(1, 0), (5, 0), [(1, 0), (3, 0)], [(6, 1), (3, 7)], [(1, 1), (6, 2)], [(2, 1), (6, 1)], [(2, 0), (3, 3)], [(1, 1), (4, 1)], [(2, 2), (7, 4)], [(2, 2), (5, 2)], [(2, 0), (7, 6)], [(2, 0), (7, 3)], [(1, 2), (5, 8)], [(1, 2), (5, 5)], [(2, 3), (4, 3)]]
67  --->  [(2, 6), (2, 5), [(4, 5), (5, 1)], [(5, 2), (3, 6)], [(5, 4), (5, 3)], [(5, 5), (5, 6)], [(4, 6), (5, 5)], [(1, 0), (6, 1)], [(1, 0), (5, 0)], [(6, 5), (4, 7)], [(1, 0), (3, 0)], [(1, 1), (6, 5)], [(2, 1), (7, 3)], [(2, 1), (7, 1)], [(1, 1), (2, 1)], [(1, 9), (5, 9)]]
63  --->  [(4, 5), (5, 5), [(5, 2), (5, 4)], [(1, 0), (5, 3)], [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(2, 0), (3, 8)], [(1, 1), (6, 4)], [(1, 1), (6, 1)], [(7, 3), (7, 4)], [(2, 2), (7, 5)], [(2, 1), (5, 1)], [(2, 1), (3, 1)], [(2, 3), (6, 6)]]
64  --->  [(4, 5), (5, 4), [(5, 2), (5, 5)], [(1, 0), (5, 1)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(6, 5), (6, 6)], [(1, 1), (6, 5)], [(1, 1), (6, 2)], [(7, 3), (7, 5)], [(2, 2), (7, 6)], [(2, 1), (6, 1)], [(2, 1), (4, 1)], [(1, 9), (2, 9)], [(2, 3), (6, 7)]]
65  --->  [(4, 5), (5, 3), [(5, 2), (5, 6)], [(1, 0), (5, 2)], [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(6, 5), (6, 7)], [(1, 1), (6, 6)], [(1, 1), (6, 3)], [(7, 3), (7, 6)], [(2, 2), (7, 7)], [(2, 1), (7, 1)], [(2, 1), (5, 1)], [(1, 9), (3, 9)], [(2, 3), (6, 8)]]
66  --->  [(4, 5), (5, 2), [(5, 2), (4, 6)], [(1, 0), (5, 3)], [(4, 6), (5, 6)], [(1, 0), (6, 0)], [(1, 0), (4, 0)], [(6, 5), (5, 7)], [(1, 0), (2, 0)], [(1, 1), (6, 7)], [(1, 1), (6, 4)], [(7, 3), (6, 6)], [(2, 1), (7, 2)], [(2, 1), (6, 1)], [(1, 9), (4, 9)]]
68  --->  [(4, 5), (5, 0), [(5, 2), (2, 6)], [(5, 5), (5, 7)], [(4, 6), (5, 4)], [(1, 0), (6, 0)], [(6, 5), (3, 7)], [(6, 3), (6, 4)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(1, 1), (6, 6)], [(2, 1), (7, 4)], [(2, 1), (7, 2)], [(1, 1), (3, 1)], [(1, 9), (5, 8)]]
62  --->  [(5, 2), (5, 3), [(1, 0), (5, 2)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(5, 7), (5, 6)], [(2, 0), (3, 7)], [(1, 1), (6, 3)], [(1, 1), (5, 1)], [(2, 2), (7, 4)], [(2, 1), (4, 1)], [(2, 3), (6, 5)]]
69  --->  [(5, 2), (1, 6), [(5, 5), (4, 7)], [(4, 6), (5, 3)], [(1, 0), (6, 1)], [(6, 3), (6, 5)], [(1, 0), (5, 0)], [(1, 0), (2, 1)], [(1, 1), (6, 7)], [(2, 1), (7, 3)], [(1, 1), (4, 1)]]
70  --->  [(5, 2), (0, 6), [(5, 5), (3, 7)], [(6, 2), (6, 1)], [(6, 3), (6, 6)], [(1, 0), (6, 0)], [(1, 0), (2, 2)], [(2, 1), (7, 4)], [(1, 1), (5, 1)], [(1, 1), (2, 1)]]
78  --->  [(3, 5), (4, 5), [(1, 0), (6, 3)], [(1, 0), (6, 1)], [(1, 1), (7, 4)], [(1, 0), (5, 0)], [(1, 0), (2, 0)], [(7, 6), (7, 5)], [(7, 8), (7, 7)]]
79  --->  [(3, 5), (5, 5), [(1, 0), (6, 4)], [(1, 0), (6, 2)], [(1, 1), (7, 5)], [(1, 0), (6, 0)], [(1, 0), (3, 0)], [(7, 6), (7, 4)], [(6, 8), (7, 8)], [(7, 8), (7, 6)]]
80  --->  [(3, 5), (5, 4), [(1, 0), (6, 5)], [(1, 0), (6, 3)], [(1, 0), (7, 0)], [(1, 0), (4, 0)], [(6, 8), (7, 7)], [(7, 8), (7, 5)]]
81  --->  [(3, 5), (5, 3), [(1, 6), (2, 6)], [(1, 0), (6, 6)], [(1, 0), (6, 4)], [(1, 0), (7, 1)], [(1, 0), (5, 0)], [(6, 8), (7, 6)], [(7, 8), (7, 4)]]
82  --->  [(3, 5), (5, 2), [(1, 6), (3, 6)], [(1, 0), (6, 5)], [(1, 0), (7, 2)], [(1, 0), (6, 0)], [(6, 8), (7, 5)], [(7, 8), (7, 3)]]
83  --->  [(3, 5), (5, 1), [(1, 6), (4, 6)], [(1, 0), (6, 6)], [(1, 0), (7, 3)], [(1, 0), (7, 0)], [(6, 8), (7, 4)]]
84  --->  [(3, 5), (5, 0), [(1, 6), (5, 6)], [(1, 7), (2, 7)], [(7, 1), (7, 2)], [(1, 0), (7, 1)], [(6, 8), (7, 3)]]
85  --->  [(1, 6), (5, 5), [(1, 7), (3, 7)], [(4, 7), (5, 7)], [(7, 1), (7, 3)], [(1, 0), (7, 2)]]
86  --->  [(1, 6), (5, 4), [(1, 7), (4, 7)], [(4, 7), (6, 7)], [(7, 1), (7, 4)], [(1, 0), (7, 3)]]
87  --->  [(1, 6), (5, 3), [(1, 7), (5, 7)], [(4, 7), (6, 6)], [(7, 1), (7, 5)]]
88  --->  [(1, 6), (5, 2), [(1, 7), (5, 6)], [(4, 7), (6, 5)], [(7, 1), (7, 6)]]
89  --->  [(1, 6), (5, 1), [(1, 7), (5, 5)], [(4, 7), (6, 4)], [(7, 1), (7, 7)]]
90  --->  [(1, 6), (5, 0), [(1, 7), (5, 4)], [(4, 7), (6, 3)], [(7, 1), (7, 8)], [(7, 4), (7, 3)], [(7, 5), (7, 6)]]
59  --->  [(1, 0), (4, 0), [(6, 1), (2, 7)], [(1, 1), (6, 3)], [(2, 1), (7, 1)], [(2, 0), (3, 4)], [(1, 1), (5, 1)], [(1, 1), (2, 1)], [(2, 2), (7, 5)], [(2, 2), (6, 2)], [(2, 0), (7, 4)], [(1, 2), (5, 6)], [(2, 3), (5, 3)]]
60  --->  [(1, 0), (5, 0), [(1, 0), (2, 0)], [(6, 1), (1, 7)], [(2, 0), (3, 5)], [(1, 1), (6, 1)], [(1, 1), (3, 1)], [(2, 2), (7, 6)], [(2, 2), (7, 2)], [(2, 0), (7, 5)], [(1, 2), (5, 7)], [(2, 3), (6, 3)]]
61  --->  [(1, 0), (5, 1), [(1, 0), (3, 0)], [(6, 1), (0, 7)], [(2, 0), (3, 6)], [(1, 1), (6, 2)], [(1, 1), (4, 1)], [(2, 2), (7, 7)], [(2, 2), (7, 3)], [(2, 1), (3, 1)], [(2, 0), (7, 6)], [(1, 2), (5, 8)], [(2, 3), (6, 4)]]
71  --->  [(5, 5), (2, 7), [(6, 3), (6, 7)], [(1, 0), (7, 0)], [(1, 0), (2, 3)], [(1, 0), (2, 0)], [(1, 1), (6, 1)], [(1, 1), (3, 1)]]
72  --->  [(5, 5), (1, 7), [(6, 3), (5, 7)], [(1, 0), (2, 4)], [(1, 0), (3, 0)], [(1, 1), (7, 1)], [(1, 1), (4, 1)], [(7, 7), (7, 8)]]
73  --->  [(5, 5), (0, 7), [(6, 3), (4, 7)], [(6, 6), (6, 5)], [(1, 0), (2, 5)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(1, 1), (7, 2)], [(1, 1), (5, 1)], [(7, 7), (6, 8)]]
7  --->  [(2, 3), (2, 7), [(2, 3), (2, 5)]]
91  --->  [(1, 7), (5, 3), [(4, 7), (6, 2)], [(7, 1), (6, 8)], [(7, 5), (7, 7)]]
74  --->  [(6, 3), (3, 7), [(6, 6), (6, 4)], [(1, 0), (2, 6)], [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(2, 8), (1, 8)], [(1, 1), (7, 3)], [(1, 1), (6, 1)], [(7, 7), (5, 8)]]
75  --->  [(6, 6), (6, 3), [(1, 0), (2, 7)], [(1, 0), (6, 0)], [(1, 0), (4, 0)], [(2, 8), (0, 8)], [(1, 1), (7, 4)], [(1, 1), (7, 1)], [(1, 0), (2, 0)], [(7, 7), (4, 8)]]
76  --->  [(6, 6), (6, 2), [(1, 0), (2, 8)], [(1, 0), (6, 1)], [(1, 0), (5, 0)], [(1, 1), (7, 5)], [(1, 1), (7, 2)], [(1, 0), (3, 0)]]
77  --->  [(6, 6), (6, 1), [(1, 0), (6, 2)], [(1, 0), (6, 0)], [(1, 1), (7, 3)], [(1, 0), (4, 0)]]
12  --->  [(2, 3), (5, 5), [(2, 3), (4, 3)]]
92  --->  [(4, 7), (6, 1), [(7, 1), (5, 8)], [(7, 5), (7, 8)]]
93  --->  [(7, 1), (4, 8), [(7, 5), (6, 8)]]
94  --->  [(7, 1), (3, 8), [(7, 5), (5, 8)]]
95  --->  [(7, 1), (2, 8), [(7, 5), (4, 8)]]
96  --->  [(7, 1), (1, 8)]
97  --->  [(7, 1), (0, 8), [(2, 8), (3, 8)]]
98  --->  [(2, 8), (4, 8)]
99  --->  [(2, 8), (5, 8)]
100  --->  [(2, 8), (6, 8)]
101  --->  [(2, 8), (6, 7)]
102  --->  [(2, 8), (6, 6)]
108  --->  [(1, 8), (2, 8), [(5, 8), (7, 7)]]
109  --->  [(1, 8), (3, 8), [(5, 8), (7, 6)]]
110  --->  [(1, 8), (4, 8), [(5, 8), (7, 5)]]
111  --->  [(1, 8), (5, 8), [(5, 8), (7, 4)]]
112  --->  [(1, 8), (6, 8), [(5, 8), (7, 3)]]
113  --->  [(1, 8), (6, 7)]
114  --->  [(1, 8), (6, 6)]
106  --->  [(5, 8), (6, 8)]
107  --->  [(5, 8), (7, 8)]

Rescheduler marker:
(0, 0)  --->  [[1, 3, 5, 7, 9, 10, 24, 26, 31, 33, 16, 14, 35, 37, 40, 48, 50, 52, 54, 57, 59, 61, 63, 65, 68, 70, 72, 75], [48], [12, 23, 30, 44, 46], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 24, 29, 31, 43, 45, 21, 47, 25, 26, 27, 28, 32, 33, 34, 35, 17, 18, 15, 16, 36, 37, 38, 39, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77], [4, 6, 8, 10, 21, 28, 42, 20, 27, 29, 34, 36, 19, 17, 38, 40, 43, 51, 53, 55, 57, 60, 62, 64, 66, 68, 71, 73, 75, 78]]
(0, 1)  --->  [[1, 5, 24, 7, 16, 21, 26, 42, 44, 29, 46, 48, 50, 53, 56, 64, 67], [22], [11, 20], [10, 2, 12, 6, 7, 19, 21, 25, 26, 8, 9, 17, 18, 22, 23, 27, 28, 43, 44, 45, 46, 30, 31, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 65, 66, 68, 69], [5, 9, 8, 18, 27, 41, 10, 19, 24, 20, 29, 45, 47, 32, 49, 51, 53, 56, 59, 67, 70]]
(0, 2)  --->  [[1, 2, 37, 5, 10, 12, 14, 24, 29, 19, 21, 34, 41, 26, 43, 46, 49], [35], [9, 18, 33], [8, 2, 10, 3, 4, 17, 19, 32, 34, 38, 39, 6, 7, 11, 12, 13, 14, 15, 16, 25, 26, 30, 31, 20, 21, 22, 23, 35, 36, 42, 43, 27, 28, 44, 45, 47, 48, 50, 51], [6, 7, 5, 16, 31, 40, 8, 13, 15, 17, 25, 21, 27, 32, 22, 24, 37, 44, 29, 46, 49, 52]]
(0, 3)  --->  [[1, 3, 27, 10, 13, 15, 17, 24, 29, 32, 34, 36, 42, 38, 40, 44, 46], [25], [9, 23], [6, 8, 10, 2, 3, 4, 5, 22, 24, 28, 29, 11, 12, 14, 15, 16, 17, 18, 19, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 43, 44, 39, 40, 41, 42, 45, 46, 47, 48], [5, 7, 4, 6, 21, 15, 30, 13, 16, 18, 20, 26, 22, 27, 32, 35, 37, 39, 45, 41, 43, 47, 49]]
(0, 4)  --->  [[1, 4, 11, 8, 13, 15, 17, 23, 19, 21, 26, 29, 36, 38, 31, 40, 42], [9], [7], [2, 3, 6, 5, 8, 12, 13, 9, 10, 14, 15, 16, 17, 18, 19, 24, 25, 20, 21, 22, 23, 27, 28, 30, 31, 37, 38, 39, 40, 32, 33, 41, 42, 43, 44], [4, 5, 14, 11, 16, 18, 20, 27, 23, 26, 28, 22, 24, 29, 32, 39, 41, 42, 34, 43, 45, 48, 50]]
(0, 5)  --->  [[43], [41], [30, 39], [29, 25, 31, 38, 40, 44, 45], [28, 24, 37, 46, 29, 23, 25, 30, 43, 35, 49, 51]]
(0, 6)  --->  [[78], [76], [32, 53, 74], [31, 25, 33, 52, 54, 73, 75, 79, 80], [30, 24, 51, 72, 81, 26, 31, 44, 36, 50, 52]]
(0, 7)  --->  [[81], [79], [34, 65, 77], [28, 33, 35, 64, 66, 76, 78, 82, 83], [27, 32, 63, 75, 84, 45, 37, 51, 53]]
(0, 8)  --->  [[105], [103], [48, 79, 101], [47, 39, 49, 78, 80, 100, 102, 106, 107], [46, 38, 77, 99, 108, 52, 54]]
(0, 9)  --->  [[61], [59], [57], [54, 56, 58, 62, 63], [53, 55, 64]]
(1, 0)  --->  [[1, 3, 17, 5, 14, 19, 21, 23, 30, 28, 33, 39, 43, 37, 52, 45, 48], [15], [13], [2, 3, 4, 5, 11, 12, 14, 18, 19, 6, 7, 15, 16, 20, 21, 22, 23, 24, 25, 31, 32, 29, 30, 34, 35, 40, 41, 44, 45, 38, 39, 53, 54, 46, 47, 49, 50], [4, 6, 7, 10, 11, 20, 19, 8, 17, 28, 30, 35, 37, 22, 24, 18, 39, 41, 26, 44, 33, 52, 54, 56, 31, 36, 58, 61, 42, 46, 63, 65, 40, 67, 55, 69, 72, 74, 48, 51, 76, 79]]
(1, 1)  --->  [[14, 1, 3, 11, 16, 18, 21, 23, 29, 32, 44, 38, 46, 48, 52, 58, 60], [12], [10], [8, 9, 11, 15, 16, 2, 3, 4, 5, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 30, 31, 33, 34, 45, 46, 39, 40, 47, 48, 49, 50, 53, 54, 59, 60, 61, 62], [7, 8, 9, 17, 4, 6, 18, 14, 19, 11, 20, 21, 24, 30, 26, 32, 53, 46, 48, 35, 47, 33, 50, 41, 49, 52, 54, 51, 55, 57, 60, 61, 63, 68, 71]]
(1, 2)  --->  [[14, 1, 10, 18, 21, 12, 23, 26, 28, 16, 34, 36, 43, 49, 53], [11], [9], [6, 8, 10, 15, 16, 2, 3, 11, 12, 19, 20, 22, 23, 13, 14, 24, 25, 27, 28, 29, 30, 17, 18, 35, 36, 37, 38, 44, 45, 50, 51, 54, 55], [6, 5, 7, 17, 9, 14, 4, 13, 16, 18, 21, 24, 54, 28, 33, 15, 26, 29, 31, 23, 25, 19, 37, 38, 45, 30, 47, 39, 46, 52, 56, 50, 53]]
(1, 3)  --->  [[51, 1, 3, 5, 8, 10, 54], [49], [19, 31, 47], [15, 18, 20, 30, 32, 46, 48, 52, 53, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 55, 56], [20, 14, 17, 10, 15, 29, 45, 54, 19, 21, 22, 25, 33, 55, 36, 38, 4, 6, 40, 46, 8, 11, 44, 31, 48, 13, 57]]
(1, 4)  --->  [[22], [20], [18], [12, 17, 19, 23, 24], [12, 17, 11, 16, 25, 19, 21, 23, 26, 27, 34, 56, 37, 39, 33, 40, 42, 32, 49, 44, 46]]
(1, 5)  --->  [[34], [31], [29], [25, 28, 30, 35, 36], [36, 47, 24, 27, 37, 35, 57, 38, 40, 33, 50]]
(1, 6)  --->  [[64], [62], [60], [37, 59, 61, 65, 66], [36, 58, 50, 67, 71, 82, 39, 41, 34, 51]]
(1, 7)  --->  [[48], [46], [44], [41, 43, 45, 49, 50], [40, 42, 62, 51, 74, 85, 35, 52]]
(1, 8)  --->  [[94], [92], [55, 90], [37, 54, 56, 89, 91, 95, 96], [36, 53, 76, 88, 98, 97, 109]]
(1, 9)  --->  [[], [], [], [], [65]]
(2, 0)  --->  [[13], [11], [9], [6, 8, 10, 14, 15], [5, 7, 16, 9, 18, 29, 31, 36, 38, 23, 25, 19, 40, 42, 27, 45, 34, 55, 57, 32, 37, 59, 62, 43, 47, 64, 66, 41, 68, 56, 70, 73, 75, 49, 52, 77, 80]]
(2, 1)  --->  [[], [63], [41, 47, 49, 59, 61], [38, 40, 42, 46, 48, 44, 50, 58, 60, 27, 62], [17, 15, 20, 12, 30, 21, 32, 37, 39, 45, 43, 57, 26, 22, 25, 31, 27, 33, 35, 47, 49, 36, 48, 34, 51, 42, 50, 53, 55, 52, 56, 71, 58, 61, 62, 64, 69, 72]]
(2, 2)  --->  [[39], [37], [33, 35], [14, 32, 34, 29, 36, 40, 41], [18, 13, 31, 22, 33, 28, 44, 42, 5, 14, 56, 17, 19, 36, 29, 34, 16, 27, 30, 32, 24, 26, 20, 38, 39, 46, 72, 40, 47, 53, 57, 51, 54]]
(2, 3)  --->  [[40], [38], [36], [24, 35, 37, 41, 42], [19, 23, 34, 28, 27, 43, 44, 55, 20, 22, 37, 30, 35, 5, 7, 41, 47, 9, 12, 45, 73, 14, 58]]
(2, 4)  --->  [[24], [22], [20], [14, 19, 21, 25, 26], [13, 18, 27, 26, 20, 22, 28, 38, 31, 36, 6, 8, 34, 41, 43, 46, 74, 45, 47]]
(2, 5)  --->  [[75], [73], [39, 71], [33, 38, 40, 70, 72, 76, 77], [35, 48, 38, 29, 39, 32, 37, 69, 78, 7, 9, 47, 75]]
(2, 6)  --->  [[46], [44], [42], [31, 41, 43, 47, 48], [30, 40, 49, 68, 70, 83, 8, 10, 48, 76]]
(2, 7)  --->  [[17], [15], [13], [10, 12, 14, 18, 19], [61, 52, 73, 9, 11, 86, 20, 49, 77]]
(2, 8)  --->  [[84], [82], [80], [51, 79, 81, 85, 86], [50, 78, 75, 87, 97, 98, 110]]
(2, 9)  --->  [[], [], [], [], [66]]
(3, 0)  --->  [[37], [35], [21, 33], [11, 20, 22, 32, 34, 38, 39], [10, 19, 31, 40, 24, 26, 20, 41, 43, 28, 46, 56, 58, 33, 38, 60, 63, 44, 48, 65, 67, 42, 69, 57, 74, 76, 50, 53, 78, 81]]
(3, 1)  --->  [[27], [25], [23], [17, 22, 24, 28, 29], [16, 21, 30, 41, 25, 23, 26, 32, 42, 44, 28, 34, 48, 50, 37, 49, 35, 52, 43, 51, 54, 56, 53, 57, 58, 59, 62, 63, 65, 70, 73]]
(3, 2)  --->  [[21], [19], [17], [7, 16, 18, 22, 23], [42, 6, 15, 24, 18, 20, 43, 45, 49, 51, 17, 28, 31, 33, 25, 27, 21, 39, 40, 47, 59, 41, 48, 54, 58, 52, 55]]
(3, 3)  --->  [[], [71], [48, 50, 53, 67, 69], [45, 47, 49, 46, 51, 52, 54, 66, 68, 42, 70], [43, 21, 23, 44, 46, 45, 51, 65, 41, 50, 52, 26, 28, 42, 48, 10, 13, 60, 15, 59]]
(3, 4)  --->  [[61], [59], [26, 36, 57], [23, 25, 27, 35, 37, 56, 58, 62, 63], [21, 23, 22, 24, 34, 55, 50, 64, 40, 51, 53, 27, 29, 35, 42, 44, 61, 46, 48]]
(3, 5)  --->  [[60], [58], [56], [53, 55, 57, 61, 62], [34, 49, 39, 52, 54, 63, 79, 28, 30, 36, 43, 45, 62]]
(3, 6)  --->  [[63], [58], [33, 56], [30, 32, 34, 55, 57, 64, 65], [69, 84, 29, 31, 54, 66, 37, 44, 46, 63]]
(3, 7)  --->  [[82], [80], [47, 72, 78], [39, 46, 48, 71, 73, 77, 79, 83, 84], [60, 53, 72, 87, 21, 38, 45, 70, 76, 85, 47, 64]]
(3, 8)  --->  [[71], [69], [67], [49, 66, 68, 72, 73], [48, 65, 74, 96, 99, 111]]
(3, 9)  --->  [[], [], [], [], [67]]
(4, 0)  --->  [[47], [45], [29, 43], [26, 28, 30, 42, 44, 48, 49], [25, 27, 21, 41, 50, 29, 47, 57, 59, 34, 39, 61, 64, 45, 49, 66, 68, 43, 70, 75, 77, 51, 54, 79, 82]]
(4, 1)  --->  [[39], [37], [35], [34, 23, 36, 40, 41], [24, 27, 33, 22, 40, 42, 51, 29, 35, 38, 50, 36, 53, 44, 52, 55, 57, 54, 58, 60, 63, 64, 66, 71, 74]]
(4, 2)  --->  [[27], [25], [23], [20, 22, 24, 28, 29], [25, 28, 19, 21, 39, 30, 43, 52, 18, 29, 32, 34, 22, 40, 41, 48, 42, 49, 55, 59, 53, 56]]
(4, 3)  --->  [[35], [33], [31], [27, 30, 32, 36, 37], [26, 29, 38, 31, 44, 53, 19, 30, 33, 35, 43, 49, 11, 14, 16, 60]]
(4, 4)  --->  [[30], [28], [26], [23, 25, 27, 31, 32], [22, 24, 33, 32, 54, 20, 31, 34, 36, 44, 50, 47, 49]]
(4, 5)  --->  [[38], [36], [34], [22, 33, 35, 39, 40], [33, 64, 80, 21, 32, 41, 35, 37, 45, 51, 48, 50]]
(4, 6)  --->  [[44], [42], [40], [37, 39, 41, 45, 46], [68, 85, 36, 38, 47, 67, 46, 52, 49, 51]]
(4, 7)  --->  [[59], [57], [55], [48, 54, 56, 60, 61], [59, 71, 88, 22, 47, 53, 69, 62, 75, 86, 50, 52]]
(4, 8)  --->  [[103], [101], [55, 79, 99], [52, 54, 56, 78, 80, 98, 100, 104, 105], [95, 100, 112, 51, 53, 77, 97, 106]]
(4, 9)  --->  [[], [], [], [], [68]]
(5, 0)  --->  [[], [98], [62, 72, 88, 94, 96], [59, 61, 63, 71, 73, 87, 89, 93, 95, 48, 97], [30, 48, 58, 60, 70, 86, 92, 47, 35, 40, 62, 65, 46, 50, 67, 69, 44, 71, 76, 78, 52, 55, 80, 83]]
(5, 1)  --->  [[59], [55], [51, 53], [32, 50, 52, 48, 54, 60, 61], [30, 36, 31, 49, 47, 69, 62, 85, 91, 46, 39, 51, 37, 54, 63, 66, 45, 53, 56, 58, 55, 59, 61, 64, 65, 67, 72, 75]]
(5, 2)  --->  [[43], [41], [39], [32, 38, 40, 44, 45], [31, 37, 46, 68, 63, 84, 90, 45, 40, 52, 38, 55, 64, 67, 23, 41, 42, 49, 43, 50, 56, 60, 54, 57]]
(5, 3)  --->  [[], [99], [70, 72, 74, 95, 97], [66, 69, 71, 70, 73, 72, 75, 94, 96, 28, 98], [67, 64, 83, 89, 44, 41, 53, 39, 56, 65, 68, 69, 71, 93, 27, 43, 50, 12, 15, 55, 58, 17, 61]]
(5, 4)  --->  [[64], [60], [56, 58], [43, 55, 57, 51, 59, 65, 66], [66, 65, 82, 88, 43, 42, 54, 40, 57, 50, 68, 67, 70, 92, 26, 44, 51, 13, 16, 56, 59]]
(5, 5)  --->  [[64], [62], [60], [42, 59, 61, 65, 66], [65, 66, 81, 87, 42, 41, 58, 49, 67, 68, 69, 91, 25, 45, 52, 14, 17, 57, 60]]
(5, 6)  --->  [[70], [68], [55, 66], [47, 54, 56, 65, 67, 71, 72], [67, 86, 48, 69, 68, 90, 24, 46, 53, 64, 73, 15, 18, 58, 61]]
(5, 7)  --->  [[25], [23], [21], [17, 20, 22, 26, 27], [58, 70, 89, 23, 68, 63, 74, 16, 19, 87, 28, 59, 62]]
(5, 8)  --->  [[76], [74], [65, 72], [61, 64, 66, 71, 73, 77, 78], [94, 101, 113, 60, 63, 76, 70, 96, 79, 107]]
(5, 9)  --->  [[], [], [], [], [69]]
(6, 0)  --->  [[47], [45], [43], [37, 42, 44, 48, 49], [36, 41, 50, 47, 51, 68, 70, 45, 72, 77, 79, 53, 56, 81, 84]]
(6, 1)  --->  [[], [100], [73, 75, 81, 96, 98], [70, 72, 74, 73, 76, 80, 82, 95, 97, 36, 99], [51, 46, 54, 48, 52, 57, 59, 69, 71, 72, 79, 94, 35, 56, 60, 62, 65, 78, 80, 66, 68, 73, 76]]
(6, 2)  --->  [[65], [63], [57, 61], [48, 56, 58, 60, 62, 66, 67], [52, 24, 42, 47, 55, 49, 53, 58, 60, 59, 71, 68, 78, 93, 34, 63, 66, 79, 81, 44, 51, 57, 61]]
(6, 3)  --->  [[67], [65], [63], [60, 62, 64, 68, 69], [53, 25, 43, 50, 54, 59, 61, 58, 70, 69, 77, 92, 33, 64, 67, 80, 82, 18, 62]]
(6, 4)  --->  [[61], [59], [57], [52, 56, 58, 62, 63], [54, 26, 44, 51, 55, 57, 64, 70, 76, 91, 32, 65, 68, 81, 83, 19, 63]]
(6, 5)  --->  [[53], [49], [47], [28, 46, 48, 54, 55], [55, 27, 45, 56, 65, 71, 75, 90, 31, 66, 69, 82, 84, 20, 64]]
(6, 6)  --->  [[], [122], [87, 89, 106, 118, 120], [84, 86, 88, 82, 90, 105, 107, 117, 119, 69, 121], [56, 66, 72, 74, 89, 30, 67, 70, 83, 85, 81, 104, 116, 68, 21, 65]]
(6, 7)  --->  [[77], [75], [73], [69, 72, 74, 78, 79], [57, 67, 73, 88, 29, 68, 71, 80, 103, 115, 22, 66]]
(6, 8)  --->  [[75], [71], [69], [24, 68, 70, 76, 77], [93, 102, 114, 75, 95, 80, 23, 67, 108, 78]]
(6, 9)  --->  [[], [], [], [], []]
(7, 0)  --->  [[81], [79], [75, 77], [47, 74, 76, 72, 78, 82, 83], [46, 73, 71, 84, 54, 57, 82, 85]]
(7, 1)  --->  [[67], [65], [63], [58, 62, 64, 68, 69], [57, 61, 70, 85, 67, 69, 55, 58, 74, 77, 83, 86]]
(7, 2)  --->  [[60], [56], [54], [46, 53, 55, 61, 62], [86, 45, 52, 63, 58, 62, 68, 70, 56, 59, 75, 78, 84, 87]]
(7, 3)  --->  [[], [120], [90, 94, 96, 116, 118], [86, 89, 91, 93, 95, 87, 97, 115, 117, 85, 119], [87, 64, 59, 63, 69, 71, 57, 60, 76, 79, 85, 88, 92, 86, 114, 84]]
(7, 4)  --->  [[87], [85], [74, 83], [71, 73, 75, 82, 84, 88, 89], [88, 65, 60, 64, 70, 72, 58, 61, 77, 80, 81, 91, 90, 85, 113, 83]]
(7, 5)  --->  [[87], [85], [83], [79, 82, 84, 88, 89], [89, 66, 61, 65, 59, 62, 78, 81, 80, 90, 91, 84, 112, 82]]
(7, 6)  --->  [[69], [67], [65], [61, 64, 66, 70, 71], [90, 67, 62, 66, 60, 63, 79, 72, 92, 83, 111, 81]]
(7, 7)  --->  [[75], [71], [69], [64, 68, 70, 76, 77], [91, 63, 67, 78, 73, 93, 82, 110, 80]]
(7, 8)  --->  [[], [], [], [], [92, 74, 94, 81, 109, 79]]
(7, 9)  --->  [[], [], [], [], []]
(8, 0)  --->  [[], [], [], [], []]
(8, 1)  --->  [[], [], [], [], []]
(8, 2)  --->  [[], [], [], [], []]
(8, 3)  --->  [[], [], [], [], []]
(8, 4)  --->  [[], [], [], [], []]
(8, 5)  --->  [[], [], [], [], []]
(8, 6)  --->  [[], [], [], [], []]
(8, 7)  --->  [[], [], [], [], []]
(8, 8)  --->  [[], [], [], [], []]
(8, 9)  --->  [[], [], [], [], []]
(9, 0)  --->  [[], [], [], [], []]
(9, 1)  --->  [[], [], [], [], []]
(9, 2)  --->  [[], [], [], [], []]
(9, 3)  --->  [[], [], [], [], []]
(9, 4)  --->  [[], [], [], [], []]
(9, 5)  --->  [[], [], [], [], []]
(9, 6)  --->  [[], [], [], [], []]
(9, 7)  --->  [[], [], [], [], []]
(9, 8)  --->  [[], [], [], [], []]
(9, 9)  --->  [[], [], [], [], []]

Scheduling duration in clocks:  121

CCM Size in bits:  6771

CCM Size in bytes:  847

------------------Synthesys of equation 9 has started!---------------

[('1', 'F00*X11'), ('2', 'F01*X12'), ('3', 'F02*X13'), ('4', 'F10*X21'), ('5', 'F11*X22'), ('6', 'F12*X23'), ('7', 'F20*X31'), ('8', 'F21*X32'), ('9', 'F22*X33'), ('10', '1+2'), ('11', '3+4'), ('12', '5+6'), ('13', '7+8'), ('14', '10+11'), ('15', '12+13'), ('16', '14+15'), ('17', '16+9')]

Graph nodes:
Name   Value   Op_Type   Conn
y22      None      Write      []
1      None      *      ['10']
2      None      *      ['10']
3      None      *      ['11']
4      None      *      ['11']
5      None      *      ['12']
6      None      *      ['12']
7      None      *      ['13']
8      None      *      ['13']
9      None      *      ['17']
10      None      +      ['14']
11      None      +      ['14']
12      None      +      ['15']
13      None      +      ['15']
14      None      +      ['16']
15      None      +      ['16']
16      None      +      ['17']
17      None      +      ['y22']
F00      None      Read      ['1']
X11      None      Read      ['1']
F01      None      Read      ['2']
X12      None      Read      ['2']
F02      None      Read      ['3']
X13      None      Read      ['3']
F10      None      Read      ['4']
X21      None      Read      ['4']
F11      None      Read      ['5']
X22      None      Read      ['5']
F12      None      Read      ['6']
X23      None      Read      ['6']
F20      None      Read      ['7']
X31      None      Read      ['7']
F21      None      Read      ['8']
X32      None      Read      ['8']
F22      None      Read      ['9']
X33      None      Read      ['9']
Labels for mode ASAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Labels for mode ALAP:  [7, 2, 2, 2, 2, 2, 2, 2, 2, 5, 3, 3, 3, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4]

1. DUMPED cp:  ['1', '10', '14', '16', '17', 'y22']
   Inputs & Coords:
     1 F00 (0, 0)
     1 X11 (0, 0)
     10 1 None
     10 2 None
     14 10 None
     14 11 None
     16 14 None
     16 15 None
     17 16 None
     17 9 None
     y22 17 None
   Pre inputs: [(0, 0), (0, 0)]
   
   Inputs  [[(0, 0), 2]]
   All psbl destinations:  [(8, 0), (8, 0)]
   Closest pe coord:  (8, 0)
   All schedules generated:  [[16, 17, 18, 19, 20, 21], [16, 17, 18, 19, 20, 21]]
   Final closest pe coord and schedule  (8, 0) [16, 17, 18, 19, 20, 21]
Searching for other cps with nodes  ['2', '9', '11', '15']

2. DUMPED cp:  ['5', '12', '15']
   Inputs & Coords:
     5 F11 (0, 4)
     5 X22 (0, 4)
     12 5 None
     12 6 None
     15 12 None
     15 13 None
   Pre inputs: [(0, 4), (0, 4)]
   
   Inputs  [[(0, 4), 2]]
   All psbl destinations:  [(1, 9)]
   Closest pe coord:  (1, 9)
   All schedules generated:  [[12, 13, 14]]
   Final closest pe coord and schedule  (1, 9) [12, 13, 14]
Searching for other cps with nodes  ['2', '6', '9', '11', '13']

3. DUMPED cp:  ['3', '11']
   Inputs & Coords:
     3 F02 (0, 2)
     3 X13 (0, 2)
     11 3 None
     11 4 None
   Pre inputs: [(0, 2), (0, 2)]
   
   Inputs  [[(0, 2), 2]]
   All psbl destinations:  [(2, 9)]
   Closest pe coord:  (2, 9)
   All schedules generated:  [[18, 19]]
   Final closest pe coord and schedule  (2, 9) [18, 19]
Searching for other cps with nodes  ['2', '4', '6', '9', '13']

4. DUMPED cp:  ['7', '13']
   Inputs & Coords:
     7 F20 (1, 1)
     7 X31 (1, 1)
     13 7 None
     13 8 None
   Pre inputs: [(1, 1), (1, 1)]
   
   Inputs  [[(1, 1), 2]]
   All psbl destinations:  [(8, 1)]
   Closest pe coord:  (8, 1)
   All schedules generated:  [[14, 15]]
   Final closest pe coord and schedule  (8, 1) [14, 15]
Searching for other cps with nodes  ['2', '4', '6', '8', '9']

5. DUMPED cp:  ['2']
   Inputs & Coords:
     2 F01 (0, 1)
     2 X12 (0, 1)
   Pre inputs: [(0, 1), (0, 1)]
   
   Inputs  [[(0, 1), 2]]
   All psbl destinations:  [(7, 8), (7, 8)]
   Closest pe coord:  (7, 8)
   All schedules generated:  [[28], [28]]
   Final closest pe coord and schedule  (7, 8) [28]
Searching for other cps with nodes  ['4', '6', '8', '9']

6. DUMPED cp:  ['4']
   Inputs & Coords:
     4 F10 (0, 3)
     4 X21 (0, 3)
   Pre inputs: [(0, 3), (0, 3)]
   
   Inputs  [[(0, 3), 2]]
   All psbl destinations:  [(3, 9)]
   Closest pe coord:  (3, 9)
   All schedules generated:  [[18]]
   Final closest pe coord and schedule  (3, 9) [18]
Searching for other cps with nodes  ['6', '8', '9']

7. DUMPED cp:  ['6']
   Inputs & Coords:
     6 F12 (1, 0)
     6 X23 (1, 0)
   Pre inputs: [(1, 0), (1, 0)]
   
   Inputs  [[(1, 0), 2]]
   All psbl destinations:  [(8, 2)]
   Closest pe coord:  (8, 2)
   All schedules generated:  [[18]]
   Final closest pe coord and schedule  (8, 2) [18]
Searching for other cps with nodes  ['8', '9']

8. DUMPED cp:  ['8']
   Inputs & Coords:
     8 F21 (1, 2)
     8 X32 (1, 2)
   Pre inputs: [(1, 2), (1, 2)]
   
   Inputs  [[(1, 2), 2]]
   All psbl destinations:  [(8, 3)]
   Closest pe coord:  (8, 3)
   All schedules generated:  [[16]]
   Final closest pe coord and schedule  (8, 3) [16]
Searching for other cps with nodes  ['9']

9. DUMPED cp:  ['9']
   Inputs & Coords:
     9 F22 (1, 3)
     9 X33 (1, 3)
   Pre inputs: [(1, 3), (1, 3)]
   
   Inputs  [[(1, 3), 2]]
   All psbl destinations:  [(4, 9)]
   Closest pe coord:  (4, 9)
   All schedules generated:  [[18]]
   Final closest pe coord and schedule  (4, 9) [18]
Searching for other cps with nodes  []

Input allocation by PEs:
(0, 0)  --->  ['F00', 'X11']
(0, 1)  --->  ['F01', 'X12']
(0, 2)  --->  ['F02', 'X13']
(0, 3)  --->  ['F10', 'X21']
(0, 4)  --->  ['F11', 'X22']
(1, 0)  --->  ['F12', 'X23']
(1, 1)  --->  ['F20', 'X31']
(1, 2)  --->  ['F21', 'X32']
(1, 3)  --->  ['F22', 'X33']

Final results before rescheduling (node.name, node.sched) by PEs: 
(8, 0)  --->  [('1', 16), ('10', 17), ('14', 18), ('16', 19), ('17', 20), ('y22', 21)]
(1, 9)  --->  [('5', 12), ('12', 13), ('15', 14)]
(2, 9)  --->  [('3', 18), ('11', 19)]
(8, 1)  --->  [('7', 14), ('13', 15)]
(7, 8)  --->  [('2', 28)]
(3, 9)  --->  [('4', 18)]
(8, 2)  --->  [('6', 18)]
(8, 3)  --->  [('8', 16)]
(4, 9)  --->  [('9', 18)]


RESCHEDULING
###### 8
     Pred 1 entered:  F21
     Check for pred "F21" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13', 'F22', 'X21', 'F21', 'X21', 'F21', 'X22', 'F22', 'X31', 'F21', 'X31', 'F21', 'X32']
     Walked coords  [(1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (6, 2), (7, 2), (8, 2), (8, 3)]
     1.0 Inputs are send from pred at step  64
     1.3 Putting inputs to DPR-X directly at node at step  74
     Pred 2 entered:  X32
     Check for pred "X32" =====> in (1, 2) ['9', 'F22', 'X12', 'F22', 'X13', 'F22', 'X21', 'F21', 'X21', 'F21', 'X22', 'F22', 'X31', 'F21', 'X31', 'F21', 'X32']
     Walked coords  [(1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (6, 2), (7, 2), (8, 2), (8, 3)]
     1.0 Inputs are send from pred at step  66
     1.3 Putting inputs to DPR-X directly at node at step  76
     3.0 Arithmetic op is done at step  77
     4.2 Saving results to own MCLM at step  80
     (8, 3) ---> [[], [79], [77], [74, 76, 78], [73, 75]]
###### 7
     Pred 1 entered:  F20
     Check for pred "F20" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12', 'F21', 'X20', 'F20', 'X20', 'F20', 'X21', 'F21', 'X30', 'F20', 'X30', 'F20', 'X31']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1)]
     1.0 Inputs are send from pred at step  68
     1.3 Putting inputs to DPR-X directly at node at step  77
     Pred 2 entered:  X31
     Check for pred "X31" =====> in (1, 1) ['F22', 'X11', '4', 'F21', 'X11', 'F21', 'X12', 'F21', 'X20', 'F20', 'X20', 'F20', 'X21', 'F21', 'X30', 'F20', 'X30', 'F20', 'X31']
     Walked coords  [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1)]
     1.0 Inputs are send from pred at step  71
     1.3 Putting inputs to DPR-X directly at node at step  80
     3.0 Arithmetic op is done at step  81
     4.0 ---Notification is changed for 13 1
     4.0 Saving results to DPR2 directly at step  82
     (8, 1) ---> [[], [], [81], [77, 80, 82], [76, 79]]
###### 6
     Pred 1 entered:  F12
     Check for pred "F12" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11', 'X11', 'F20', 'F12', 'X12', 'F12', 'X13', 'X21', 'F20', 'F12', 'X22', 'F12', 'X23']
     Walked coords  [(1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (8, 1), (8, 2)]
     1.0 Inputs are send from pred at step  52
     1.3 Putting inputs to DPR-X directly at node at step  63
     Pred 2 entered:  X23
     Check for pred "X23" =====> in (1, 0) ['F21', 'X10', '2', 'F20', 'X10', 'F20', 'X11', 'X11', 'F20', 'F12', 'X12', 'F12', 'X13', 'X21', 'F20', 'F12', 'X22', 'F12', 'X23']
     Walked coords  [(1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (8, 1), (8, 2)]
     1.0 Inputs are send from pred at step  56
     1.3 Putting inputs to DPR-X directly at node at step  67
     3.0 Arithmetic op is done at step  68
     4.2 Saving results to own MCLM at step  71
     (8, 2) ---> [[], [70], [68], [63, 67, 69], [72, 74, 62, 66]]
###### 5
     Pred 1 entered:  F11
     Check for pred "F11" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03', 'X10', 'F12', 'F11', 'X11', 'F11', 'X12', 'X20', 'F12', 'F11', 'X21', 'F11', 'X22']
     Walked coords  [(0, 4), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9)]
     1.0 Inputs are send from pred at step  36
     1.3 Putting inputs to DPR-X directly at node at step  44
     Pred 2 entered:  X22
     Check for pred "X22" =====> in (0, 4) ['X01', 'F20', '6', 'F12', 'X02', 'F12', 'X03', 'X10', 'F12', 'F11', 'X11', 'F11', 'X12', 'X20', 'F12', 'F11', 'X21', 'F11', 'X22']
     Walked coords  [(0, 4), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9)]
     1.0 Inputs are send from pred at step  48
     1.3 Putting inputs to DPR-X directly at node at step  56
     3.0 Arithmetic op is done at step  57
     4.0 ---Notification is changed for 12 1
     4.0 Saving results to DPR2 directly at step  58
     (1, 9) ---> [[], [], [57], [44, 56, 58], [65, 43, 55]]
###### 4
     Pred 1 entered:  F10
     Check for pred "F10" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02', 'F10', 'F11', 'F10', 'X10', 'F10', 'X11', 'F10', 'F11', 'F10', 'X20', 'F10', 'X21']
     Walked coords  [(0, 3), (1, 3), (2, 3), (3, 3), (3, 4), (3, 5), (3, 6), (3, 7), (3, 8), (3, 9)]
     1.0 Inputs are send from pred at step  51
     1.3 Putting inputs to DPR-X directly at node at step  62
     Pred 2 entered:  X21
     Check for pred "X21" =====> in (0, 3) ['X00', 'F12', '13', 'F11', 'X01', 'F11', 'X02', 'F10', 'F11', 'F10', 'X10', 'F10', 'X11', 'F10', 'F11', 'F10', 'X20', 'F10', 'X21']
     Walked coords  [(0, 3), (1, 3), (2, 3), (3, 3), (3, 4), (3, 5), (3, 6), (3, 7), (3, 8), (3, 9)]
     1.0 Inputs are send from pred at step  54
     1.3 Putting inputs to DPR-X directly at node at step  65
     3.0 Arithmetic op is done at step  66
     4.2 Saving results to own MCLM at step  69
     (3, 9) ---> [[], [68], [66], [62, 65, 67], [67, 61, 64]]
###### 3
     Pred 1 entered:  F02
     Check for pred "F02" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01', 'F02', 'X01', 'F02', 'X02', 'F02', 'X03', 'F02', 'X11', 'F02', 'X12', 'F02', 'X13']
     Walked coords  [(0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7), (2, 8), (2, 9)]
     1.0 Inputs are send from pred at step  55
     1.3 Putting inputs to DPR-X directly at node at step  66
     Pred 2 entered:  X13
     Check for pred "X13" =====> in (0, 2) ['F10', 'F11', '15', 'F10', 'X00', 'F10', 'X01', 'F02', 'X01', 'F02', 'X02', 'F02', 'X03', 'F02', 'X11', 'F02', 'X12', 'F02', 'X13']
     Walked coords  [(0, 2), (1, 2), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7), (2, 8), (2, 9)]
     1.0 Inputs are send from pred at step  57
     1.3 Putting inputs to DPR-X directly at node at step  68
     3.0 Arithmetic op is done at step  69
     4.0 ---Notification is changed for 11 1
     4.0 Saving results to DPR2 directly at step  70
     (2, 9) ---> [[], [], [69], [66, 68, 70], [66, 65, 67]]
###### 2
     Pred 1 entered:  F01
     Check for pred "F01" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02', 'F01', 'X00', 'F01', 'X01', 'F01', 'X02', 'F01', 'X10', 'F01', 'X11', 'F01', 'X12']
     Walked coords  [(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (7, 2), (7, 3), (7, 4), (7, 5), (7, 6), (7, 7), (7, 8)]
     1.0 Inputs are send from pred at step  81
     1.3 Putting inputs to DPR-X directly at node at step  97
     Pred 2 entered:  X12
     Check for pred "X12" =====> in (0, 1) ['F01', 'F02', '11', 'F01', 'F02', 'F01', 'F02', 'F01', 'X00', 'F01', 'X01', 'F01', 'X02', 'F01', 'X10', 'F01', 'X11', 'F01', 'X12']
     Walked coords  [(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (7, 2), (7, 3), (7, 4), (7, 5), (7, 6), (7, 7), (7, 8)]
     1.0 Inputs are send from pred at step  83
     1.3 Putting inputs to DPR-X directly at node at step  99
     3.0 Arithmetic op is done at step  100
     4.2 Saving results to own MCLM at step  103
     (7, 8) ---> [[], [102], [100], [97, 99, 101], [92, 74, 94, 81, 109, 79, 96, 98]]
###### 1
     Pred 1 entered:  F00
     Check for pred "F00" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0', 'F00', 'X00', 'F00', 'X01', 'F00', 'int0', 'F00', 'X10', 'F00', 'X11']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0)]
     1.0 Inputs are send from pred at step  79
     1.3 Putting inputs to DPR-X directly at node at step  89
     Pred 2 entered:  X11
     Check for pred "X11" =====> in (0, 0) ['F00', 'int0', '17', 'F00', 'int0', 'F00', 'int0', 'F00', 'int0', 'F00', 'X00', 'F00', 'X01', 'F00', 'int0', 'F00', 'X10', 'F00', 'X11']
     Walked coords  [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0)]
     1.0 Inputs are send from pred at step  81
     1.3 Putting inputs to DPR-X directly at node at step  91
     3.0 Arithmetic op is done at step  92
     4.0 ---Notification is changed for 10 1
     4.0 Saving results to DPR2 directly at step  93
     (8, 0) ---> [[], [], [92], [89, 91, 93], [60, 64, 88, 90]]
###### 13
     Pred 1 entered:  7
     Pred 2 entered:  8
     Check for pred "8" =====> in (8, 3) ['8']
     Walked coords  [(8, 3), (8, 2), (8, 1)]
     1.0 Inputs are send from pred at step  83
     1.2 Putting inputs to DPR1 directly at node at step  87
     3.0 Arithmetic op is done at step  88
     4.2 Saving results to own MCLM at step  91
     (8, 1) ---> [[], [90], [81, 88], [77, 80, 82, 87, 89], [76, 79, 61, 65, 86]]
###### 12
     Pred 1 entered:  5
     Pred 2 entered:  6
     Check for pred "6" =====> in (8, 2) ['6']
     Walked coords  [(8, 2), (8, 3), (8, 4), (8, 5), (8, 6), (8, 7), (8, 8), (8, 9), (7, 9), (6, 9), (5, 9), (4, 9), (3, 9), (2, 9), (1, 9)]
     1.0 Inputs are send from pred at step  74
     1.2 Putting inputs to DPR1 directly at node at step  90
     3.0 Arithmetic op is done at step  91
     4.0 ---Notification is changed for 15 1
     4.0 Saving results to DPR2 directly at step  92
     (1, 9) ---> [[], [], [57, 91], [44, 56, 58, 90, 92], [65, 43, 55, 89]]
###### 11
     Pred 1 entered:  3
     Pred 2 entered:  4
     Check for pred "4" =====> in (3, 9) ['4']
     Walked coords  [(3, 9), (2, 9)]
     1.0 Inputs are send from pred at step  72
     1.2 Putting inputs to DPR1 directly at node at step  75
     3.0 Arithmetic op is done at step  76
     4.2 Saving results to own MCLM at step  79
     (2, 9) ---> [[], [78], [69, 76], [66, 68, 70, 75, 77], [66, 65, 67, 88, 74]]
###### 10
     Pred 1 entered:  1
     Pred 2 entered:  2
     Check for pred "2" =====> in (7, 8) ['2']
     Walked coords  [(7, 8), (8, 8), (8, 7), (8, 6), (8, 5), (8, 4), (8, 3), (8, 2), (8, 1), (8, 0)]
     1.0 Inputs are send from pred at step  106
     1.2 Putting inputs to DPR1 directly at node at step  117
     3.0 Arithmetic op is done at step  118
     4.0 ---Notification is changed for 14 1
     4.0 Saving results to DPR2 directly at step  119
     (8, 0) ---> [[], [], [92, 118], [89, 91, 93, 117, 119], [60, 64, 88, 90, 116]]
###### 15
     Pred 1 entered:  12
     Pred 2 entered:  13
     Check for pred "13" =====> in (8, 1) ['13']
     Walked coords  [(8, 1), (8, 2), (8, 3), (8, 4), (8, 5), (8, 6), (8, 7), (8, 8), (8, 9), (7, 9), (6, 9), (5, 9), (4, 9), (3, 9), (2, 9), (1, 9)]
     1.0 Inputs are send from pred at step  94
     1.2 Putting inputs to DPR1 directly at node at step  111
     3.0 Arithmetic op is done at step  112
     4.2 Saving results to own MCLM at step  115
     (1, 9) ---> [[], [114], [57, 91, 112], [44, 56, 58, 90, 92, 111, 113], [65, 43, 55, 89, 110]]
###### 14
     Pred 1 entered:  10
     Pred 2 entered:  11
     Check for pred "11" =====> in (2, 9) ['11']
     Walked coords  [(2, 9), (3, 9), (4, 9), (5, 9), (6, 9), (7, 9), (8, 9), (8, 8), (8, 7), (8, 6), (8, 5), (8, 4), (8, 3), (8, 2), (8, 1), (8, 0)]
     1.0 Inputs are send from pred at step  89
     1.2 Putting inputs to DPR1 directly at node at step  106
     3.0 Arithmetic op is done at step  120
     4.0 ---Notification is changed for 16 1
     4.0 Saving results to DPR2 directly at step  121
     (8, 0) ---> [[], [], [92, 118, 120], [89, 91, 93, 117, 119, 106, 121], [60, 64, 88, 90, 116, 105]]
###### 9
     Pred 1 entered:  F22
     Check for pred "F22" =====> in (1, 3) ['15', 'F22', 'X22', 'F22', 'X23', 'F22', 'X32', 'F22', 'X33']
     Walked coords  [(1, 3), (2, 3), (3, 3), (4, 3), (4, 4), (4, 5), (4, 6), (4, 7), (4, 8), (4, 9)]
     1.0 Inputs are send from pred at step  36
     1.3 Putting inputs to DPR-X directly at node at step  47
     Pred 2 entered:  X33
     Check for pred "X33" =====> in (1, 3) ['15', 'F22', 'X22', 'F22', 'X23', 'F22', 'X32', 'F22', 'X33']
     Walked coords  [(1, 3), (2, 3), (3, 3), (4, 3), (4, 4), (4, 5), (4, 6), (4, 7), (4, 8), (4, 9)]
     1.0 Inputs are send from pred at step  50
     1.3 Putting inputs to DPR-X directly at node at step  61
     3.0 Arithmetic op is done at step  62
     4.2 Saving results to own MCLM at step  65
     (4, 9) ---> [[], [64], [62], [47, 61, 63], [68, 86, 107, 92, 46, 60]]
###### 16
     Pred 1 entered:  14
     Pred 2 entered:  15
     Check for pred "15" =====> in (1, 9) ['15']
     Walked coords  [(1, 9), (2, 9), (3, 9), (4, 9), (5, 9), (6, 9), (7, 9), (8, 9), (8, 8), (8, 7), (8, 6), (8, 5), (8, 4), (8, 3), (8, 2), (8, 1), (8, 0)]
     1.0 Inputs are send from pred at step  118
     1.2 Putting inputs to DPR1 directly at node at step  136
     3.0 Arithmetic op is done at step  137
     4.0 ---Notification is changed for 17 1
     4.0 Saving results to DPR2 directly at step  138
     (8, 0) ---> [[], [], [92, 118, 120, 137], [89, 91, 93, 117, 119, 106, 121, 136, 138], [60, 64, 88, 90, 116, 105, 135]]
###### 17
     Pred 1 entered:  16
     Pred 2 entered:  9
     Check for pred "9" =====> in (4, 9) ['9']
     Walked coords  [(4, 9), (5, 9), (6, 9), (7, 9), (8, 9), (8, 8), (8, 7), (8, 6), (8, 5), (8, 4), (8, 3), (8, 2), (8, 1), (8, 0)]
     1.0 Inputs are send from pred at step  68
     1.2 Putting inputs to DPR1 directly at node at step  83
     3.0 Arithmetic op is done at step  139
     4.2 Saving results to own MCLM at step  142
     (8, 0) ---> [[], [141], [92, 118, 120, 137, 139], [89, 91, 93, 117, 119, 106, 121, 136, 138, 83, 140], [60, 64, 88, 90, 116, 105, 135, 82]]
###### y22
     Pred 1 entered:  17
     1.4 This is actually last node at step  142

Final results after rescheduling (node.name, node.sched): by PEs
(8, 0)  --->  [('1', 93), ('10', 119), ('14', 121), ('16', 138), ('17', 142), ('y22', 142)]
(1, 9)  --->  [('5', 58), ('12', 92), ('15', 115)]
(2, 9)  --->  [('3', 70), ('11', 79)]
(8, 1)  --->  [('7', 82), ('13', 91)]
(7, 8)  --->  [('2', 103)]
(3, 9)  --->  [('4', 69)]
(8, 2)  --->  [('6', 71)]
(8, 3)  --->  [('8', 80)]
(4, 9)  --->  [('9', 65)]

PE map 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Node scheds and CCM commands:
1  --->  [(1, 0), ['CCM1', 1, 0, 'PE1'], [(0, 4), ['CCM1', 1, 1, 'PE1']], [(0, 0), ['CCM1', 1, 1, 'PE1']], [(0, 3), ['CCM1', 1, 1, 'PE1']], [(0, 2), ['CCM1', 1, 1, 'PE1']], [(0, 1), ['CCM1', 1, 1, 'PE1']], [(1, 1), ['CCM1', 1, 0, 'PE1']], [(1, 2), ['CCM1', 1, 1, 'PE1']], [(1, 3), ['CCM1', 1, 1, 'PE1']]]
2  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'DPR1']], [(0, 2), ['CCM1', 2, 0, 'PE1']], [(0, 1), ['CCM3', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
3  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(1, 0), ['CCM1', 3, 1, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 3, 0, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 3, 1, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 3, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM1', 3, 2, 'PE1']]]
6  --->  [(2, 0), ['CCM6', 'DPR1'], [(0, 3), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
4  --->  [(1, 0), ['CCM3', 'PERouter'], [(0, 4), ['CCM1', 4, 0, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
5  --->  [(1, 0), ['CCM6', 'NodeRouter'], [(0, 4), ['CCM3', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 5, 1, 'PE1']], [(0, 1), ['CCM1', 5, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 5, 3, 'PE1']], [(0, 2), ['CCM1', 5, 0, 'PE1']], [(1, 3), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM1', 5, 1, 'PE1']]]
8  --->  [(2, 0), ['CCM6', 'DPR2'], [(0, 3), ['CCM6', 'DPR2']], [(0, 4), ['CCM5', 'DPR3']], [(0, 2), ['CCM6', 'DPR2']], [(1, 1), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM1', 8, 3, 'PE1']], [(0, 1), ['CCM3', 'PERouter']], [(1, 3), ['CCM1', 8, 4, 'PE1']]]
9  --->  [(2, 0), ['CCM4', '*'], [(0, 3), ['CCM4', '*']], [(0, 4), ['CCM2', 'MCLM1']], [(0, 2), ['CCM4', '*']], [(1, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 9, 0, 'PE1']], [(1, 2), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM3', 'PERouter']]]
10  --->  [(2, 0), ['CCM5', 'DPR3'], [(0, 3), ['CCM5', 'DPR2']], [(0, 2), ['CCM5', 'DPR2']], [(1, 1), ['CCM4', '*']], [(0, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'DPR1']], [(0, 0), ['CCM1', 10, 1, 'PE1']], [(1, 2), ['CCM5', 'DPR3']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 10, 3, 'PE1']], [(0, 2), ['CCM1', 10, 4, 'PE1']], [(1, 2), ['CCM1', 10, 2, 'PE1']], [(2, 7), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM1', 10, 1, 'PE1']]]
11  --->  [(2, 0), ['CCM2', 'MCLM1'], [(1, 1), ['CCM5', 'DPR3']], [(0, 1), ['CCM4', '*']], [(1, 0), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'DPR2']], [(0, 4), ['CCM1', 11, 2, 'PE1']], [(1, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM1', 11, 3, 'PE1']], [(3, 0), ['CCM6', 'DPR1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
7  --->  [(0, 4), ['CCM4', '*'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 7, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 7, 1, 'PE1']], [(3, 2), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'NodeRouter']]]
12  --->  [(1, 1), ['CCM2', 'MCLM1'], [(0, 1), ['CCM5', 'DPR2']], [(1, 0), ['CCM6', 'DPR2']], [(0, 0), ['CCM4', '*']], [(0, 4), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 4), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 12, 0, 'PE1']], [(1, 2), ['CCM1', 12, 1, 'PE1']], [(2, 7), ['CCM6', 'DPR2']], [(1, 3), ['CCM6', 'NodeRouter']]]
13  --->  [(1, 0), ['CCM4', '*'], [(0, 0), ['CCM5', 'DPR2']], [(2, 0), ['CCM1', 13, 0, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 13, 4, 'PE1']], [(0, 3), ['CCM1', 13, 4, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(2, 7), ['CCM4', '*']]]
14  --->  [(1, 0), ['CCM5', 'DPR3'], [(2, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 14, 2, 'PE1']], [(1, 2), ['CCM1', 14, 0, 'PE1']], [(1, 0), ['CCM1', 14, 1, 'PE1']], [(2, 4), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 14, 6, 'PE1']], [(0, 0), ['CCM1', 14, 1, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']], [(2, 7), ['CCM5', 'DPR3']]]
15  --->  [(1, 0), ['CCM2', 'MCLM1'], [(2, 0), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 15, 3, 'PE1']], [(0, 3), ['CCM1', 15, 3, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(2, 7), ['CCM2', 'MCLM1']]]
22  --->  [(0, 3), ['CCM6', 'DPR1'], [(0, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'DPR2']], [(3, 0), ['CCM5', 'DPR2']], [(2, 4), ['CCM2', 'MCLM1']], [(1, 4), ['CCM1', 22, 0, 'PE1']], [(3, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(4, 5), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(5, 7), ['CCM5', 'DPR3']]]
23  --->  [(0, 3), ['CCM4', '+'], [(0, 0), ['CCM4', '+']], [(3, 1), ['CCM4', '*']], [(1, 4), ['CCM3', 'PERouter']], [(3, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(4, 4), ['CCM6', 'DPR1']], [(3, 4), ['CCM6', 'DPR1']], [(4, 2), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 1), ['CCM6', 'DPR2']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 23, 3, 'PE1']], [(1, 0), ['CCM1', 23, 3, 'PE1']], [(0, 4), ['CCM1', 23, 3, 'PE1']], [(1, 2), ['CCM1', 23, 6, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(5, 7), ['CCM2', 'MCLM1']]]
24  --->  [(0, 3), ['CCM5', 'DPR3'], [(0, 0), ['CCM5', 'DPR2']], [(0, 1), ['CCM1', 24, 2, 'PE1']], [(3, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 24, 1, 'PE1']], [(2, 3), ['CCM6', 'DPR1']], [(2, 4), ['CCM1', 24, 0, 'PE1']], [(1, 4), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM5', 'DPR3']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM1', 24, 3, 'PE1']], [(0, 2), ['CCM1', 24, 7, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(6, 8), ['CCM6', 'DPR1']]]
25  --->  [(0, 3), ['CCM2', 'MCLM1'], [(0, 1), ['CCM3', 'PERouter']], [(3, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 4), ['CCM3', 'PERouter']], [(4, 4), ['CCM6', 'DPR2']], [(3, 4), ['CCM6', 'DPR2']], [(4, 2), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'DPR2']], [(1, 5), ['CCM6', 'DPR1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 6), ['CCM6', 'DPR2']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(5, 7), ['CCM1', 25, 0, 'PE1']]]
17  --->  [(0, 2), ['CCM6', 'DPR1'], [(1, 0), ['CCM1', 17, 2, 'PE1']], [(3, 1), ['CCM6', 'DPR1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 4), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(3, 2), ['CCM4', '*']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 17, 6, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 17, 6, 'PE1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 7), ['CCM1', 17, 0, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(5, 7), ['CCM6', 'DPR1']]]
18  --->  [(0, 2), ['CCM4', '+'], [(1, 0), ['CCM3', 'PERouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'DPR2']], [(1, 4), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(3, 2), ['CCM5', 'DPR3']], [(1, 1), ['CCM1', 18, 3, 'PE1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 0), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 18, 1, 'PE1']], [(2, 7), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']]]
19  --->  [(0, 2), ['CCM5', 'DPR2'], [(0, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(2, 4), ['CCM6', 'DPR2']], [(1, 3), ['CCM4', '*']], [(1, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM2', 'MCLM1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 19, 3, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM1', 19, 7, 'PE1']], [(0, 2), ['CCM1', 19, 7, 'PE1']], [(2, 7), ['CCM6', 'NodeRouter']]]
16  --->  [(1, 1), ['CCM6', 'NodeRouter'], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 16, 1, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 16, 0, 'PE1']], [(3, 2), ['CCM6', 'DPR2']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 16, 1, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 16, 7, 'PE1']]]
20  --->  [(0, 1), ['CCM4', '+'], [(3, 0), ['CCM6', 'DPR2']], [(2, 4), ['CCM4', '*']], [(1, 3), ['CCM5', 'DPR2']], [(1, 4), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(4, 2), ['CCM6', 'DPR1']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(5, 7), ['CCM6', 'DPR2']]]
21  --->  [(0, 1), ['CCM5', 'DPR3'], [(0, 0), ['CCM6', 'DPR1']], [(3, 0), ['CCM4', '*']], [(2, 4), ['CCM5', 'DPR3']], [(3, 2), ['CCM1', 21, 0, 'PE1']], [(1, 1), ['CCM1', 21, 6, 'PE1']], [(1, 0), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 21, 6, 'PE1']], [(0, 1), ['CCM1', 21, 1, 'PE1']], [(1, 2), ['CCM1', 21, 4, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 21, 9, 'PE1']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 21, 10, 'PE1']], [(5, 7), ['CCM4', '*']]]
27  --->  [(0, 3), ['CCM1', 27, 2, 'PE1'], [(0, 0), ['CCM3', 'PERouter']], [(3, 1), ['CCM1', 27, 0, 'PE1']], [(2, 1), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR1']], [(4, 4), ['CCM5', 'DPR3']], [(3, 4), ['CCM5', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(4, 2), ['CCM1', 27, 0, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']], [(5, 7), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM3', 'PERouter']]]
28  --->  [(0, 3), ['CCM3', 'PERouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 1), ['CCM3', 'PERouter']], [(4, 0), ['CCM6', 'DPR2']], [(4, 4), ['CCM2', 'MCLM1']], [(0, 1), ['CCM6', 'NodeRouter']], [(4, 2), ['CCM3', 'PERouter']], [(1, 5), ['CCM6', 'DPR2']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 28, 6, 'PE1']], [(1, 0), ['CCM1', 28, 9, 'PE1']], [(0, 7), ['CCM6', 'DPR1']], [(0, 4), ['CCM6', 'NodeRouter']], [(5, 3), ['CCM6', 'DPR1']], [(6, 5), ['CCM6', 'DPR1']], [(0, 2), ['CCM6', 'NodeRouter']]]
29  --->  [(0, 3), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'DPR1']], [(3, 1), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM6', 'DPR1']], [(4, 0), ['CCM4', '*']], [(0, 5), ['CCM6', 'DPR1']], [(4, 2), ['CCM6', 'NodeRouter']], [(1, 5), ['CCM4', '*']], [(1, 1), ['CCM1', 29, 8, 'PE1']], [(0, 3), ['CCM1', 29, 7, 'PE1']], [(0, 2), ['CCM1', 29, 6, 'PE1']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM1', 29, 0, 'PE1']], [(0, 4), ['CCM1', 29, 9, 'PE1']]]
32  --->  [(0, 2), ['CCM6', 'DPR1'], [(2, 2), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM6', 'DPR1']], [(1, 3), ['CCM5', 'DPR2']], [(4, 3), ['CCM5', 'DPR3']], [(4, 4), ['CCM6', 'NodeRouter']], [(5, 2), ['CCM6', 'DPR1']], [(5, 1), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 6), ['CCM4', '*']], [(1, 1), ['CCM1', 32, 9, 'PE1']], [(0, 3), ['CCM1', 32, 7, 'PE1']], [(3, 6), ['CCM6', 'DPR2']], [(0, 4), ['CCM3', 'PERouter']]]
33  --->  [(0, 2), ['CCM4', '+'], [(2, 2), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 33, 1, 'PE1']], [(3, 0), ['CCM4', '+']], [(4, 3), ['CCM2', 'MCLM1']], [(0, 6), ['CCM5', 'DPR2']], [(2, 5), ['CCM6', 'DPR1']], [(4, 5), ['CCM6', 'DPR2']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 33, 10, 'PE1']], [(0, 7), ['CCM6', 'DPR2']], [(0, 3), ['CCM3', 'PERouter']], [(3, 6), ['CCM4', '*']], [(0, 4), ['CCM6', 'NodeRouter']]]
34  --->  [(0, 2), ['CCM5', 'DPR3'], [(2, 2), ['CCM5', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 0), ['CCM5', 'DPR3']], [(4, 1), ['CCM6', 'DPR1']], [(1, 5), ['CCM1', 34, 0, 'PE1']], [(4, 5), ['CCM4', '*']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 7), ['CCM4', '*']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 34, 10, 'PE1']], [(3, 6), ['CCM5', 'DPR2']], [(1, 2), ['CCM1', 34, 10, 'PE1']], [(0, 2), ['CCM1', 34, 7, 'PE1']], [(0, 4), ['CCM1', 34, 9, 'PE1']], [(1, 3), ['CCM1', 34, 1, 'PE1']]]
35  --->  [(0, 2), ['CCM2', 'MCLM1'], [(2, 3), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 0), ['CCM2', 'MCLM1']], [(2, 2), ['CCM4', '+']], [(4, 1), ['CCM4', '*']], [(0, 0), ['CCM1', 35, 0, 'PE1']], [(4, 3), ['CCM1', 35, 0, 'PE1']], [(3, 4), ['CCM6', 'DPR1']], [(1, 5), ['CCM3', 'PERouter']], [(4, 5), ['CCM5', 'DPR3']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 7), ['CCM5', 'DPR2']], [(0, 3), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']], [(1, 3), ['CCM3', 'PERouter']]]
26  --->  [(0, 1), ['CCM6', 'NodeRouter'], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 26, 1, 'PE1']], [(2, 4), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(4, 4), ['CCM4', '*']], [(3, 4), ['CCM4', '*']], [(0, 1), ['CCM1', 26, 0, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 26, 7, 'PE1']], [(0, 4), ['CCM1', 26, 10, 'PE1']], [(5, 7), ['CCM3', 'PERouter']], [(0, 2), ['CCM1', 26, 7, 'PE1']]]
30  --->  [(0, 0), ['CCM4', '+'], [(1, 3), ['CCM6', 'DPR1']], [(4, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM5', 'DPR2']], [(0, 5), ['CCM4', '*']], [(4, 4), ['CCM1', 30, 0, 'PE1']], [(1, 5), ['CCM5', 'DPR3']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 30, 6, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(3, 6), ['CCM6', 'DPR1']], [(0, 1), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']]]
31  --->  [(0, 0), ['CCM5', 'DPR2'], [(0, 0), ['CCM1', 31, 0, 'PE1']], [(1, 3), ['CCM4', '+']], [(4, 3), ['CCM4', '*']], [(0, 5), ['CCM5', 'DPR2']], [(4, 4), ['CCM3', 'PERouter']], [(1, 5), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 6), ['CCM6', 'DPR1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 31, 13, 'PE1']]]
37  --->  [(0, 2), ['CCM1', 37, 2, 'PE1'], [(2, 3), ['CCM5', 'DPR3']], [(2, 2), ['CCM2', 'MCLM1']], [(3, 0), ['CCM1', 37, 0, 'PE1']], [(4, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 37, 1, 'PE1']], [(4, 3), ['CCM6', 'NodeRouter']], [(3, 4), ['CCM5', 'DPR2']], [(1, 6), ['CCM6', 'DPR1']], [(4, 6), ['CCM6', 'DPR1']], [(6, 0), ['CCM6', 'DPR1']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 37, 3, 'PE1']], [(1, 8), ['CCM6', 'DPR1']], [(1, 2), ['CCM3', 'PERouter']]]
38  --->  [(0, 2), ['CCM3', 'PERouter'], [(2, 3), ['CCM2', 'MCLM1']], [(2, 1), ['CCM6', 'DPR1']], [(3, 0), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(0, 5), ['CCM6', 'DPR1']], [(5, 2), ['CCM6', 'DPR2']], [(2, 5), ['CCM6', 'DPR2']], [(4, 5), ['CCM1', 38, 0, 'PE1']], [(1, 1), ['CCM1', 38, 9, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM1', 38, 3, 'PE1']], [(0, 3), ['CCM1', 38, 3, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']]]
39  --->  [(0, 2), ['CCM6', 'NodeRouter'], [(3, 0), ['CCM6', 'NodeRouter']], [(2, 2), ['CCM1', 39, 0, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM4', '+']], [(4, 1), ['CCM1', 39, 0, 'PE1']], [(5, 2), ['CCM4', '*']], [(2, 5), ['CCM4', '*']], [(4, 5), ['CCM3', 'PERouter']], [(4, 6), ['CCM6', 'DPR2']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 39, 9, 'PE1']], [(3, 7), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM3', 'PERouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 8), ['CCM6', 'DPR2']]]
43  --->  [(0, 0), ['CCM6', 'DPR1'], [(4, 0), ['CCM4', '+']], [(0, 5), ['CCM1', 43, 0, 'PE1']], [(2, 6), ['CCM5', 'DPR3']], [(0, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM1', 43, 0, 'PE1']], [(5, 4), ['CCM6', 'DPR1']], [(6, 0), ['CCM4', '*']], [(1, 7), ['CCM6', 'DPR2']], [(1, 0), ['CCM1', 43, 12, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 43, 14, 'PE1']], [(1, 2), ['CCM1', 43, 12, 'PE1']], [(0, 4), ['CCM3', 'PERouter']]]
44  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(4, 0), ['CCM5', 'DPR3']], [(0, 5), ['CCM3', 'PERouter']], [(2, 6), ['CCM2', 'MCLM1']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 44, 8, 'PE1']], [(5, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM1', 44, 8, 'PE1']], [(6, 0), ['CCM5', 'DPR3']], [(1, 7), ['CCM4', '*']], [(4, 6), ['CCM1', 44, 0, 'PE1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 44, 7, 'PE1']], [(1, 9), ['CCM6', 'DPR1']]]
45  --->  [(0, 0), ['CCM5', 'DPR2'], [(3, 3), ['CCM6', 'DPR1']], [(4, 0), ['CCM2', 'MCLM1']], [(0, 5), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM3', 'PERouter']], [(6, 0), ['CCM2', 'MCLM1']], [(1, 7), ['CCM5', 'DPR3']], [(4, 6), ['CCM3', 'PERouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM1', 45, 9, 'PE1']], [(0, 3), ['CCM3', 'PERouter']]]
46  --->  [(0, 0), ['CCM4', '+'], [(2, 1), ['CCM6', 'DPR1']], [(1, 3), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM1', 46, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 7), ['CCM2', 'MCLM1']], [(0, 1), ['CCM1', 46, 10, 'PE1']], [(4, 6), ['CCM6', 'NodeRouter']], [(6, 5), ['CCM6', 'DPR2']], [(1, 1), ['CCM1', 46, 12, 'PE1']], [(3, 7), ['CCM6', 'DPR2']], [(7, 2), ['CCM6', 'DPR1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 46, 16, 'PE1']], [(0, 2), ['CCM1', 46, 7, 'PE1']], [(0, 4), ['CCM1', 46, 18, 'PE1']]]
47  --->  [(0, 0), ['CCM5', 'DPR3'], [(2, 1), ['CCM4', '+']], [(1, 3), ['CCM4', '+']], [(3, 3), ['CCM6', 'DPR2']], [(4, 0), ['CCM1', 47, 0, 'PE1']], [(2, 6), ['CCM3', 'PERouter']], [(0, 1), ['CCM3', 'PERouter']], [(6, 0), ['CCM1', 47, 0, 'PE1']], [(6, 5), ['CCM4', '*']], [(1, 1), ['CCM3', 'PERouter']], [(3, 7), ['CCM4', '*']], [(5, 6), ['CCM6', 'DPR1']], [(7, 0), ['CCM6', 'DPR1']], [(0, 8), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']], [(4, 9), ['CCM6', 'DPR1']]]
48  --->  [(0, 0), ['CCM2', 'MCLM1'], [(2, 1), ['CCM5', 'DPR2']], [(1, 3), ['CCM5', 'DPR3']], [(3, 3), ['CCM4', '*']], [(4, 0), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 48, 1, 'PE1']], [(5, 1), ['CCM6', 'DPR1']], [(2, 6), ['CCM6', 'NodeRouter']], [(5, 0), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(6, 0), ['CCM3', 'PERouter']], [(1, 7), ['CCM1', 48, 0, 'PE1']], [(6, 5), ['CCM5', 'DPR3']], [(6, 2), ['CCM6', 'DPR1']], [(1, 1), ['CCM6', 'NodeRouter']], [(3, 7), ['CCM5', 'DPR2']], [(4, 7), ['CCM6', 'DPR1']], [(0, 1), ['CCM1', 48, 0, 'PE1']], [(1, 1), ['CCM1', 48, 3, 'PE1']], [(0, 8), ['CCM4', '*']], [(1, 0), ['CCM1', 48, 16, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM1', 48, 8, 'PE1']]]
36  --->  [(2, 3), ['CCM4', '*'], [(2, 2), ['CCM5', 'DPR3']], [(4, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM3', 'PERouter']], [(4, 3), ['CCM3', 'PERouter']], [(3, 4), ['CCM4', '+']], [(1, 5), ['CCM6', 'NodeRouter']], [(4, 5), ['CCM2', 'MCLM1']], [(0, 3), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 36, 12, 'PE1']], [(0, 3), ['CCM1', 36, 7, 'PE1']], [(0, 2), ['CCM6', 'NodeRouter']], [(6, 1), ['CCM6', 'DPR1']], [(1, 2), ['CCM1', 36, 1, 'PE1']], [(0, 4), ['CCM6', 'NodeRouter']], [(1, 3), ['CCM6', 'NodeRouter']]]
40  --->  [(2, 1), ['CCM6', 'DPR2'], [(2, 3), ['CCM1', 40, 0, 'PE1']], [(2, 2), ['CCM3', 'PERouter']], [(0, 5), ['CCM5', 'DPR3']], [(4, 1), ['CCM3', 'PERouter']], [(5, 2), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 40, 1, 'PE1']], [(2, 5), ['CCM5', 'DPR2']], [(4, 5), ['CCM6', 'NodeRouter']], [(4, 6), ['CCM4', '*']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 40, 7, 'PE1']], [(0, 4), ['CCM1', 40, 9, 'PE1']]]
41  --->  [(2, 1), ['CCM4', '*'], [(2, 3), ['CCM3', 'PERouter']], [(2, 2), ['CCM6', 'NodeRouter']], [(0, 5), ['CCM2', 'MCLM1']], [(4, 1), ['CCM6', 'NodeRouter']], [(5, 2), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(2, 6), ['CCM6', 'DPR2']], [(4, 6), ['CCM5', 'DPR3']], [(1, 7), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 41, 12, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 4), ['CCM3', 'PERouter']]]
42  --->  [(2, 1), ['CCM5', 'DPR2'], [(2, 3), ['CCM6', 'NodeRouter']], [(4, 0), ['CCM6', 'DPR1']], [(3, 3), ['CCM6', 'DPR1']], [(0, 0), ['CCM6', 'NodeRouter']], [(2, 6), ['CCM4', '*']], [(0, 1), ['CCM1', 42, 0, 'PE1']], [(4, 6), ['CCM2', 'MCLM1']], [(6, 0), ['CCM6', 'DPR2']], [(5, 5), ['CCM6', 'DPR1']], [(0, 3), ['CCM1', 42, 12, 'PE1']], [(0, 2), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM6', 'NodeRouter']], [(0, 4), ['CCM1', 42, 16, 'PE1']]]
49  --->  [(1, 3), ['CCM2', 'MCLM1'], [(2, 1), ['CCM4', '+']], [(3, 3), ['CCM5', 'DPR2']], [(4, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM3', 'PERouter']], [(6, 0), ['CCM6', 'NodeRouter']], [(1, 7), ['CCM3', 'PERouter']], [(6, 5), ['CCM2', 'MCLM1']], [(0, 1), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(3, 8), ['CCM6', 'DPR1']], [(0, 8), ['CCM5', 'DPR2']], [(1, 2), ['CCM1', 49, 7, 'PE1']], [(1, 0), ['CCM3', 'PERouter']], [(0, 2), ['CCM1', 49, 16, 'PE1']], [(0, 3), ['CCM1', 49, 7, 'PE1']], [(1, 3), ['CCM3', 'PERouter']]]
50  --->  [(2, 1), ['CCM5', 'DPR2'], [(3, 3), ['CCM4', '+']], [(5, 1), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 50, 0, 'PE1']], [(1, 7), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 50, 12, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM3', 'PERouter']], [(1, 0), ['CCM1', 50, 9, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(1, 3), ['CCM6', 'NodeRouter']]]
51  --->  [(1, 3), ['CCM1', 51, 0, 'PE1'], [(3, 3), ['CCM5', 'DPR2']], [(5, 1), ['CCM4', '*']], [(0, 0), ['CCM3', 'PERouter']], [(5, 4), ['CCM6', 'DPR1']], [(0, 1), ['CCM3', 'PERouter']], [(2, 8), ['CCM6', 'DPR1']], [(1, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 3), ['CCM6', 'NodeRouter']]]
52  --->  [(1, 3), ['CCM3', 'PERouter'], [(3, 3), ['CCM6', 'DPR1']], [(5, 1), ['CCM5', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 52, 1, 'PE1']], [(0, 6), ['CCM6', 'DPR1']], [(6, 4), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 52, 14, 'PE1']], [(1, 0), ['CCM1', 52, 13, 'PE1']], [(4, 8), ['CCM6', 'DPR1']], [(1, 0), ['CCM6', 'NodeRouter']], [(0, 3), ['CCM1', 52, 18, 'PE1']]]
53  --->  [(1, 3), ['CCM6', 'NodeRouter'], [(3, 3), ['CCM4', '+']], [(3, 5), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(5, 1), ['CCM4', '+']], [(0, 6), ['CCM4', '+']], [(6, 5), ['CCM1', 53, 0, 'PE1']], [(1, 1), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 1), ['CCM1', 53, 0, 'PE1']], [(7, 2), ['CCM6', 'DPR2']], [(1, 2), ['CCM1', 53, 12, 'PE1']], [(0, 3), ['CCM3', 'PERouter']], [(0, 2), ['CCM1', 53, 7, 'PE1']]]
58  --->  [(2, 1), ['CCM6', 'DPR1'], [(3, 4), ['CCM5', 'DPR3']], [(3, 5), ['CCM2', 'MCLM1']], [(0, 0), ['CCM3', 'PERouter']], [(5, 4), ['CCM4', '+']], [(3, 6), ['CCM2', 'MCLM1']], [(6, 2), ['CCM5', 'DPR2']], [(6, 4), ['CCM5', 'DPR3']], [(7, 1), ['CCM6', 'DPR1']], [(0, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 58, 9, 'PE1']], [(0, 9), ['CCM5', 'DPR3']], [(1, 9), ['CCM5', 'DPR2']]]
59  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM2', 'MCLM1']], [(1, 6), ['CCM6', 'DPR2']], [(5, 0), ['CCM6', 'DPR1']], [(5, 1), ['CCM1', 59, 0, 'PE1']], [(5, 5), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(5, 4), ['CCM5', 'DPR3']], [(6, 4), ['CCM2', 'MCLM1']], [(0, 0), ['CCM1', 59, 0, 'PE1']], [(4, 7), ['CCM1', 59, 0, 'PE1']], [(1, 1), ['CCM3', 'PERouter']], [(0, 9), ['CCM2', 'MCLM1']]]
60  --->  [(2, 1), ['CCM5', 'DPR2'], [(1, 6), ['CCM4', '*']], [(3, 5), ['CCM1', 60, 0, 'PE1']], [(5, 1), ['CCM3', 'PERouter']], [(5, 5), ['CCM4', '*']], [(5, 4), ['CCM2', 'MCLM1']], [(6, 3), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(6, 2), ['CCM6', 'DPR1']], [(4, 7), ['CCM3', 'PERouter']], [(7, 2), ['CCM1', 60, 0, 'PE1']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 60, 14, 'PE1']]]
61  --->  [(2, 1), ['CCM4', '+'], [(3, 4), ['CCM1', 61, 0, 'PE1']], [(1, 6), ['CCM5', 'DPR3']], [(5, 0), ['CCM6', 'DPR2']], [(3, 5), ['CCM3', 'PERouter']], [(5, 1), ['CCM6', 'NodeRouter']], [(5, 5), ['CCM5', 'DPR3']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 61, 12, 'PE1']], [(6, 2), ['CCM4', '+']], [(6, 4), ['CCM1', 61, 0, 'PE1']], [(4, 7), ['CCM6', 'NodeRouter']], [(7, 2), ['CCM3', 'PERouter']], [(1, 1), ['CCM3', 'PERouter']], [(7, 6), ['CCM6', 'DPR1']], [(5, 8), ['CCM6', 'DPR1']], [(0, 9), ['CCM1', 61, 0, 'PE1']], [(4, 9), ['CCM6', 'DPR2']]]
62  --->  [(2, 1), ['CCM5', 'DPR3'], [(3, 4), ['CCM3', 'PERouter']], [(1, 6), ['CCM2', 'MCLM1']], [(5, 0), ['CCM4', '*']], [(3, 5), ['CCM6', 'NodeRouter']], [(5, 5), ['CCM2', 'MCLM1']], [(6, 3), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(6, 2), ['CCM5', 'DPR3']], [(6, 4), ['CCM3', 'PERouter']], [(7, 1), ['CCM6', 'DPR2']], [(7, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(0, 9), ['CCM3', 'PERouter']], [(1, 2), ['CCM1', 62, 7, 'PE1']], [(3, 9), ['CCM6', 'DPR1']], [(4, 9), ['CCM4', '*']]]
63  --->  [(2, 1), ['CCM2', 'MCLM1'], [(3, 4), ['CCM6', 'NodeRouter']], [(5, 0), ['CCM5', 'DPR2']], [(3, 6), ['CCM1', 63, 0, 'PE1']], [(6, 3), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(6, 2), ['CCM2', 'MCLM1']], [(6, 4), ['CCM6', 'NodeRouter']], [(7, 1), ['CCM4', '*']], [(0, 0), ['CCM1', 63, 1, 'PE1']], [(0, 9), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM3', 'PERouter']], [(8, 2), ['CCM6', 'DPR1']], [(4, 9), ['CCM5', 'DPR3']]]
56  --->  [(3, 4), ['CCM6', 'DPR1'], [(3, 5), ['CCM4', '*']], [(5, 4), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(3, 6), ['CCM4', '+']], [(6, 2), ['CCM6', 'DPR2']], [(6, 4), ['CCM6', 'DPR2']], [(4, 7), ['CCM5', 'DPR3']], [(5, 6), ['CCM5', 'DPR2']], [(1, 8), ['CCM5', 'DPR2']], [(0, 1), ['CCM1', 56, 14, 'PE1']], [(7, 2), ['CCM2', 'MCLM1']], [(4, 8), ['CCM5', 'DPR2']], [(0, 9), ['CCM6', 'DPR2']], [(1, 3), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(1, 9), ['CCM6', 'DPR2']], [(0, 2), ['CCM3', 'PERouter']]]
57  --->  [(3, 4), ['CCM4', '+'], [(3, 5), ['CCM5', 'DPR3']], [(5, 4), ['CCM5', 'DPR2']], [(0, 0), ['CCM1', 57, 10, 'PE1']], [(3, 6), ['CCM5', 'DPR3']], [(6, 2), ['CCM4', '*']], [(6, 4), ['CCM4', '*']], [(4, 7), ['CCM2', 'MCLM1']], [(0, 1), ['CCM3', 'PERouter']], [(0, 9), ['CCM4', '*']], [(1, 9), ['CCM4', '*']], [(0, 2), ['CCM6', 'NodeRouter']]]
54  --->  [(3, 3), ['CCM5', 'DPR2'], [(0, 0), ['CCM6', 'NodeRouter']], [(5, 1), ['CCM5', 'DPR3']], [(0, 6), ['CCM5', 'DPR2']], [(0, 0), ['CCM1', 54, 0, 'PE1']], [(4, 7), ['CCM6', 'DPR2']], [(5, 6), ['CCM6', 'DPR2']], [(6, 5), ['CCM3', 'PERouter']], [(1, 1), ['CCM6', 'NodeRouter']], [(1, 0), ['CCM6', 'NodeRouter']], [(1, 8), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(7, 2), ['CCM4', '*']], [(1, 2), ['CCM3', 'PERouter']], [(4, 8), ['CCM6', 'DPR2']], [(0, 9), ['CCM6', 'DPR1']], [(1, 3), ['CCM1', 54, 6, 'PE1']], [(1, 0), ['CCM1', 54, 18, 'PE1']], [(0, 3), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM3', 'PERouter']]]
66  --->  [(3, 3), ['CCM6', 'DPR1'], [(1, 6), ['CCM6', 'NodeRouter']], [(5, 3), ['CCM6', 'DPR1']], [(0, 7), ['CCM5', 'DPR2']], [(5, 5), ['CCM6', 'NodeRouter']], [(5, 4), ['CCM6', 'NodeRouter']], [(5, 6), ['CCM4', '+']], [(6, 2), ['CCM3', 'PERouter']], [(3, 8), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(7, 6), ['CCM5', 'DPR3']], [(5, 8), ['CCM5', 'DPR2']], [(0, 1), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 1), ['CCM1', 66, 9, 'PE1']], [(3, 9), ['CCM4', '*']], [(2, 9), ['CCM6', 'DPR1']], [(4, 9), ['CCM1', 66, 0, 'PE1']]]
67  --->  [(3, 3), ['CCM4', '+'], [(5, 6), ['CCM5', 'DPR3']], [(6, 3), ['CCM1', 67, 0, 'PE1']], [(6, 2), ['CCM6', 'NodeRouter']], [(3, 8), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(7, 1), ['CCM1', 67, 0, 'PE1']], [(7, 6), ['CCM2', 'MCLM1']], [(0, 1), ['CCM1', 67, 16, 'PE1']], [(1, 1), ['CCM3', 'PERouter']], [(8, 2), ['CCM6', 'DPR2']], [(3, 9), ['CCM5', 'DPR3']], [(4, 9), ['CCM3', 'PERouter']]]
68  --->  [(3, 3), ['CCM5', 'DPR2'], [(5, 6), ['CCM2', 'MCLM1']], [(6, 3), ['CCM3', 'PERouter']], [(3, 8), ['CCM5', 'DPR3']], [(0, 0), ['CCM1', 68, 0, 'PE1']], [(7, 1), ['CCM3', 'PERouter']], [(7, 7), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(6, 8), ['CCM6', 'DPR2']], [(1, 1), ['CCM6', 'NodeRouter']], [(8, 2), ['CCM4', '*']], [(3, 9), ['CCM2', 'MCLM1']], [(2, 9), ['CCM6', 'DPR2']], [(4, 9), ['CCM6', 'NodeRouter']]]
69  --->  [(3, 3), ['CCM4', '+'], [(5, 3), ['CCM6', 'DPR2']], [(6, 3), ['CCM6', 'NodeRouter']], [(3, 8), ['CCM2', 'MCLM1']], [(6, 7), ['CCM6', 'DPR1']], [(0, 0), ['CCM3', 'PERouter']], [(7, 1), ['CCM6', 'NodeRouter']], [(6, 6), ['CCM6', 'DPR1']], [(7, 7), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(7, 6), ['CCM1', 69, 0, 'PE1']], [(6, 8), ['CCM4', '*']], [(1, 1), ['CCM1', 69, 18, 'PE1']], [(8, 2), ['CCM5', 'DPR3']], [(2, 9), ['CCM4', '*']]]
70  --->  [(3, 3), ['CCM5', 'DPR3'], [(2, 5), ['CCM6', 'DPR1']], [(5, 3), ['CCM4', '*']], [(5, 3), ['CCM6', 'DPR1']], [(6, 1), ['CCM6', 'DPR1']], [(5, 6), ['CCM1', 70, 0, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 70, 1, 'PE1']], [(7, 7), ['CCM5', 'DPR3']], [(7, 6), ['CCM3', 'PERouter']], [(6, 8), ['CCM5', 'DPR3']], [(1, 1), ['CCM3', 'PERouter']], [(8, 2), ['CCM2', 'MCLM1']], [(2, 9), ['CCM5', 'DPR2']], [(3, 9), ['CCM1', 70, 0, 'PE1']]]
71  --->  [(3, 3), ['CCM2', 'MCLM1'], [(2, 5), ['CCM4', '+']], [(5, 0), ['CCM6', 'DPR1']], [(5, 3), ['CCM5', 'DPR2']], [(3, 7), ['CCM6', 'DPR1']], [(5, 6), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']], [(3, 8), ['CCM1', 71, 0, 'PE1']], [(7, 7), ['CCM2', 'MCLM1']], [(7, 4), ['CCM6', 'DPR1']], [(7, 6), ['CCM6', 'NodeRouter']], [(5, 8), ['CCM6', 'DPR1']], [(6, 8), ['CCM2', 'MCLM1']], [(1, 1), ['CCM6', 'NodeRouter']], [(3, 9), ['CCM3', 'PERouter']]]
55  --->  [(3, 5), ['CCM6', 'DPR2'], [(5, 1), ['CCM2', 'MCLM1']], [(5, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(3, 6), ['CCM6', 'DPR1']], [(4, 7), ['CCM4', '*']], [(5, 6), ['CCM4', '*']], [(6, 5), ['CCM6', 'NodeRouter']], [(1, 8), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(7, 2), ['CCM5', 'DPR3']], [(1, 2), ['CCM6', 'NodeRouter']], [(4, 8), ['CCM4', '*']], [(1, 3), ['CCM3', 'PERouter']], [(1, 0), ['CCM3', 'PERouter']], [(0, 2), ['CCM6', 'NodeRouter']], [(0, 2), ['CCM1', 55, 18, 'PE1']]]
64  --->  [(1, 6), ['CCM1', 64, 0, 'PE1'], [(0, 7), ['CCM6', 'DPR1']], [(5, 5), ['CCM1', 64, 0, 'PE1']], [(5, 4), ['CCM1', 64, 0, 'PE1']], [(3, 6), ['CCM3', 'PERouter']], [(6, 3), ['CCM5', 'DPR3']], [(7, 1), ['CCM5', 'DPR3']], [(0, 0), ['CCM3', 'PERouter']], [(7, 7), ['CCM6', 'DPR1']], [(7, 6), ['CCM6', 'DPR2']], [(5, 8), ['CCM6', 'DPR2']], [(0, 1), ['CCM1', 64, 0, 'PE1']], [(1, 2), ['CCM6', 'NodeRouter']], [(1, 2), ['CCM1', 64, 16, 'PE1']], [(4, 9), ['CCM2', 'MCLM1']]]
65  --->  [(1, 6), ['CCM3', 'PERouter'], [(0, 7), ['CCM4', '+']], [(5, 5), ['CCM3', 'PERouter']], [(5, 4), ['CCM3', 'PERouter']], [(3, 6), ['CCM6', 'NodeRouter']], [(6, 3), ['CCM2', 'MCLM1']], [(5, 6), ['CCM6', 'DPR1']], [(6, 2), ['CCM1', 65, 0, 'PE1']], [(7, 1), ['CCM2', 'MCLM1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 65, 1, 'PE1']], [(7, 6), ['CCM4', '*']], [(5, 8), ['CCM4', '*']], [(0, 1), ['CCM3', 'PERouter']], [(1, 2), ['CCM3', 'PERouter']], [(3, 9), ['CCM6', 'DPR2']]]
72  --->  [(2, 5), ['CCM5', 'DPR3'], [(5, 0), ['CCM4', '+']], [(5, 3), ['CCM4', '+']], [(5, 3), ['CCM6', 'DPR1']], [(6, 1), ['CCM6', 'DPR2']], [(3, 7), ['CCM4', '+']], [(5, 6), ['CCM6', 'NodeRouter']], [(6, 7), ['CCM6', 'DPR2']], [(0, 0), ['CCM6', 'NodeRouter']], [(7, 0), ['CCM6', 'DPR1']], [(3, 8), ['CCM3', 'PERouter']], [(0, 0), ['CCM1', 72, 0, 'PE1']], [(5, 8), ['CCM4', '+']], [(8, 2), ['CCM1', 72, 0, 'PE1']], [(3, 9), ['CCM6', 'NodeRouter']]]
73  --->  [(2, 5), ['CCM2', 'MCLM1'], [(5, 0), ['CCM5', 'DPR2']], [(0, 6), ['CCM6', 'DPR1']], [(5, 3), ['CCM5', 'DPR2']], [(6, 1), ['CCM4', '*']], [(3, 7), ['CCM5', 'DPR2']], [(6, 1), ['CCM6', 'DPR1']], [(6, 7), ['CCM4', '*']], [(3, 8), ['CCM6', 'NodeRouter']], [(7, 4), ['CCM6', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(5, 8), ['CCM5', 'DPR3']], [(8, 2), ['CCM3', 'PERouter']]]
74  --->  [(0, 6), ['CCM4', '+'], [(5, 3), ['CCM4', '+']], [(6, 1), ['CCM5', 'DPR2']], [(7, 0), ['CCM6', 'DPR2']], [(6, 7), ['CCM5', 'DPR3']], [(7, 4), ['CCM4', '*']], [(0, 0), ['CCM6', 'NodeRouter']], [(5, 8), ['CCM2', 'MCLM1']], [(8, 3), ['CCM6', 'DPR1']], [(8, 2), ['CCM6', 'NodeRouter']]]
75  --->  [(0, 6), ['CCM5', 'DPR3'], [(2, 5), ['CCM1', 75, 0, 'PE1']], [(5, 3), ['CCM5', 'DPR2']], [(6, 1), ['CCM4', '+']], [(7, 0), ['CCM4', '*']], [(6, 7), ['CCM2', 'MCLM1']], [(7, 4), ['CCM5', 'DPR2']], [(0, 0), ['CCM1', 75, 16, 'PE1']], [(7, 7), ['CCM1', 75, 0, 'PE1']], [(6, 8), ['CCM1', 75, 0, 'PE1']], [(2, 9), ['CCM6', 'DPR1']]]
76  --->  [(0, 6), ['CCM2', 'MCLM1'], [(2, 5), ['CCM3', 'PERouter']], [(0, 7), ['CCM6', 'DPR1']], [(6, 1), ['CCM5', 'DPR2']], [(7, 0), ['CCM5', 'DPR2']], [(0, 0), ['CCM3', 'PERouter']], [(7, 7), ['CCM3', 'PERouter']], [(5, 8), ['CCM1', 76, 0, 'PE1']], [(6, 8), ['CCM3', 'PERouter']], [(8, 3), ['CCM6', 'DPR2']], [(2, 9), ['CCM4', '+']]]
77  --->  [(2, 5), ['CCM6', 'NodeRouter'], [(0, 7), ['CCM4', '+']], [(3, 7), ['CCM6', 'DPR1']], [(7, 0), ['CCM4', '+']], [(6, 7), ['CCM1', 77, 0, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(7, 7), ['CCM6', 'NodeRouter']], [(5, 8), ['CCM3', 'PERouter']], [(6, 8), ['CCM6', 'NodeRouter']], [(8, 3), ['CCM4', '*']], [(8, 1), ['CCM6', 'DPR1']], [(0, 0), ['CCM1', 77, 0, 'PE1']], [(2, 9), ['CCM5', 'DPR3']]]
87  --->  [(5, 0), ['CCM6', 'DPR1'], [(6, 6), ['CCM4', '*']], [(7, 5), ['CCM1', 87, 0, 'PE1']], [(7, 4), ['CCM1', 87, 0, 'PE1']], [(7, 3), ['CCM6', 'DPR1']], [(8, 1), ['CCM6', 'DPR1']], [(2, 9), ['CCM1', 87, 0, 'PE1']]]
88  --->  [(5, 0), ['CCM4', '+'], [(6, 6), ['CCM5', 'DPR2']], [(7, 5), ['CCM3', 'PERouter']], [(7, 4), ['CCM3', 'PERouter']], [(8, 1), ['CCM4', '+']], [(2, 9), ['CCM3', 'PERouter']]]
89  --->  [(5, 0), ['CCM5', 'DPR2'], [(1, 8), ['CCM6', 'DPR1']], [(6, 6), ['CCM4', '+']], [(7, 3), ['CCM6', 'DPR2']], [(7, 5), ['CCM6', 'NodeRouter']], [(7, 4), ['CCM6', 'NodeRouter']], [(8, 0), ['CCM6', 'DPR1']], [(8, 1), ['CCM5', 'DPR3']], [(2, 9), ['CCM6', 'NodeRouter']]]
78  --->  [(0, 6), ['CCM1', 78, 0, 'PE1'], [(0, 7), ['CCM5', 'DPR3']], [(3, 7), ['CCM4', '+']], [(7, 0), ['CCM5', 'DPR3']], [(0, 8), ['CCM6', 'DPR1']], [(6, 7), ['CCM3', 'PERouter']], [(4, 8), ['CCM6', 'DPR1']], [(5, 8), ['CCM6', 'NodeRouter']], [(8, 3), ['CCM5', 'DPR3']], [(0, 0), ['CCM3', 'PERouter']], [(2, 9), ['CCM2', 'MCLM1']]]
79  --->  [(0, 6), ['CCM3', 'PERouter'], [(0, 7), ['CCM2', 'MCLM1']], [(3, 7), ['CCM5', 'DPR3']], [(2, 8), ['CCM6', 'DPR2']], [(7, 0), ['CCM2', 'MCLM1']], [(0, 8), ['CCM4', '+']], [(6, 7), ['CCM6', 'NodeRouter']], [(7, 5), ['CCM6', 'DPR1']], [(4, 8), ['CCM4', '+']], [(8, 3), ['CCM2', 'MCLM1']], [(0, 1), ['CCM1', 79, 0, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(0, 0), ['CCM1', 79, 18, 'PE1']]]
80  --->  [(0, 6), ['CCM6', 'NodeRouter'], [(3, 7), ['CCM2', 'MCLM1']], [(6, 1), ['CCM6', 'DPR1']], [(2, 8), ['CCM4', '*']], [(0, 8), ['CCM5', 'DPR2']], [(4, 8), ['CCM5', 'DPR2']], [(8, 1), ['CCM6', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(0, 0), ['CCM3', 'PERouter']]]
93  --->  [(5, 0), ['CCM6', 'DPR1'], [(7, 3), ['CCM6', 'DPR1']], [(8, 0), ['CCM5', 'DPR2']], [(8, 1), ['CCM3', 'PERouter']]]
94  --->  [(5, 0), ['CCM4', '+'], [(5, 3), ['CCM6', 'DPR1']], [(1, 8), ['CCM1', 94, 0, 'PE1']], [(7, 3), ['CCM4', '+']], [(8, 1), ['CCM6', 'NodeRouter']]]
95  --->  [(5, 0), ['CCM5', 'DPR2'], [(5, 3), ['CCM4', '+']], [(6, 1), ['CCM6', 'DPR1']], [(1, 8), ['CCM3', 'PERouter']], [(7, 3), ['CCM5', 'DPR2']]]
96  --->  [(5, 0), ['CCM4', '+'], [(5, 3), ['CCM5', 'DPR2']], [(6, 1), ['CCM4', '+']], [(1, 8), ['CCM6', 'NodeRouter']], [(7, 3), ['CCM4', '+']]]
97  --->  [(5, 0), ['CCM5', 'DPR3'], [(5, 3), ['CCM4', '+']], [(6, 1), ['CCM5', 'DPR2']], [(7, 3), ['CCM5', 'DPR2']], [(7, 8), ['CCM6', 'DPR1']]]
98  --->  [(5, 0), ['CCM2', 'MCLM1'], [(5, 3), ['CCM5', 'DPR3']], [(6, 1), ['CCM4', '+']], [(4, 8), ['CCM6', 'DPR1']]]
81  --->  [(0, 7), ['CCM1', 81, 0, 'PE1'], [(6, 1), ['CCM4', '+']], [(2, 8), ['CCM5', 'DPR3']], [(7, 0), ['CCM1', 81, 0, 'PE1']], [(8, 1), ['CCM4', '*']], [(0, 1), ['CCM6', 'NodeRouter']], [(0, 1), ['CCM1', 81, 18, 'PE1']], [(0, 0), ['CCM6', 'NodeRouter']], [(8, 3), ['CCM1', 81, 0, 'PE1']]]
82  --->  [(0, 7), ['CCM3', 'PERouter'], [(6, 1), ['CCM5', 'DPR2']], [(3, 7), ['CCM1', 82, 0, 'PE1']], [(2, 8), ['CCM2', 'MCLM1']], [(6, 6), ['CCM6', 'DPR1']], [(7, 0), ['CCM3', 'PERouter']], [(7, 5), ['CCM6', 'DPR2']], [(7, 4), ['CCM6', 'DPR1']], [(8, 1), ['CCM5', 'DPR2']], [(0, 1), ['CCM3', 'PERouter']], [(8, 3), ['CCM3', 'PERouter']]]
83  --->  [(0, 7), ['CCM6', 'NodeRouter'], [(3, 7), ['CCM3', 'PERouter']], [(7, 0), ['CCM6', 'NodeRouter']], [(7, 5), ['CCM4', '*']], [(7, 4), ['CCM4', '+']], [(0, 1), ['CCM6', 'NodeRouter']], [(8, 3), ['CCM6', 'NodeRouter']], [(8, 0), ['CCM6', 'DPR1']]]
99  --->  [(5, 3), ['CCM2', 'MCLM1'], [(6, 1), ['CCM5', 'DPR3']], [(4, 8), ['CCM4', '+']], [(7, 8), ['CCM6', 'DPR2']]]
84  --->  [(3, 7), ['CCM6', 'NodeRouter'], [(6, 6), ['CCM6', 'DPR1']], [(2, 8), ['CCM1', 84, 0, 'PE1']], [(7, 5), ['CCM5', 'DPR3']], [(7, 4), ['CCM5', 'DPR3']]]
100  --->  [(6, 1), ['CCM2', 'MCLM1'], [(0, 8), ['CCM6', 'DPR1']], [(4, 8), ['CCM5', 'DPR3']], [(7, 8), ['CCM4', '*']]]
86  --->  [(6, 6), ['CCM6', 'DPR2'], [(2, 8), ['CCM6', 'NodeRouter']], [(7, 3), ['CCM6', 'DPR1']]]
85  --->  [(2, 8), ['CCM3', 'PERouter'], [(7, 5), ['CCM2', 'MCLM1']], [(7, 4), ['CCM2', 'MCLM1']], [(7, 3), ['CCM6', 'DPR1']]]
90  --->  [(1, 8), ['CCM4', '+'], [(6, 6), ['CCM5', 'DPR2']], [(7, 3), ['CCM4', '*']], [(8, 1), ['CCM2', 'MCLM1']], [(1, 9), ['CCM6', 'DPR1']]]
91  --->  [(1, 8), ['CCM5', 'DPR3'], [(7, 3), ['CCM5', 'DPR2']], [(8, 0), ['CCM6', 'DPR2']], [(1, 9), ['CCM4', '+']]]
92  --->  [(1, 8), ['CCM2', 'MCLM1'], [(8, 0), ['CCM4', '*']], [(1, 9), ['CCM5', 'DPR2']], [(8, 1), ['CCM1', 92, 0, 'PE1']]]
101  --->  [(0, 8), ['CCM4', '+'], [(4, 8), ['CCM2', 'MCLM1']], [(7, 8), ['CCM5', 'DPR3']]]
102  --->  [(0, 8), ['CCM5', 'DPR3'], [(7, 8), ['CCM2', 'MCLM1']]]
103  --->  [(0, 8), ['CCM2', 'MCLM1'], [(4, 8), ['CCM1', 103, 0, 'PE1']]]
105  --->  [(6, 6), ['CCM6', 'DPR1'], [(0, 8), ['CCM1', 105, 0, 'PE1']], [(4, 8), ['CCM6', 'NodeRouter']], [(7, 8), ['CCM3', 'PERouter']]]
106  --->  [(6, 6), ['CCM4', '+'], [(0, 8), ['CCM3', 'PERouter']], [(7, 8), ['CCM6', 'NodeRouter']], [(8, 0), ['CCM6', 'DPR1']]]
107  --->  [(6, 6), ['CCM5', 'DPR2'], [(0, 8), ['CCM6', 'NodeRouter']]]
117  --->  [(6, 6), ['CCM6', 'DPR1'], [(7, 3), ['CCM5', 'DPR2']], [(8, 0), ['CCM6', 'DPR1']], [(1, 9), ['CCM3', 'PERouter']]]
118  --->  [(6, 6), ['CCM4', '+'], [(7, 3), ['CCM4', '+']], [(8, 0), ['CCM4', '+']], [(1, 9), ['CCM6', 'NodeRouter']]]
119  --->  [(6, 6), ['CCM5', 'DPR2'], [(7, 3), ['CCM5', 'DPR3']], [(8, 0), ['CCM5', 'DPR2']]]
120  --->  [(6, 6), ['CCM4', '+'], [(7, 3), ['CCM2', 'MCLM1']], [(8, 0), ['CCM4', '+']]]
121  --->  [(6, 6), ['CCM5', 'DPR3'], [(8, 0), ['CCM5', 'DPR2']]]
122  --->  [(6, 6), ['CCM2', 'MCLM1']]
104  --->  [(4, 8), ['CCM3', 'PERouter'], [(7, 8), ['CCM1', 104, 0, 'PE1']]]
115  --->  [(7, 3), ['CCM6', 'DPR1']]
116  --->  [(7, 3), ['CCM4', '+'], [(1, 9), ['CCM1', 116, 0, 'PE1']]]
111  --->  [(1, 9), ['CCM6', 'DPR1']]
112  --->  [(1, 9), ['CCM4', '+']]
113  --->  [(1, 9), ['CCM5', 'DPR3']]
114  --->  [(1, 9), ['CCM2', 'MCLM1']]
136  --->  [(8, 0), ['CCM6', 'DPR1']]
137  --->  [(8, 0), ['CCM4', '+']]
138  --->  [(8, 0), ['CCM5', 'DPR2']]
139  --->  [(8, 0), ['CCM4', '+']]
140  --->  [(8, 0), ['CCM5', 'DPR3']]
141  --->  [(8, 0), ['CCM2', 'MCLM1']]

Router scheds and CCM commands:
4  --->  [(0, 1), (0, 2), [(2, 2), (3, 2)], [(2, 3), (2, 4)]]
5  --->  [(0, 1), (0, 3), [(1, 2), (1, 1)], [(2, 3), (2, 5)]]
6  --->  [(1, 0), (1, 1), [(2, 3), (2, 6)], [(2, 3), (2, 4)]]
8  --->  [(1, 1), (1, 0), [(2, 0), (3, 0)], [(1, 2), (1, 3)], [(2, 3), (2, 6)], [(2, 3), (3, 3)]]
16  --->  [(2, 1), (2, 2), [(1, 4), (2, 4)], [(1, 2), (3, 2)], [(2, 2), (4, 2)], [(2, 3), (5, 6)], [(2, 3), (6, 3)]]
17  --->  [(2, 1), (2, 3), [(1, 1), (1, 0)], [(2, 0), (3, 0)], [(1, 2), (4, 2)], [(1, 2), (2, 2)], [(1, 0), (2, 0)], [(2, 2), (4, 3)], [(2, 3), (5, 7)], [(2, 3), (6, 4)]]
18  --->  [(2, 1), (1, 3), [(1, 1), (0, 0)], [(1, 4), (2, 4)], [(1, 3), (2, 3)], [(1, 2), (3, 2)], [(1, 0), (3, 0)], [(2, 2), (4, 4)], [(2, 3), (6, 5)]]
19  --->  [(2, 1), (0, 3), [(2, 1), (3, 1)], [(1, 1), (2, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(1, 2), (4, 2)], [(0, 1), (0, 2)], [(1, 0), (4, 0)], [(2, 2), (4, 5)], [(2, 2), (3, 2)], [(2, 3), (6, 6)]]
14  --->  [(0, 3), (0, 2), [(2, 1), (3, 1)], [(1, 2), (1, 4)], [(2, 3), (5, 7)], [(2, 3), (5, 4)], [(2, 3), (4, 3)]]
40  --->  [(0, 1), (0, 0), [(3, 1), (3, 2)], [(1, 0), (3, 1)], [(1, 0), (2, 0)], [(2, 1), (5, 4)], [(1, 3), (1, 7)], [(2, 2), (6, 2)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(1, 2), (5, 2)], [(2, 0), (3, 0)], [(2, 2), (4, 2)], [(1, 4), (1, 8)], [(2, 3), (4, 5)]]
11  --->  [(1, 4), (2, 4), [(1, 1), (2, 2)], [(2, 3), (5, 4)], [(2, 3), (3, 3)]]
9  --->  [(1, 2), (1, 4), [(2, 3), (2, 7)], [(2, 3), (4, 3)]]
13  --->  [(1, 2), (1, 3), [(2, 2), (3, 2)], [(2, 3), (5, 6)], [(2, 3), (5, 3)], [(2, 3), (3, 3)]]
10  --->  [(1, 1), (2, 1), [(2, 3), (5, 3)]]
27  --->  [(1, 0), (2, 0), [(2, 3), (1, 3)], [(2, 1), (4, 3)], [(2, 1), (4, 1)], [(2, 0), (4, 0)], [(1, 4), (2, 5)], [(0, 4), (0, 5)], [(1, 2), (2, 2)], [(2, 2), (4, 2)], [(1, 2), (3, 6)], [(1, 2), (3, 4)]]
28  --->  [(1, 0), (2, 1), [(2, 1), (5, 1)], [(2, 0), (5, 0)], [(1, 4), (2, 6)], [(0, 4), (0, 6)], [(1, 2), (2, 3)], [(2, 2), (4, 3)], [(1, 2), (3, 5)], [(6, 7), (6, 6)]]
29  --->  [(1, 0), (2, 2), [(1, 0), (2, 0)], [(1, 1), (2, 1)], [(2, 1), (5, 2)], [(2, 0), (5, 1)], [(1, 2), (2, 4)], [(2, 2), (4, 4)], [(2, 2), (3, 2)], [(0, 5), (0, 6)], [(1, 2), (3, 6)], [(6, 7), (6, 5)], [(1, 2), (1, 3)]]
20  --->  [(1, 1), (2, 2), [(1, 4), (4, 4)], [(1, 4), (2, 4)], [(1, 3), (3, 4)], [(1, 3), (2, 3)], [(0, 1), (0, 3)], [(1, 0), (4, 1)], [(3, 7), (4, 7)], [(2, 2), (4, 2)], [(2, 3), (6, 7)]]
21  --->  [(1, 1), (2, 3), [(2, 1), (3, 1)], [(1, 4), (3, 4)], [(1, 3), (3, 3)], [(0, 1), (0, 4)], [(1, 3), (1, 4)], [(3, 7), (5, 7)], [(2, 2), (5, 2)], [(2, 3), (6, 8)]]
30  --->  [(1, 0), (2, 1), [(1, 1), (3, 1)], [(4, 3), (4, 4)], [(1, 2), (2, 5)], [(2, 2), (4, 5)], [(2, 2), (4, 2)], [(0, 5), (0, 7)], [(6, 7), (6, 4)], [(1, 2), (1, 4)]]
31  --->  [(1, 0), (2, 2), [(1, 1), (4, 1)], [(4, 3), (4, 5)], [(2, 2), (4, 3)], [(2, 2), (3, 2)], [(2, 0), (3, 0)], [(6, 7), (6, 3)], [(1, 2), (1, 5)]]
32  --->  [(1, 0), (2, 3), [(4, 3), (3, 5)], [(2, 1), (3, 1)], [(1, 3), (1, 4)], [(1, 2), (2, 2)], [(2, 2), (4, 4)], [(2, 2), (4, 2)], [(2, 0), (4, 0)], [(1, 1), (2, 1)], [(1, 4), (2, 4)], [(6, 7), (6, 2)], [(1, 2), (1, 6)]]
34  --->  [(1, 0), (2, 0), [(4, 3), (1, 5)], [(2, 1), (5, 1)], [(2, 0), (2, 2)], [(1, 3), (1, 6)], [(1, 2), (2, 4)], [(2, 2), (4, 6)], [(2, 2), (4, 4)], [(2, 0), (6, 0)], [(1, 1), (4, 1)], [(1, 4), (3, 5)], [(0, 5), (0, 6)], [(1, 2), (1, 8)]]
35  --->  [(1, 0), (2, 1), [(4, 3), (0, 5)], [(2, 1), (5, 2)], [(2, 0), (2, 3)], [(1, 2), (2, 5)], [(2, 2), (4, 5)], [(2, 1), (3, 1)], [(1, 3), (1, 4)], [(1, 1), (5, 1)], [(1, 4), (3, 6)], [(0, 5), (0, 7)]]
36  --->  [(1, 0), (2, 0), [(2, 0), (2, 4)], [(2, 2), (4, 6)], [(2, 1), (4, 1)], [(2, 0), (3, 0)], [(1, 3), (1, 5)], [(1, 1), (5, 2)], [(1, 4), (3, 7)], [(0, 5), (0, 8)]]
37  --->  [(1, 0), (2, 1), [(2, 5), (3, 5)], [(2, 0), (2, 5)], [(2, 1), (5, 1)], [(2, 0), (4, 0)], [(1, 3), (1, 6)], [(1, 3), (1, 4)], [(1, 1), (5, 3)], [(2, 2), (3, 2)], [(1, 2), (2, 2)], [(1, 4), (1, 5)], [(2, 3), (3, 3)]]
25  --->  [(2, 4), (2, 3), [(2, 1), (4, 1)], [(2, 0), (4, 0)], [(0, 2), (0, 4)], [(1, 3), (1, 5)], [(0, 5), (0, 7)], [(1, 2), (3, 4)], [(1, 2), (3, 2)], [(3, 7), (5, 3)], [(2, 2), (6, 5)]]
26  --->  [(2, 4), (2, 2), [(2, 1), (4, 2)], [(0, 2), (0, 5)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(1, 4), (2, 4)], [(2, 2), (3, 2)], [(1, 2), (3, 5)], [(1, 2), (3, 3)]]
43  --->  [(2, 2), (2, 1), [(3, 1), (1, 3)], [(1, 0), (3, 2)], [(4, 2), (3, 3)], [(1, 0), (2, 0)], [(5, 5), (5, 2)], [(2, 2), (6, 5)], [(2, 1), (5, 1)], [(2, 0), (4, 0)], [(1, 4), (3, 7)], [(1, 3), (4, 5)], [(1, 2), (5, 5)], [(2, 0), (6, 0)], [(1, 4), (3, 5)], [(0, 4), (0, 7)], [(1, 3), (2, 3)], [(2, 2), (7, 2)], [(1, 4), (2, 4)], [(2, 3), (4, 8)]]
41  --->  [(3, 1), (3, 3), [(1, 0), (3, 2)], [(1, 0), (3, 0)], [(5, 5), (5, 4)], [(2, 2), (6, 3)], [(2, 1), (3, 1)], [(1, 4), (3, 5)], [(1, 3), (4, 3)], [(1, 2), (5, 3)], [(2, 0), (4, 0)], [(1, 4), (2, 4)], [(0, 4), (0, 5)], [(2, 2), (5, 2)], [(1, 4), (1, 9)], [(2, 3), (4, 6)]]
42  --->  [(3, 1), (2, 3), [(1, 0), (3, 3)], [(1, 0), (3, 1)], [(4, 2), (4, 3)], [(5, 5), (5, 3)], [(2, 2), (6, 4)], [(2, 1), (4, 1)], [(2, 0), (3, 0)], [(1, 4), (3, 6)], [(1, 3), (4, 4)], [(1, 2), (5, 4)], [(2, 0), (5, 0)], [(1, 4), (3, 4)], [(0, 4), (0, 6)], [(2, 2), (6, 2)], [(2, 3), (4, 7)]]
54  --->  [(2, 3), (2, 2), [(1, 0), (1, 4)], [(1, 0), (3, 0)], [(1, 1), (5, 3)], [(6, 1), (6, 6)], [(1, 1), (5, 1)], [(1, 1), (3, 1)], [(2, 1), (6, 1)], [(2, 2), (5, 2)], [(2, 0), (7, 2)], [(2, 0), (6, 0)], [(1, 2), (5, 4)], [(1, 2), (4, 2)], [(2, 0), (4, 0)], [(1, 3), (3, 4)], [(2, 3), (4, 5)]]
55  --->  [(2, 3), (2, 1), [(1, 0), (1, 5)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(1, 1), (5, 4)], [(6, 1), (6, 7)], [(1, 1), (6, 1)], [(1, 1), (4, 1)], [(2, 1), (7, 1)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(2, 2), (6, 2)], [(2, 0), (7, 3)], [(2, 0), (7, 0)], [(1, 2), (5, 5)], [(1, 2), (5, 2)], [(2, 0), (5, 0)], [(1, 3), (3, 5)], [(1, 3), (2, 3)], [(2, 3), (4, 6)]]
24  --->  [(3, 1), (2, 1), [(2, 1), (4, 3)], [(2, 1), (3, 1)], [(2, 0), (3, 0)], [(0, 2), (0, 3)], [(1, 3), (1, 4)], [(0, 5), (0, 6)], [(1, 2), (3, 3)], [(1, 2), (2, 2)], [(3, 7), (5, 4)], [(2, 2), (6, 4)]]
22  --->  [(2, 1), (4, 1), [(2, 0), (3, 0)], [(1, 4), (4, 4)], [(1, 3), (3, 4)], [(0, 1), (0, 5)], [(1, 3), (1, 5)], [(0, 5), (0, 6)], [(1, 2), (2, 2)], [(3, 7), (5, 6)], [(2, 2), (6, 2)]]
23  --->  [(2, 1), (4, 2), [(2, 0), (4, 0)], [(1, 2), (3, 2)], [(3, 7), (5, 5)], [(2, 2), (6, 3)]]
15  --->  [(1, 2), (2, 2), [(2, 2), (3, 2)], [(2, 3), (5, 5)], [(2, 3), (5, 3)]]
38  --->  [(1, 0), (2, 0), [(4, 2), (4, 1)], [(2, 5), (3, 4)], [(2, 0), (2, 6)], [(2, 1), (5, 2)], [(2, 0), (5, 0)], [(1, 3), (1, 7)], [(1, 3), (1, 5)], [(1, 1), (5, 4)], [(2, 2), (4, 2)], [(1, 2), (3, 2)], [(1, 4), (1, 6)], [(2, 3), (4, 3)]]
39  --->  [(1, 0), (3, 0), [(4, 2), (4, 0)], [(2, 5), (3, 3)], [(2, 1), (5, 3)], [(2, 0), (6, 0)], [(1, 3), (1, 6)], [(1, 1), (5, 5)], [(2, 2), (5, 2)], [(1, 4), (2, 4)], [(1, 3), (2, 3)], [(1, 2), (4, 2)], [(2, 2), (3, 2)], [(1, 4), (1, 7)], [(2, 3), (4, 4)]]
44  --->  [(1, 0), (3, 3), [(1, 0), (3, 0)], [(5, 5), (5, 1)], [(2, 1), (6, 1)], [(2, 0), (5, 0)], [(1, 3), (4, 6)], [(1, 2), (5, 6)], [(1, 2), (2, 2)], [(2, 0), (7, 0)], [(1, 4), (3, 6)], [(0, 4), (0, 8)], [(1, 3), (2, 4)], [(1, 4), (3, 4)], [(2, 3), (4, 9)]]
33  --->  [(4, 3), (2, 5), [(2, 1), (4, 1)], [(2, 0), (2, 1)], [(1, 3), (1, 5)], [(1, 2), (2, 3)], [(2, 2), (4, 5)], [(2, 2), (4, 3)], [(2, 0), (5, 0)], [(1, 1), (3, 1)], [(1, 4), (3, 4)], [(6, 7), (6, 1)], [(1, 2), (1, 7)]]
50  --->  [(4, 1), (4, 2), [(1, 1), (3, 5)], [(1, 1), (3, 3)], [(2, 1), (5, 2)], [(1, 1), (3, 1)], [(6, 1), (6, 2)], [(2, 1), (4, 1)], [(2, 0), (6, 1)], [(1, 3), (4, 6)], [(1, 2), (5, 5)], [(1, 2), (1, 7)], [(2, 2), (7, 2)], [(2, 0), (5, 0)], [(1, 4), (4, 7)], [(0, 4), (0, 8)], [(0, 4), (0, 6)], [(1, 2), (3, 2)], [(1, 4), (1, 6)]]
51  --->  [(4, 1), (4, 3), [(1, 0), (1, 1)], [(1, 1), (3, 4)], [(2, 1), (5, 3)], [(1, 1), (4, 1)], [(6, 1), (6, 3)], [(2, 7), (3, 7)], [(2, 1), (5, 1)], [(2, 0), (6, 2)], [(1, 3), (4, 7)], [(1, 2), (5, 6)], [(1, 1), (2, 1)], [(2, 1), (3, 1)], [(1, 2), (1, 8)], [(2, 0), (6, 0)], [(2, 0), (3, 0)], [(1, 4), (4, 8)], [(0, 4), (0, 9)], [(0, 4), (0, 7)], [(1, 2), (4, 2)], [(1, 4), (1, 7)], [(2, 3), (3, 3)]]
52  --->  [(4, 1), (4, 4), [(1, 0), (1, 2)], [(1, 1), (3, 5)], [(2, 1), (5, 4)], [(1, 1), (5, 1)], [(6, 1), (6, 4)], [(2, 7), (3, 6)], [(2, 1), (6, 1)], [(2, 0), (6, 3)], [(1, 1), (3, 1)], [(2, 1), (4, 1)], [(2, 2), (3, 2)], [(2, 0), (7, 0)], [(2, 0), (4, 0)], [(0, 4), (0, 8)], [(1, 2), (5, 2)], [(1, 2), (2, 2)], [(1, 4), (1, 8)], [(1, 3), (2, 3)], [(2, 3), (4, 3)]]
53  --->  [(4, 1), (3, 4), [(1, 0), (1, 3)], [(1, 0), (2, 0)], [(1, 1), (5, 2)], [(6, 1), (6, 5)], [(2, 1), (6, 2)], [(2, 0), (6, 4)], [(1, 1), (4, 1)], [(1, 1), (2, 1)], [(2, 1), (5, 1)], [(2, 2), (4, 2)], [(2, 0), (7, 1)], [(2, 0), (5, 0)], [(0, 4), (0, 9)], [(1, 2), (5, 3)], [(1, 2), (3, 2)], [(2, 0), (3, 0)], [(1, 4), (1, 9)], [(1, 3), (3, 3)], [(2, 3), (4, 4)]]
46  --->  [(1, 5), (2, 5), [(1, 0), (5, 0)], [(1, 1), (3, 1)], [(2, 0), (6, 1)], [(2, 0), (3, 0)], [(1, 3), (3, 3)], [(1, 2), (4, 2)], [(1, 4), (3, 8)], [(1, 3), (2, 6)], [(1, 2), (1, 3)], [(2, 2), (3, 2)], [(1, 4), (4, 5)], [(1, 4), (3, 4)]]
47  --->  [(1, 5), (3, 5), [(1, 0), (5, 1)], [(1, 1), (3, 2)], [(1, 1), (2, 1)], [(2, 1), (3, 1)], [(5, 6), (5, 5)], [(2, 0), (6, 2)], [(2, 0), (4, 0)], [(1, 3), (4, 3)], [(1, 2), (5, 2)], [(1, 3), (2, 7)], [(1, 2), (1, 4)], [(2, 2), (4, 2)], [(1, 4), (4, 6)], [(1, 4), (4, 4)], [(0, 4), (0, 5)]]
48  --->  [(1, 5), (3, 4), [(1, 1), (3, 3)], [(1, 1), (3, 1)], [(2, 1), (4, 1)], [(5, 6), (5, 4)], [(2, 0), (6, 3)], [(2, 0), (5, 0)], [(1, 3), (4, 4)], [(1, 2), (5, 3)], [(1, 3), (2, 8)], [(1, 2), (1, 5)], [(2, 2), (5, 2)], [(2, 0), (3, 0)], [(1, 4), (4, 7)], [(1, 4), (4, 5)], [(0, 4), (0, 6)]]
49  --->  [(1, 5), (3, 3), [(1, 1), (3, 4)], [(1, 1), (3, 2)], [(1, 6), (0, 6)], [(2, 1), (5, 1)], [(1, 1), (2, 1)], [(2, 1), (3, 1)], [(2, 0), (6, 4)], [(2, 0), (6, 0)], [(1, 3), (4, 5)], [(1, 2), (5, 4)], [(1, 2), (1, 6)], [(2, 2), (6, 2)], [(2, 0), (4, 0)], [(1, 4), (4, 8)], [(1, 4), (4, 6)], [(0, 4), (0, 7)], [(0, 4), (0, 5)], [(1, 2), (2, 2)], [(1, 4), (1, 5)]]
45  --->  [(1, 0), (4, 0), [(1, 1), (2, 1)], [(5, 5), (5, 0)], [(2, 1), (6, 2)], [(2, 0), (6, 0)], [(1, 3), (4, 7)], [(1, 3), (2, 3)], [(1, 2), (3, 2)], [(1, 4), (3, 7)], [(1, 3), (2, 5)], [(1, 4), (4, 4)], [(1, 4), (2, 4)]]
56  --->  [(1, 0), (1, 6), [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(1, 1), (5, 5)], [(6, 1), (5, 7)], [(1, 1), (6, 2)], [(1, 1), (5, 1)], [(6, 4), (6, 3)], [(2, 1), (4, 1)], [(2, 0), (3, 1)], [(1, 1), (2, 1)], [(2, 2), (7, 2)], [(2, 2), (3, 2)], [(2, 0), (7, 4)], [(2, 0), (7, 1)], [(1, 2), (5, 6)], [(1, 2), (5, 3)], [(2, 0), (6, 0)], [(1, 3), (3, 6)], [(1, 3), (3, 3)], [(1, 2), (2, 2)], [(2, 3), (4, 7)]]
57  --->  [(1, 0), (4, 0), [(1, 0), (2, 0)], [(6, 1), (4, 7)], [(1, 1), (6, 3)], [(1, 1), (6, 1)], [(6, 4), (6, 2)], [(2, 1), (5, 1)], [(2, 0), (3, 2)], [(1, 1), (3, 1)], [(2, 2), (7, 3)], [(2, 2), (4, 2)], [(2, 0), (7, 5)], [(2, 0), (7, 2)], [(1, 2), (5, 7)], [(1, 2), (5, 4)], [(2, 3), (3, 3)], [(2, 0), (7, 0)], [(2, 0), (3, 0)], [(1, 3), (3, 7)], [(1, 3), (3, 4)], [(1, 2), (2, 3)], [(2, 3), (4, 8)]]
58  --->  [(1, 0), (5, 0), [(1, 0), (3, 0)], [(6, 1), (3, 7)], [(1, 1), (6, 2)], [(2, 1), (6, 1)], [(2, 0), (3, 3)], [(1, 1), (4, 1)], [(2, 2), (7, 4)], [(2, 2), (5, 2)], [(2, 0), (7, 6)], [(2, 0), (7, 3)], [(1, 2), (5, 8)], [(1, 2), (5, 5)], [(2, 3), (4, 3)], [(2, 0), (8, 0)], [(2, 0), (4, 0)], [(1, 3), (3, 8)], [(1, 3), (3, 5)], [(1, 2), (2, 4)], [(1, 2), (2, 2)], [(2, 3), (4, 9)]]
67  --->  [(2, 6), (2, 5), [(4, 5), (5, 1)], [(5, 2), (3, 6)], [(5, 4), (5, 3)], [(5, 5), (5, 6)], [(4, 6), (5, 5)], [(1, 0), (6, 1)], [(1, 0), (5, 0)], [(6, 5), (4, 7)], [(1, 0), (3, 0)], [(1, 1), (6, 5)], [(2, 1), (7, 3)], [(2, 1), (7, 1)], [(1, 1), (2, 1)], [(1, 9), (5, 9)], [(2, 2), (5, 2)], [(2, 2), (3, 2)]]
63  --->  [(4, 5), (5, 5), [(5, 2), (5, 4)], [(1, 0), (5, 3)], [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(2, 0), (3, 8)], [(1, 1), (6, 4)], [(1, 1), (6, 1)], [(7, 3), (7, 4)], [(2, 2), (7, 5)], [(2, 1), (5, 1)], [(2, 1), (3, 1)], [(2, 3), (6, 6)], [(2, 0), (8, 1)], [(1, 2), (2, 9)], [(1, 2), (2, 7)]]
64  --->  [(4, 5), (5, 4), [(5, 2), (5, 5)], [(1, 0), (5, 1)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(6, 5), (6, 6)], [(1, 1), (6, 5)], [(1, 1), (6, 2)], [(7, 3), (7, 5)], [(2, 2), (7, 6)], [(2, 1), (6, 1)], [(2, 1), (4, 1)], [(1, 9), (2, 9)], [(2, 3), (6, 7)], [(2, 0), (8, 2)], [(1, 2), (2, 8)]]
65  --->  [(4, 5), (5, 3), [(5, 2), (5, 6)], [(1, 0), (5, 2)], [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(6, 5), (6, 7)], [(1, 1), (6, 6)], [(1, 1), (6, 3)], [(7, 3), (7, 6)], [(2, 2), (7, 7)], [(2, 1), (7, 1)], [(2, 1), (5, 1)], [(1, 9), (3, 9)], [(2, 3), (6, 8)], [(2, 2), (3, 2)], [(1, 2), (2, 9)]]
66  --->  [(4, 5), (5, 2), [(5, 2), (4, 6)], [(1, 0), (5, 3)], [(4, 6), (5, 6)], [(1, 0), (6, 0)], [(1, 0), (4, 0)], [(6, 5), (5, 7)], [(1, 0), (2, 0)], [(1, 1), (6, 7)], [(1, 1), (6, 4)], [(7, 3), (6, 6)], [(2, 1), (7, 2)], [(2, 1), (6, 1)], [(1, 9), (4, 9)], [(2, 2), (4, 2)]]
68  --->  [(4, 5), (5, 0), [(5, 2), (2, 6)], [(5, 5), (5, 7)], [(4, 6), (5, 4)], [(1, 0), (6, 0)], [(6, 5), (3, 7)], [(6, 3), (6, 4)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(1, 1), (6, 6)], [(2, 1), (7, 4)], [(2, 1), (7, 2)], [(1, 1), (3, 1)], [(1, 9), (5, 8)], [(2, 2), (6, 2)], [(2, 2), (4, 2)]]
62  --->  [(5, 2), (5, 3), [(1, 0), (5, 2)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(5, 7), (5, 6)], [(2, 0), (3, 7)], [(1, 1), (6, 3)], [(1, 1), (5, 1)], [(2, 2), (7, 4)], [(2, 1), (4, 1)], [(2, 3), (6, 5)], [(2, 0), (8, 0)], [(1, 3), (3, 9)], [(1, 2), (2, 8)], [(1, 2), (2, 6)]]
69  --->  [(5, 2), (1, 6), [(5, 5), (4, 7)], [(4, 6), (5, 3)], [(1, 0), (6, 1)], [(6, 3), (6, 5)], [(1, 0), (5, 0)], [(1, 0), (2, 1)], [(1, 1), (6, 7)], [(2, 1), (7, 3)], [(1, 1), (4, 1)], [(2, 2), (7, 2)], [(2, 2), (5, 2)], [(2, 1), (3, 1)], [(5, 9), (6, 9)]]
70  --->  [(5, 2), (0, 6), [(5, 5), (3, 7)], [(6, 2), (6, 1)], [(6, 3), (6, 6)], [(1, 0), (6, 0)], [(1, 0), (2, 2)], [(2, 1), (7, 4)], [(1, 1), (5, 1)], [(1, 1), (2, 1)], [(2, 2), (8, 2)], [(2, 2), (6, 2)], [(2, 1), (4, 1)], [(5, 9), (7, 9)]]
78  --->  [(3, 5), (4, 5), [(1, 0), (6, 3)], [(1, 0), (6, 1)], [(1, 1), (7, 4)], [(1, 0), (5, 0)], [(1, 0), (2, 0)], [(7, 6), (7, 5)], [(7, 8), (7, 7)], [(8, 3), (8, 7)], [(5, 9), (8, 2)]]
79  --->  [(3, 5), (5, 5), [(1, 0), (6, 4)], [(1, 0), (6, 2)], [(1, 1), (7, 5)], [(1, 0), (6, 0)], [(1, 0), (3, 0)], [(7, 6), (7, 4)], [(6, 8), (7, 8)], [(7, 8), (7, 6)], [(8, 3), (8, 8)], [(5, 9), (8, 1)]]
80  --->  [(3, 5), (5, 4), [(1, 0), (6, 5)], [(1, 0), (6, 3)], [(1, 0), (7, 0)], [(1, 0), (4, 0)], [(6, 8), (7, 7)], [(7, 8), (7, 5)], [(1, 0), (2, 0)], [(8, 3), (8, 9)], [(5, 9), (8, 0)]]
81  --->  [(3, 5), (5, 3), [(1, 6), (2, 6)], [(1, 0), (6, 6)], [(1, 0), (6, 4)], [(1, 0), (7, 1)], [(1, 0), (5, 0)], [(6, 8), (7, 6)], [(7, 8), (7, 4)], [(1, 0), (3, 0)], [(8, 3), (7, 9)]]
82  --->  [(3, 5), (5, 2), [(1, 6), (3, 6)], [(1, 0), (6, 5)], [(1, 0), (7, 2)], [(1, 0), (6, 0)], [(6, 8), (7, 5)], [(7, 8), (7, 3)], [(1, 1), (2, 1)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(8, 3), (6, 9)]]
83  --->  [(3, 5), (5, 1), [(1, 6), (4, 6)], [(1, 0), (6, 6)], [(1, 0), (7, 3)], [(1, 0), (7, 0)], [(6, 8), (7, 4)], [(1, 1), (3, 1)], [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(8, 3), (5, 9)]]
84  --->  [(3, 5), (5, 0), [(1, 6), (5, 6)], [(1, 7), (2, 7)], [(7, 1), (7, 2)], [(1, 0), (7, 1)], [(6, 8), (7, 3)], [(1, 1), (4, 1)], [(1, 1), (2, 1)], [(1, 0), (6, 0)], [(1, 0), (4, 0)], [(8, 2), (8, 1)], [(8, 3), (4, 9)]]
85  --->  [(1, 6), (5, 5), [(1, 7), (3, 7)], [(4, 7), (5, 7)], [(7, 1), (7, 3)], [(1, 0), (7, 2)], [(1, 1), (5, 1)], [(1, 1), (3, 1)], [(1, 0), (7, 0)], [(1, 0), (5, 0)], [(8, 3), (3, 9)]]
86  --->  [(1, 6), (5, 4), [(1, 7), (4, 7)], [(4, 7), (6, 7)], [(7, 1), (7, 4)], [(1, 0), (7, 3)], [(1, 1), (6, 1)], [(1, 1), (4, 1)], [(1, 0), (8, 0)], [(1, 0), (6, 0)], [(8, 3), (2, 9)]]
87  --->  [(1, 6), (5, 3), [(1, 7), (5, 7)], [(4, 7), (6, 6)], [(7, 1), (7, 5)], [(1, 1), (7, 1)], [(1, 1), (5, 1)], [(1, 0), (7, 0)], [(8, 3), (1, 9)]]
88  --->  [(1, 6), (5, 2), [(1, 7), (5, 6)], [(4, 7), (6, 5)], [(7, 1), (7, 6)], [(1, 1), (7, 2)], [(1, 1), (6, 1)], [(1, 0), (8, 0)]]
89  --->  [(1, 6), (5, 1), [(1, 7), (5, 5)], [(4, 7), (6, 4)], [(7, 1), (7, 7)], [(1, 1), (7, 3)], [(1, 1), (7, 1)]]
90  --->  [(1, 6), (5, 0), [(1, 7), (5, 4)], [(4, 7), (6, 3)], [(7, 1), (7, 8)], [(7, 4), (7, 3)], [(7, 5), (7, 6)], [(1, 1), (7, 4)], [(1, 1), (7, 2)], [(3, 9), (4, 9)]]
59  --->  [(1, 0), (4, 0), [(6, 1), (2, 7)], [(1, 1), (6, 3)], [(2, 1), (7, 1)], [(2, 0), (3, 4)], [(1, 1), (5, 1)], [(1, 1), (2, 1)], [(2, 2), (7, 5)], [(2, 2), (6, 2)], [(2, 0), (7, 4)], [(1, 2), (5, 6)], [(2, 3), (5, 3)], [(2, 0), (8, 1)], [(2, 0), (5, 0)], [(1, 3), (3, 9)], [(1, 3), (3, 6)], [(1, 2), (2, 5)], [(1, 2), (2, 3)]]
60  --->  [(1, 0), (5, 0), [(1, 0), (2, 0)], [(6, 1), (1, 7)], [(2, 0), (3, 5)], [(1, 1), (6, 1)], [(1, 1), (3, 1)], [(2, 2), (7, 6)], [(2, 2), (7, 2)], [(2, 0), (7, 5)], [(1, 2), (5, 7)], [(2, 3), (6, 3)], [(2, 0), (8, 2)], [(2, 0), (6, 0)], [(1, 3), (3, 7)], [(1, 2), (2, 6)], [(1, 2), (2, 4)]]
61  --->  [(1, 0), (5, 1), [(1, 0), (3, 0)], [(6, 1), (0, 7)], [(2, 0), (3, 6)], [(1, 1), (6, 2)], [(1, 1), (4, 1)], [(2, 2), (7, 7)], [(2, 2), (7, 3)], [(2, 1), (3, 1)], [(2, 0), (7, 6)], [(1, 2), (5, 8)], [(2, 3), (6, 4)], [(2, 0), (7, 0)], [(1, 3), (3, 8)], [(1, 2), (2, 7)], [(1, 2), (2, 5)]]
71  --->  [(5, 5), (2, 7), [(6, 3), (6, 7)], [(1, 0), (7, 0)], [(1, 0), (2, 3)], [(1, 0), (2, 0)], [(1, 1), (6, 1)], [(1, 1), (3, 1)], [(2, 2), (8, 3)], [(2, 2), (7, 2)], [(2, 1), (5, 1)], [(5, 9), (8, 9)]]
72  --->  [(5, 5), (1, 7), [(6, 3), (5, 7)], [(1, 0), (2, 4)], [(1, 0), (3, 0)], [(1, 1), (7, 1)], [(1, 1), (4, 1)], [(7, 7), (7, 8)], [(2, 2), (8, 2)], [(2, 1), (6, 1)], [(2, 1), (3, 1)], [(5, 9), (8, 8)]]
73  --->  [(5, 5), (0, 7), [(6, 3), (4, 7)], [(6, 6), (6, 5)], [(1, 0), (2, 5)], [(1, 0), (4, 0)], [(1, 0), (2, 0)], [(1, 1), (7, 2)], [(1, 1), (5, 1)], [(7, 7), (6, 8)], [(2, 2), (8, 3)], [(2, 1), (7, 1)], [(2, 1), (4, 1)], [(5, 9), (8, 7)]]
7  --->  [(2, 3), (2, 7), [(2, 3), (2, 5)]]
91  --->  [(1, 7), (5, 3), [(4, 7), (6, 2)], [(7, 1), (6, 8)], [(7, 5), (7, 7)], [(1, 1), (7, 5)], [(1, 1), (7, 3)], [(3, 9), (5, 9)]]
74  --->  [(6, 3), (3, 7), [(6, 6), (6, 4)], [(1, 0), (2, 6)], [(1, 0), (5, 0)], [(1, 0), (3, 0)], [(2, 8), (1, 8)], [(1, 1), (7, 3)], [(1, 1), (6, 1)], [(7, 7), (5, 8)], [(2, 1), (8, 1)], [(2, 1), (5, 1)], [(5, 9), (8, 6)]]
75  --->  [(6, 6), (6, 3), [(1, 0), (2, 7)], [(1, 0), (6, 0)], [(1, 0), (4, 0)], [(2, 8), (0, 8)], [(1, 1), (7, 4)], [(1, 1), (7, 1)], [(1, 0), (2, 0)], [(7, 7), (4, 8)], [(2, 1), (6, 1)], [(8, 3), (8, 4)], [(5, 9), (8, 5)]]
76  --->  [(6, 6), (6, 2), [(1, 0), (2, 8)], [(1, 0), (6, 1)], [(1, 0), (5, 0)], [(1, 1), (7, 5)], [(1, 1), (7, 2)], [(1, 0), (3, 0)], [(2, 1), (7, 1)], [(8, 3), (8, 5)], [(5, 9), (8, 4)]]
77  --->  [(6, 6), (6, 1), [(1, 0), (6, 2)], [(1, 0), (6, 0)], [(1, 1), (7, 3)], [(1, 0), (4, 0)], [(2, 1), (8, 1)], [(8, 3), (8, 6)], [(5, 9), (8, 3)]]
12  --->  [(2, 3), (5, 5), [(2, 3), (4, 3)]]
92  --->  [(4, 7), (6, 1), [(7, 1), (5, 8)], [(7, 5), (7, 8)], [(1, 1), (7, 6)], [(1, 1), (7, 4)], [(3, 9), (6, 9)]]
93  --->  [(7, 1), (4, 8), [(7, 5), (6, 8)], [(1, 1), (7, 7)], [(1, 1), (7, 5)], [(3, 9), (7, 9)]]
94  --->  [(7, 1), (3, 8), [(7, 5), (5, 8)], [(1, 1), (7, 8)], [(1, 1), (7, 6)], [(3, 9), (8, 9)]]
95  --->  [(7, 1), (2, 8), [(7, 5), (4, 8)], [(1, 1), (7, 7)], [(8, 2), (8, 3)], [(3, 9), (8, 8)]]
96  --->  [(7, 1), (1, 8), [(1, 1), (7, 8)], [(8, 2), (8, 4)], [(3, 9), (8, 7)]]
97  --->  [(7, 1), (0, 8), [(2, 8), (3, 8)], [(8, 2), (8, 5)], [(3, 9), (8, 6)]]
98  --->  [(2, 8), (4, 8), [(8, 2), (8, 6)], [(3, 9), (8, 5)]]
99  --->  [(2, 8), (5, 8), [(8, 2), (8, 7)], [(3, 9), (8, 4)]]
100  --->  [(2, 8), (6, 8), [(8, 2), (8, 8)], [(3, 9), (8, 3)]]
101  --->  [(2, 8), (6, 7), [(8, 2), (8, 9)], [(3, 9), (8, 2)]]
102  --->  [(2, 8), (6, 6), [(8, 2), (7, 9)], [(3, 9), (8, 1)]]
108  --->  [(1, 8), (2, 8), [(5, 8), (7, 7)], [(8, 8), (8, 6)], [(8, 2), (1, 9)]]
109  --->  [(1, 8), (3, 8), [(5, 8), (7, 6)], [(8, 8), (8, 5)]]
110  --->  [(1, 8), (4, 8), [(5, 8), (7, 5)], [(8, 8), (8, 4)]]
111  --->  [(1, 8), (5, 8), [(5, 8), (7, 4)], [(8, 8), (8, 3)]]
112  --->  [(1, 8), (6, 8), [(5, 8), (7, 3)], [(8, 8), (8, 2)]]
113  --->  [(1, 8), (6, 7), [(8, 8), (8, 1)]]
114  --->  [(1, 8), (6, 6), [(8, 8), (8, 0)]]
106  --->  [(5, 8), (6, 8), [(8, 2), (3, 9)]]
107  --->  [(5, 8), (7, 8), [(8, 8), (8, 7)], [(8, 2), (2, 9)]]
103  --->  [(8, 2), (6, 9), [(3, 9), (8, 0)]]
104  --->  [(8, 2), (5, 9)]
105  --->  [(8, 2), (4, 9)]
119  --->  [(2, 9), (3, 9)]
120  --->  [(2, 9), (4, 9)]
121  --->  [(2, 9), (5, 9)]
122  --->  [(2, 9), (6, 9)]
123  --->  [(2, 9), (7, 9)]
124  --->  [(2, 9), (8, 9)]
125  --->  [(2, 9), (8, 8)]
126  --->  [(2, 9), (8, 7)]
127  --->  [(2, 9), (8, 6)]
128  --->  [(2, 9), (8, 5)]
129  --->  [(2, 9), (8, 4)]
130  --->  [(2, 9), (8, 3)]
131  --->  [(2, 9), (8, 2)]
132  --->  [(2, 9), (8, 1)]
133  --->  [(2, 9), (8, 0)]

Rescheduler marker:
(0, 0)  --->  [[1, 3, 5, 7, 9, 10, 24, 26, 31, 33, 16, 14, 35, 37, 40, 48, 50, 52, 54, 57, 59, 61, 63, 65, 68, 70, 72, 75, 77, 79], [48], [12, 23, 30, 44, 46], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 24, 29, 31, 43, 45, 21, 47, 25, 26, 27, 28, 32, 33, 34, 35, 17, 18, 15, 16, 36, 37, 38, 39, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81], [4, 6, 8, 10, 21, 28, 42, 20, 27, 29, 34, 36, 19, 17, 38, 40, 43, 51, 53, 55, 57, 60, 62, 64, 66, 68, 71, 73, 75, 78, 80, 82]]
(0, 1)  --->  [[1, 5, 24, 7, 16, 21, 26, 42, 44, 29, 46, 48, 50, 53, 56, 64, 67, 79, 81], [22], [11, 20], [10, 2, 12, 6, 7, 19, 21, 25, 26, 8, 9, 17, 18, 22, 23, 27, 28, 43, 44, 45, 46, 30, 31, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 65, 66, 68, 69, 80, 81, 82, 83], [5, 9, 8, 18, 27, 41, 10, 19, 24, 20, 29, 45, 47, 32, 49, 51, 53, 56, 59, 67, 70, 82, 84]]
(0, 2)  --->  [[1, 2, 37, 5, 10, 12, 14, 24, 29, 19, 21, 34, 41, 26, 43, 46, 49, 53, 55], [35], [9, 18, 33], [8, 2, 10, 3, 4, 17, 19, 32, 34, 38, 39, 6, 7, 11, 12, 13, 14, 15, 16, 25, 26, 30, 31, 20, 21, 22, 23, 35, 36, 42, 43, 27, 28, 44, 45, 47, 48, 50, 51, 54, 55, 56, 57], [6, 7, 5, 16, 31, 40, 8, 13, 15, 17, 25, 21, 27, 32, 22, 24, 37, 44, 29, 46, 49, 52, 56, 58]]
(0, 3)  --->  [[1, 3, 27, 10, 13, 15, 17, 24, 29, 32, 34, 36, 42, 38, 40, 44, 46, 49, 52], [25], [9, 23], [6, 8, 10, 2, 3, 4, 5, 22, 24, 28, 29, 11, 12, 14, 15, 16, 17, 18, 19, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 43, 44, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 53, 54], [5, 7, 4, 6, 21, 15, 30, 13, 16, 18, 20, 26, 22, 27, 32, 35, 37, 39, 45, 41, 43, 47, 49, 52, 55]]
(0, 4)  --->  [[1, 4, 11, 8, 13, 15, 17, 23, 19, 21, 26, 29, 36, 38, 31, 40, 42, 34, 46], [9], [7], [2, 3, 6, 5, 8, 12, 13, 9, 10, 14, 15, 16, 17, 18, 19, 24, 25, 20, 21, 22, 23, 27, 28, 30, 31, 37, 38, 39, 40, 32, 33, 41, 42, 43, 44, 35, 36, 47, 48], [4, 5, 14, 11, 16, 18, 20, 27, 23, 26, 28, 22, 24, 29, 32, 39, 41, 42, 34, 43, 45, 48, 50, 37, 49]]
(0, 5)  --->  [[43], [41], [30, 39], [29, 25, 31, 38, 40, 44, 45], [28, 24, 37, 46, 29, 23, 25, 30, 43, 35, 49, 51]]
(0, 6)  --->  [[78], [76], [32, 53, 74], [31, 25, 33, 52, 54, 73, 75, 79, 80], [30, 24, 51, 72, 81, 26, 31, 44, 36, 50, 52]]
(0, 7)  --->  [[81], [79], [34, 65, 77], [28, 33, 35, 64, 66, 76, 78, 82, 83], [27, 32, 63, 75, 84, 45, 37, 51, 53]]
(0, 8)  --->  [[105], [103], [48, 79, 101], [47, 39, 49, 78, 80, 100, 102, 106, 107], [46, 38, 77, 99, 108, 52, 54]]
(0, 9)  --->  [[61], [59], [57], [54, 56, 58, 62, 63], [53, 55, 64]]
(1, 0)  --->  [[1, 3, 17, 5, 14, 19, 21, 23, 30, 28, 33, 39, 43, 37, 52, 45, 48, 50, 54], [15], [13], [2, 3, 4, 5, 11, 12, 14, 18, 19, 6, 7, 15, 16, 20, 21, 22, 23, 24, 25, 31, 32, 29, 30, 34, 35, 40, 41, 44, 45, 38, 39, 53, 54, 46, 47, 49, 50, 51, 52, 55, 56], [4, 6, 7, 10, 11, 20, 19, 8, 17, 28, 30, 35, 37, 22, 24, 18, 39, 41, 26, 44, 33, 52, 54, 56, 31, 36, 58, 61, 42, 46, 63, 65, 40, 67, 55, 69, 72, 74, 48, 51, 76, 79, 53, 57, 81, 83]]
(1, 1)  --->  [[14, 1, 3, 11, 16, 18, 21, 23, 29, 32, 44, 38, 46, 48, 52, 58, 60, 66, 69], [12], [10], [8, 9, 11, 15, 16, 2, 3, 4, 5, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 30, 31, 33, 34, 45, 46, 39, 40, 47, 48, 49, 50, 53, 54, 59, 60, 61, 62, 67, 68, 70, 71], [7, 8, 9, 17, 4, 6, 18, 14, 19, 11, 20, 21, 24, 30, 26, 32, 53, 46, 48, 35, 47, 33, 50, 41, 49, 52, 54, 51, 55, 57, 60, 61, 63, 68, 71, 69, 72, 83, 85]]
(1, 2)  --->  [[14, 1, 10, 18, 21, 12, 23, 26, 28, 16, 34, 36, 43, 49, 53, 62, 64], [11], [9], [6, 8, 10, 15, 16, 2, 3, 11, 12, 19, 20, 22, 23, 13, 14, 24, 25, 27, 28, 29, 30, 17, 18, 35, 36, 37, 38, 44, 45, 50, 51, 54, 55, 63, 64, 65, 66], [6, 5, 7, 17, 9, 14, 4, 13, 16, 18, 21, 24, 54, 28, 33, 15, 26, 29, 31, 23, 25, 19, 37, 38, 45, 30, 47, 39, 46, 52, 56, 50, 53, 65, 67, 57, 59]]
(1, 3)  --->  [[51, 1, 3, 5, 8, 10, 54, 34, 48], [49], [19, 31, 47], [15, 18, 20, 30, 32, 46, 48, 52, 53, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 55, 56, 35, 36, 49, 50], [20, 14, 17, 10, 15, 29, 45, 54, 19, 21, 22, 25, 33, 55, 36, 38, 4, 6, 40, 46, 8, 11, 44, 31, 48, 13, 57, 53, 56, 37, 51]]
(1, 4)  --->  [[22], [20], [18], [12, 17, 19, 23, 24], [12, 17, 11, 16, 25, 19, 21, 23, 26, 27, 34, 56, 37, 39, 33, 40, 42, 32, 49, 44, 46, 38, 50]]
(1, 5)  --->  [[34], [31], [29], [25, 28, 30, 35, 36], [36, 47, 24, 27, 37, 35, 57, 38, 40, 33, 50, 39, 51]]
(1, 6)  --->  [[64], [62], [60], [37, 59, 61, 65, 66], [36, 58, 50, 67, 71, 82, 39, 41, 34, 51, 40, 52]]
(1, 7)  --->  [[48], [46], [44], [41, 43, 45, 49, 50], [40, 42, 62, 51, 74, 85, 35, 52, 41, 53]]
(1, 8)  --->  [[94], [92], [55, 90], [37, 54, 56, 89, 91, 95, 96], [36, 53, 76, 88, 98, 97, 109, 42, 54]]
(1, 9)  --->  [[116], [114], [57, 91, 112], [44, 56, 58, 90, 92, 111, 113, 117, 118], [65, 43, 55, 89, 110, 119]]
(2, 0)  --->  [[13], [11], [9], [6, 8, 10, 14, 15], [5, 7, 16, 9, 18, 29, 31, 36, 38, 23, 25, 19, 40, 42, 27, 45, 34, 55, 57, 32, 37, 59, 62, 43, 47, 64, 66, 41, 68, 56, 70, 73, 75, 49, 52, 77, 80, 54, 58, 82, 84]]
(2, 1)  --->  [[], [63], [41, 47, 49, 59, 61], [38, 40, 42, 46, 48, 44, 50, 58, 60, 27, 62], [17, 15, 20, 12, 30, 21, 32, 37, 39, 45, 43, 57, 26, 22, 25, 31, 27, 33, 35, 47, 49, 36, 48, 34, 51, 42, 50, 53, 55, 52, 56, 71, 58, 61, 62, 64, 69, 72, 70, 73, 84, 86]]
(2, 2)  --->  [[39], [37], [33, 35], [14, 32, 34, 29, 36, 40, 41], [18, 13, 31, 22, 33, 28, 44, 42, 5, 14, 56, 17, 19, 36, 29, 34, 16, 27, 30, 32, 24, 26, 20, 38, 39, 46, 72, 40, 47, 53, 57, 51, 54, 66, 68, 58, 60]]
(2, 3)  --->  [[40], [38], [36], [24, 35, 37, 41, 42], [19, 23, 34, 28, 27, 43, 44, 55, 20, 22, 37, 30, 35, 5, 7, 41, 47, 9, 12, 45, 73, 14, 58, 54, 57, 59, 61, 38, 52]]
(2, 4)  --->  [[24], [22], [20], [14, 19, 21, 25, 26], [13, 18, 27, 26, 20, 22, 28, 38, 31, 36, 6, 8, 34, 41, 43, 46, 74, 45, 47, 60, 62]]
(2, 5)  --->  [[75], [73], [39, 71], [33, 38, 40, 70, 72, 76, 77], [35, 48, 38, 29, 39, 32, 37, 69, 78, 7, 9, 47, 75, 61, 63]]
(2, 6)  --->  [[46], [44], [42], [31, 41, 43, 47, 48], [30, 40, 49, 68, 70, 83, 8, 10, 48, 76, 62, 64]]
(2, 7)  --->  [[17], [15], [13], [10, 12, 14, 18, 19], [61, 52, 73, 9, 11, 86, 20, 49, 77, 63, 65]]
(2, 8)  --->  [[84], [82], [80], [51, 79, 81, 85, 86], [50, 78, 75, 87, 97, 98, 110, 64, 66]]
(2, 9)  --->  [[87], [78], [69, 76], [66, 68, 70, 75, 77, 88, 89], [66, 65, 67, 88, 74, 109, 90, 120]]
(3, 0)  --->  [[37], [35], [21, 33], [11, 20, 22, 32, 34, 38, 39], [10, 19, 31, 40, 24, 26, 20, 41, 43, 28, 46, 56, 58, 33, 38, 60, 63, 44, 48, 65, 67, 42, 69, 57, 74, 76, 50, 53, 78, 81, 55, 59, 83, 85]]
(3, 1)  --->  [[27], [25], [23], [17, 22, 24, 28, 29], [16, 21, 30, 41, 25, 23, 26, 32, 42, 44, 28, 34, 48, 50, 37, 49, 35, 52, 43, 51, 54, 56, 53, 57, 58, 59, 62, 63, 65, 70, 73, 71, 74, 85, 87]]
(3, 2)  --->  [[21], [19], [17], [7, 16, 18, 22, 23], [42, 6, 15, 24, 18, 20, 43, 45, 49, 51, 17, 28, 31, 33, 25, 27, 21, 39, 40, 47, 59, 41, 48, 54, 58, 52, 55, 67, 69]]
(3, 3)  --->  [[], [71], [48, 50, 53, 67, 69], [45, 47, 49, 46, 51, 52, 54, 66, 68, 42, 70], [43, 21, 23, 44, 46, 45, 51, 65, 41, 50, 52, 26, 28, 42, 48, 10, 13, 60, 15, 59, 55, 58, 39, 53]]
(3, 4)  --->  [[61], [59], [26, 36, 57], [23, 25, 27, 35, 37, 56, 58, 62, 63], [21, 23, 22, 24, 34, 55, 50, 64, 40, 51, 53, 27, 29, 35, 42, 44, 61, 46, 48, 56, 59]]
(3, 5)  --->  [[60], [58], [56], [53, 55, 57, 61, 62], [34, 49, 39, 52, 54, 63, 79, 28, 30, 36, 43, 45, 62, 57, 60]]
(3, 6)  --->  [[63], [58], [33, 56], [30, 32, 34, 55, 57, 64, 65], [69, 84, 29, 31, 54, 66, 37, 44, 46, 63, 58, 61]]
(3, 7)  --->  [[82], [80], [47, 72, 78], [39, 46, 48, 71, 73, 77, 79, 83, 84], [60, 53, 72, 87, 21, 38, 45, 70, 76, 85, 47, 64, 59, 62]]
(3, 8)  --->  [[71], [69], [67], [49, 66, 68, 72, 73], [48, 65, 74, 96, 99, 111, 60, 63]]
(3, 9)  --->  [[70], [68], [66], [62, 65, 67, 71, 72], [67, 61, 64, 87, 73, 108, 91, 121]]
(4, 0)  --->  [[47], [45], [29, 43], [26, 28, 30, 42, 44, 48, 49], [25, 27, 21, 41, 50, 29, 47, 57, 59, 34, 39, 61, 64, 45, 49, 66, 68, 43, 70, 75, 77, 51, 54, 79, 82, 56, 60, 84, 86]]
(4, 1)  --->  [[39], [37], [35], [34, 23, 36, 40, 41], [24, 27, 33, 22, 40, 42, 51, 29, 35, 38, 50, 36, 53, 44, 52, 55, 57, 54, 58, 60, 63, 64, 66, 71, 74, 72, 75, 86, 88]]
(4, 2)  --->  [[27], [25], [23], [20, 22, 24, 28, 29], [25, 28, 19, 21, 39, 30, 43, 52, 18, 29, 32, 34, 22, 40, 41, 48, 42, 49, 55, 59, 53, 56, 68, 70]]
(4, 3)  --->  [[35], [33], [31], [27, 30, 32, 36, 37], [26, 29, 38, 31, 44, 53, 19, 30, 33, 35, 43, 49, 11, 14, 16, 60, 40, 54]]
(4, 4)  --->  [[30], [28], [26], [23, 25, 27, 31, 32], [22, 24, 33, 32, 54, 20, 31, 34, 36, 44, 50, 47, 49, 41, 55]]
(4, 5)  --->  [[38], [36], [34], [22, 33, 35, 39, 40], [33, 64, 80, 21, 32, 41, 35, 37, 45, 51, 48, 50, 42, 56]]
(4, 6)  --->  [[44], [42], [40], [37, 39, 41, 45, 46], [68, 85, 36, 38, 47, 67, 46, 52, 49, 51, 43, 57]]
(4, 7)  --->  [[59], [57], [55], [48, 54, 56, 60, 61], [59, 71, 88, 22, 47, 53, 69, 62, 75, 86, 50, 52, 44, 58]]
(4, 8)  --->  [[103], [101], [55, 79, 99], [52, 54, 56, 78, 80, 98, 100, 104, 105], [95, 100, 112, 51, 53, 77, 97, 106, 45, 59]]
(4, 9)  --->  [[66], [64], [62], [47, 61, 63, 67, 68], [68, 86, 107, 92, 46, 60, 122, 69]]
(5, 0)  --->  [[], [98], [62, 72, 88, 94, 96], [59, 61, 63, 71, 73, 87, 89, 93, 95, 48, 97], [30, 48, 58, 60, 70, 86, 92, 47, 35, 40, 62, 65, 46, 50, 67, 69, 44, 71, 76, 78, 52, 55, 80, 83, 57, 61, 85, 87]]
(5, 1)  --->  [[59], [55], [51, 53], [32, 50, 52, 48, 54, 60, 61], [30, 36, 31, 49, 47, 69, 62, 85, 91, 46, 39, 51, 37, 54, 63, 66, 45, 53, 56, 58, 55, 59, 61, 64, 65, 67, 72, 75, 73, 76, 87, 89]]
(5, 2)  --->  [[43], [41], [39], [32, 38, 40, 44, 45], [31, 37, 46, 68, 63, 84, 90, 45, 40, 52, 38, 55, 64, 67, 23, 41, 42, 49, 43, 50, 56, 60, 54, 57, 69, 71]]
(5, 3)  --->  [[], [99], [70, 72, 74, 95, 97], [66, 69, 71, 70, 73, 72, 75, 94, 96, 28, 98], [67, 64, 83, 89, 44, 41, 53, 39, 56, 65, 68, 69, 71, 93, 27, 43, 50, 12, 15, 55, 58, 17, 61]]
(5, 4)  --->  [[64], [60], [56, 58], [43, 55, 57, 51, 59, 65, 66], [66, 65, 82, 88, 43, 42, 54, 40, 57, 50, 68, 67, 70, 92, 26, 44, 51, 13, 16, 56, 59]]
(5, 5)  --->  [[64], [62], [60], [42, 59, 61, 65, 66], [65, 66, 81, 87, 42, 41, 58, 49, 67, 68, 69, 91, 25, 45, 52, 14, 17, 57, 60]]
(5, 6)  --->  [[70], [68], [55, 66], [47, 54, 56, 65, 67, 71, 72], [67, 86, 48, 69, 68, 90, 24, 46, 53, 64, 73, 15, 18, 58, 61]]
(5, 7)  --->  [[25], [23], [21], [17, 20, 22, 26, 27], [58, 70, 89, 23, 68, 63, 74, 16, 19, 87, 28, 59, 62]]
(5, 8)  --->  [[76], [74], [65, 72], [61, 64, 66, 71, 73, 77, 78], [94, 101, 113, 60, 63, 76, 70, 96, 79, 107]]
(5, 9)  --->  [[], [], [], [], [69, 85, 106, 93, 123, 70]]
(6, 0)  --->  [[47], [45], [43], [37, 42, 44, 48, 49], [36, 41, 50, 47, 51, 68, 70, 45, 72, 77, 79, 53, 56, 81, 84, 58, 62, 86, 88]]
(6, 1)  --->  [[], [100], [73, 75, 81, 96, 98], [70, 72, 74, 73, 76, 80, 82, 95, 97, 36, 99], [51, 46, 54, 48, 52, 57, 59, 69, 71, 72, 79, 94, 35, 56, 60, 62, 65, 78, 80, 66, 68, 73, 76, 74, 77, 88, 90]]
(6, 2)  --->  [[65], [63], [57, 61], [48, 56, 58, 60, 62, 66, 67], [52, 24, 42, 47, 55, 49, 53, 58, 60, 59, 71, 68, 78, 93, 34, 63, 66, 79, 81, 44, 51, 57, 61, 70, 72]]
(6, 3)  --->  [[67], [65], [63], [60, 62, 64, 68, 69], [53, 25, 43, 50, 54, 59, 61, 58, 70, 69, 77, 92, 33, 64, 67, 80, 82, 18, 62]]
(6, 4)  --->  [[61], [59], [57], [52, 56, 58, 62, 63], [54, 26, 44, 51, 55, 57, 64, 70, 76, 91, 32, 65, 68, 81, 83, 19, 63]]
(6, 5)  --->  [[53], [49], [47], [28, 46, 48, 54, 55], [55, 27, 45, 56, 65, 71, 75, 90, 31, 66, 69, 82, 84, 20, 64]]
(6, 6)  --->  [[], [122], [87, 89, 106, 118, 120], [84, 86, 88, 82, 90, 105, 107, 117, 119, 69, 121], [56, 66, 72, 74, 89, 30, 67, 70, 83, 85, 81, 104, 116, 68, 21, 65]]
(6, 7)  --->  [[77], [75], [73], [69, 72, 74, 78, 79], [57, 67, 73, 88, 29, 68, 71, 80, 103, 115, 22, 66]]
(6, 8)  --->  [[75], [71], [69], [24, 68, 70, 76, 77], [93, 102, 114, 75, 95, 80, 23, 67, 108, 78]]
(6, 9)  --->  [[], [], [], [], [84, 105, 94, 124, 71]]
(7, 0)  --->  [[81], [79], [75, 77], [47, 74, 76, 72, 78, 82, 83], [46, 73, 71, 84, 54, 57, 82, 85, 59, 63, 87, 89]]
(7, 1)  --->  [[67], [65], [63], [58, 62, 64, 68, 69], [57, 61, 70, 85, 67, 69, 55, 58, 74, 77, 83, 86, 75, 78, 89, 91]]
(7, 2)  --->  [[60], [56], [54], [46, 53, 55, 61, 62], [86, 45, 52, 63, 58, 62, 68, 70, 56, 59, 75, 78, 84, 87, 71, 73, 90, 92]]
(7, 3)  --->  [[], [120], [90, 94, 96, 116, 118], [86, 89, 91, 93, 95, 87, 97, 115, 117, 85, 119], [87, 64, 59, 63, 69, 71, 57, 60, 76, 79, 85, 88, 92, 86, 114, 84, 91, 93]]
(7, 4)  --->  [[87], [85], [74, 83], [71, 73, 75, 82, 84, 88, 89], [88, 65, 60, 64, 70, 72, 58, 61, 77, 80, 81, 91, 90, 85, 113, 83, 92, 94]]
(7, 5)  --->  [[87], [85], [83], [79, 82, 84, 88, 89], [89, 66, 61, 65, 59, 62, 78, 81, 80, 90, 91, 84, 112, 82, 93, 95]]
(7, 6)  --->  [[69], [67], [65], [61, 64, 66, 70, 71], [90, 67, 62, 66, 60, 63, 79, 72, 92, 83, 111, 81, 94, 96]]
(7, 7)  --->  [[75], [71], [69], [64, 68, 70, 76, 77], [91, 63, 67, 78, 73, 93, 82, 110, 80, 95, 97]]
(7, 8)  --->  [[104], [102], [100], [97, 99, 101, 105, 106], [92, 74, 94, 81, 109, 79, 96, 98, 107]]
(7, 9)  --->  [[], [], [], [], [83, 104, 95, 125, 72]]
(8, 0)  --->  [[], [141], [92, 118, 120, 137, 139], [89, 91, 93, 117, 119, 106, 121, 136, 138, 83, 140], [60, 64, 88, 90, 116, 105, 135, 82]]
(8, 1)  --->  [[92], [90], [81, 88], [77, 80, 82, 87, 89, 93, 94], [76, 79, 61, 65, 86, 115, 95, 104, 134, 81]]
(8, 2)  --->  [[72], [70], [68], [63, 67, 69, 73, 74], [72, 74, 62, 66, 85, 75, 114, 96, 103, 133, 80]]
(8, 3)  --->  [[81], [79], [77], [74, 76, 78, 82, 83], [73, 75, 84, 76, 113, 97, 102, 132, 79]]
(8, 4)  --->  [[], [], [], [], [77, 112, 98, 101, 131, 78]]
(8, 5)  --->  [[], [], [], [], [78, 111, 99, 100, 130, 77]]
(8, 6)  --->  [[], [], [], [], [79, 110, 100, 99, 129, 76]]
(8, 7)  --->  [[], [], [], [], [80, 109, 101, 98, 128, 75]]
(8, 8)  --->  [[], [], [], [], [81, 108, 102, 97, 127, 74]]
(8, 9)  --->  [[], [], [], [], [82, 103, 96, 126, 73]]
(9, 0)  --->  [[], [], [], [], []]
(9, 1)  --->  [[], [], [], [], []]
(9, 2)  --->  [[], [], [], [], []]
(9, 3)  --->  [[], [], [], [], []]
(9, 4)  --->  [[], [], [], [], []]
(9, 5)  --->  [[], [], [], [], []]
(9, 6)  --->  [[], [], [], [], []]
(9, 7)  --->  [[], [], [], [], []]
(9, 8)  --->  [[], [], [], [], []]
(9, 9)  --->  [[], [], [], [], []]

Scheduling duration in clocks:  142

CCM Size in bits:  7628

CCM Size in bytes:  954
